

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Wed Jul 03 14:56:58 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	18F2550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     8                           	psect	nvBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
     9                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    10                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    16                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    17                           	psect	text0,global,reloc=2,class=CODE,delta=1
    18                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=2
    19                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=2
    20                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=4
    21                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=4
    22                           	psect	text5,global,reloc=2,class=CODE,delta=1
    23                           	psect	text6,global,reloc=2,class=CODE,delta=1
    24                           	psect	text7,global,reloc=2,class=CODE,delta=1
    25                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=4
    26                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=4
    27                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=4
    28                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=4
    29                           	psect	text12,global,reloc=2,class=CODE,delta=1
    30                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=3
    31                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=3
    32                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=4
    33                           	psect	text16,global,reloc=2,class=CODE,delta=1
    34                           	psect	text17,global,reloc=2,class=CODE,delta=1
    35                           	psect	text18,global,reloc=2,class=CODE,delta=1
    36                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=4
    37                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=3
    38                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=3
    39                           	psect	text22,global,reloc=2,class=CODE,delta=1
    40                           	psect	text23,global,reloc=2,class=CODE,delta=1
    41                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=4
    42                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=4
    43                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=4
    44                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=4
    45                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=4
    46                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=4
    47                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=3
    48                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=2
    49                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=4
    50                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=3
    51                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=3
    52                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=3
    53                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=3
    54                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=3
    55                           	psect	text38,global,reloc=2,class=CODE,delta=1,group=3
    56                           	psect	text39,global,reloc=2,class=CODE,delta=1,group=2
    57                           	psect	text40,global,reloc=2,class=CODE,delta=1,group=1
    58                           	psect	text41,global,reloc=2,class=CODE,delta=1,group=2
    59                           	psect	text42,global,reloc=2,class=CODE,delta=1,group=1
    60                           	psect	text43,global,reloc=2,class=CODE,delta=1
    61                           	psect	text44,global,reloc=2,class=CODE,delta=1,group=1
    62                           	psect	text45,global,reloc=2,class=CODE,delta=1,group=4
    63                           	psect	text46,global,reloc=2,class=CODE,delta=1,group=1
    64                           	psect	text47,global,reloc=2,class=CODE,delta=1,group=1
    65                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    66                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    67                           	psect	text49,global,reloc=2,class=CODE,delta=1,group=1
    68                           	psect	text50,global,reloc=2,class=CODE,delta=1,group=2
    69                           	psect	text51,global,reloc=2,class=CODE,delta=1,inline,group=2
    70                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    71                           	psect	text52,global,reloc=2,class=CODE,delta=1,inline,group=2
    72                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    73                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    74  0000                     
    75                           ; Version 2.05
    76                           ; Generated 20/12/2018 GMT
    77                           ; 
    78                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    79                           ; All rights reserved.
    80                           ; 
    81                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    82                           ; 
    83                           ; Redistribution and use in source and binary forms, with or without modification, are
    84                           ; permitted provided that the following conditions are met:
    85                           ; 
    86                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    87                           ;        conditions and the following disclaimer.
    88                           ; 
    89                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    90                           ;        of conditions and the following disclaimer in the documentation and/or other
    91                           ;        materials provided with the distribution.
    92                           ; 
    93                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    94                           ;        software without specific prior written permission.
    95                           ; 
    96                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    97                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    98                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    99                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   100                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   101                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   102                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   103                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   104                           ; 
   105                           ; 
   106                           ; Code-generator required, PIC18F2550 Definitions
   107                           ; 
   108                           ; SFR Addresses
   109  0000                     
   110                           	psect	idataBANK0
   111  00424F                     __pidataBANK0:
   112                           	opt callstack 0
   113                           
   114                           ;initializer for _count_sec
   115  00424F  0001               	dw	1
   116                           
   117                           ;initializer for _count
   118  004251  01                 	db	1
   119                           
   120                           	psect	idataBANK1
   121  004248                     __pidataBANK1:
   122                           	opt callstack 0
   123                           
   124                           ;initializer for stoa@F1152
   125  004248  28                 	db	40
   126  004249  6E                 	db	110
   127  00424A  75                 	db	117
   128  00424B  6C                 	db	108
   129  00424C  6C                 	db	108
   130  00424D  29                 	db	41
   131  00424E  00                 	db	0
   132                           
   133                           	psect	smallconst
   134  000800                     __psmallconst:
   135                           	opt callstack 0
   136  000800  00                 	db	0
   137  000801  9E26               	dw	40486
   138  000803  3E78               	dw	15992
   139  000805                     __end_of_Lg4:
   140                           	opt callstack 0
   141  000805  E9EE               	dw	59886
   142  000807  3E91               	dw	16017
   143  000809                     __end_of_Lg3:
   144                           	opt callstack 0
   145  000809  CE13               	dw	52755
   146  00080B  3ECC               	dw	16076
   147  00080D                     __end_of_Lg2:
   148                           	opt callstack 0
   149  00080D  AAAA               	dw	43690
   150  00080F  3F2A               	dw	16170
   151  000811                     __end_of_Lg1:
   152                           	opt callstack 0
   153  000811  F7D1               	dw	63441
   154  000813  3717               	dw	14103
   155  000815                     __end_of_ln2_lo:
   156                           	opt callstack 0
   157  000815  7180               	dw	29056
   158  000817  3F31               	dw	16177
   159  000819                     __end_of_ln2_hi:
   160                           	opt callstack 0
   161  000819  E0                 	db	224
   162  00081A                     __end_ofdisplay3@dig_mask:
   163                           	opt callstack 0
   164  00081A  0F                 	db	15
   165  00081B                     __end_ofsend_digit@com_mask:
   166                           	opt callstack 0
   167  00081B                     character_table@h:
   168                           	opt callstack 0
   169  00081B  80                 	db	128
   170  00081C                     __end_ofcharacter_table@h:
   171                           	opt callstack 0
   172  00081C  40                 	db	64
   173  00081D                     __end_ofcharacter_table@g:
   174                           	opt callstack 0
   175  00081D  20                 	db	32
   176  00081E                     __end_ofcharacter_table@f:
   177                           	opt callstack 0
   178  00081E  10                 	db	16
   179  00081F                     __end_ofcharacter_table@e:
   180                           	opt callstack 0
   181  00081F  08                 	db	8
   182  000820                     __end_ofcharacter_table@d:
   183                           	opt callstack 0
   184  000820  04                 	db	4
   185  000821                     __end_ofcharacter_table@c:
   186                           	opt callstack 0
   187  000821  02                 	db	2
   188  000822                     __end_ofcharacter_table@b:
   189                           	opt callstack 0
   190  000822  01                 	db	1
   191  000823                     __end_ofcharacter_table@a:
   192                           	opt callstack 0
   193  000823                     character_table@o:
   194                           	opt callstack 0
   195  000823  00                 	db	0
   196  000824                     __end_ofcharacter_table@o:
   197                           	opt callstack 0
   198  000824                     _BIT_7:
   199                           	opt callstack 0
   200  000824  80                 	db	128
   201  000825                     __end_of_BIT_7:
   202                           	opt callstack 0
   203  000825                     _BIT_6:
   204                           	opt callstack 0
   205  000825  40                 	db	64
   206  000826                     __end_of_BIT_6:
   207                           	opt callstack 0
   208  000826  20                 	db	32
   209  000827                     __end_of_BIT_5:
   210                           	opt callstack 0
   211  000827                     _BIT_4:
   212                           	opt callstack 0
   213  000827  10                 	db	16
   214  000828                     __end_of_BIT_4:
   215                           	opt callstack 0
   216  000828                     _BIT_3:
   217                           	opt callstack 0
   218  000828  08                 	db	8
   219  000829                     __end_of_BIT_3:
   220                           	opt callstack 0
   221  000829  04                 	db	4
   222  00082A                     __end_of_BIT_2:
   223                           	opt callstack 0
   224  00082A                     _BIT_1:
   225                           	opt callstack 0
   226  00082A  02                 	db	2
   227  00082B                     __end_of_BIT_1:
   228                           	opt callstack 0
   229  00082B                     _BIT_0:
   230                           	opt callstack 0
   231  00082B  01                 	db	1
   232  00082C                     __end_of_BIT_0:
   233                           	opt callstack 0
   234  00082C  80                 	db	128
   235  00082D                     __end_of_DIG3:
   236                           	opt callstack 0
   237  00082D  40                 	db	64
   238  00082E                     __end_of_DIG2:
   239                           	opt callstack 0
   240  00082E  10                 	db	16
   241  00082F                     __end_of_OE:
   242                           	opt callstack 0
   243  00082F  08                 	db	8
   244  000830                     __end_of_RCLK:
   245                           	opt callstack 0
   246  000830  04                 	db	4
   247  000831                     __end_of_SRCLR:
   248                           	opt callstack 0
   249  000831  02                 	db	2
   250  000832                     __end_of_SRCLK:
   251                           	opt callstack 0
   252  000832  20                 	db	32
   253  000833                     __end_of_DIG1:
   254                           	opt callstack 0
   255  000833  01                 	db	1
   256  000834                     __end_of_SER:
   257                           	opt callstack 0
   258  000834                     STR_77:
   259                           
   260                           ; BSR set to: 1
   261  000834  68                 	db	104	;'h'
   262  000835  68                 	db	104	;'h'
   263  000836  58                 	db	88	;'X'
   264  000837  00                 	db	0
   265  000838                     STR_1:
   266                           
   267                           ; BSR set to: 1
   268  000838  68                 	db	104	;'h'
   269  000839  68                 	db	104	;'h'
   270  00083A  64                 	db	100	;'d'
   271  00083B  00                 	db	0
   272  00083C                     STR_5:
   273                           
   274                           ; BSR set to: 1
   275  00083C  68                 	db	104	;'h'
   276  00083D  68                 	db	104	;'h'
   277  00083E  69                 	db	105	;'i'
   278  00083F  00                 	db	0
   279  000840                     STR_43:
   280                           
   281                           ; BSR set to: 1
   282  000840  68                 	db	104	;'h'
   283  000841  68                 	db	104	;'h'
   284  000842  6E                 	db	110	;'n'
   285  000843  00                 	db	0
   286  000844                     STR_28:
   287                           
   288                           ; BSR set to: 1
   289  000844  68                 	db	104	;'h'
   290  000845  68                 	db	104	;'h'
   291  000846  6F                 	db	111	;'o'
   292  000847  00                 	db	0
   293  000848                     STR_58:
   294                           
   295                           ; BSR set to: 1
   296  000848  68                 	db	104	;'h'
   297  000849  68                 	db	104	;'h'
   298  00084A  75                 	db	117	;'u'
   299  00084B  00                 	db	0
   300  00084C                     STR_73:
   301                           
   302                           ; BSR set to: 1
   303  00084C  68                 	db	104	;'h'
   304  00084D  68                 	db	104	;'h'
   305  00084E  78                 	db	120	;'x'
   306  00084F  00                 	db	0
   307  000850                     STR_100:
   308                           
   309                           ; BSR set to: 1
   310  000850  25                 	db	37
   311  000851  64                 	db	100	;'d'
   312  000852  00                 	db	0
   313  000853                     STR_95:
   314                           
   315                           ; BSR set to: 1
   316  000853  7A                 	db	122	;'z'
   317  000854  58                 	db	88	;'X'
   318  000855  00                 	db	0
   319  000856                     STR_19:
   320                           
   321                           ; BSR set to: 1
   322  000856  7A                 	db	122	;'z'
   323  000857  64                 	db	100	;'d'
   324  000858  00                 	db	0
   325  000859                     STR_23:
   326                           
   327                           ; BSR set to: 1
   328  000859  7A                 	db	122	;'z'
   329  00085A  69                 	db	105	;'i'
   330  00085B  00                 	db	0
   331  00085C                     STR_53:
   332                           
   333                           ; BSR set to: 1
   334  00085C  7A                 	db	122	;'z'
   335  00085D  6E                 	db	110	;'n'
   336  00085E  00                 	db	0
   337  00085F                     STR_38:
   338                           
   339                           ; BSR set to: 1
   340  00085F  7A                 	db	122	;'z'
   341  000860  6F                 	db	111	;'o'
   342  000861  00                 	db	0
   343  000862                     STR_68:
   344                           
   345                           ; BSR set to: 1
   346  000862  7A                 	db	122	;'z'
   347  000863  75                 	db	117	;'u'
   348  000864  00                 	db	0
   349  000865                     STR_91:
   350                           
   351                           ; BSR set to: 1
   352  000865  7A                 	db	122	;'z'
   353  000866  78                 	db	120	;'x'
   354  000867  00                 	db	0
   355  0000                     
   356                           ; #config settings
   357  000868  00                 	db	0	; dummy byte at the end
   358  0000                     
   359                           	psect	nvBANK1
   360  00013D                     __pnvBANK1:
   361                           	opt callstack 0
   362  00013D                     _ptr_ISR:
   363                           	opt callstack 0
   364  00013D                     	ds	2
   365  0000                     _ADRESH	set	4036
   366  0000                     _ADRESL	set	4035
   367  0000                     _PIE1bits	set	3997
   368  0000                     _PIR1bits	set	3998
   369  0000                     _TRISAbits	set	3986
   370  0000                     _ADCON2bits	set	4032
   371  0000                     _ADCON1bits	set	4033
   372  0000                     _ADCON0bits	set	4034
   373  0000                     _RCONbits	set	4048
   374  0000                     _INTCONbits	set	4082
   375  0000                     _TMR0L	set	4054
   376  0000                     _TMR0H	set	4055
   377  0000                     _T0CON	set	4053
   378  0000                     _INTCON	set	4082
   379  0000                     _LATB	set	3978
   380  0000                     _OSCCON	set	4051
   381  0000                     _TRISB	set	3987
   382  0000                     _ADCON1	set	4033
   383  0000                     _CMCON	set	4020
   384  0000                     _PORTB	set	3969
   385  0000                     _ADIF	set	31990
   386                           
   387                           	psect	cinit
   388  003CCA                     __pcinit:
   389                           	opt callstack 0
   390  003CCA                     start_initialization:
   391                           	opt callstack 0
   392  003CCA                     __initialization:
   393                           	opt callstack 0
   394                           
   395                           ; Initialize objects allocated to BANK1 (7 bytes)
   396                           ; load TBLPTR registers with __pidataBANK1
   397  003CCA  0E48               	movlw	low __pidataBANK1
   398  003CCC  6EF6               	movwf	tblptrl,c
   399  003CCE  0E42               	movlw	high __pidataBANK1
   400  003CD0  6EF7               	movwf	tblptrh,c
   401  003CD2  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   402  003CD4  6EF8               	movwf	tblptru,c
   403  003CD6  EE01  F036         	lfsr	0,__pdataBANK1
   404  003CDA  EE10 F007          	lfsr	1,7
   405  003CDE                     copy_data0:
   406  003CDE  0009               	tblrd		*+
   407  003CE0  CFF5 FFEE          	movff	tablat,postinc0
   408  003CE4  50E5               	movf	postdec1,w,c
   409  003CE6  50E1               	movf	fsr1l,w,c
   410  003CE8  E1FA               	bnz	copy_data0
   411                           
   412                           ; Initialize objects allocated to BANK0 (3 bytes)
   413                           ; load TBLPTR registers with __pidataBANK0
   414  003CEA  0E4F               	movlw	low __pidataBANK0
   415  003CEC  6EF6               	movwf	tblptrl,c
   416  003CEE  0E42               	movlw	high __pidataBANK0
   417  003CF0  6EF7               	movwf	tblptrh,c
   418  003CF2  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   419  003CF4  6EF8               	movwf	tblptru,c
   420  003CF6  0009               	tblrd		*+	;fetch initializer
   421  003CF8  CFF5 F0FC          	movff	tablat,__pdataBANK0
   422  003CFC  0009               	tblrd		*+	;fetch initializer
   423  003CFE  CFF5 F0FD          	movff	tablat,__pdataBANK0+1
   424  003D02  0009               	tblrd		*+	;fetch initializer
   425  003D04  CFF5 F0FE          	movff	tablat,__pdataBANK0+2
   426                           
   427                           ; Clear objects allocated to BANK1 (54 bytes)
   428  003D08  EE01  F000         	lfsr	0,__pbssBANK1
   429  003D0C  0E36               	movlw	54
   430  003D0E                     clear_0:
   431  003D0E  6AEE               	clrf	postinc0,c
   432  003D10  06E8               	decf	wreg,f,c
   433  003D12  E1FD               	bnz	clear_0
   434                           
   435                           ; Clear objects allocated to BANK0 (18 bytes)
   436  003D14  EE00  F0EA         	lfsr	0,__pbssBANK0
   437  003D18  0E12               	movlw	18
   438  003D1A                     clear_1:
   439  003D1A  6AEE               	clrf	postinc0,c
   440  003D1C  06E8               	decf	wreg,f,c
   441  003D1E  E1FD               	bnz	clear_1
   442                           
   443                           ; Clear objects allocated to COMRAM (2 bytes)
   444  003D20  6A5C               	clrf	(__pbssCOMRAM+1)& (0+255),c
   445  003D22  6A5B               	clrf	__pbssCOMRAM& (0+255),c
   446  003D24                     end_of_initialization:
   447                           	opt callstack 0
   448  003D24                     __end_of__initialization:
   449                           	opt callstack 0
   450  003D24  905D               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   451  003D26  925D               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   452  003D28  0E00               	movlw	low (__Lmediumconst shr (0+16))
   453  003D2A  6EF8               	movwf	tblptru,c
   454  003D2C  0100               	movlb	0
   455  003D2E  EFE9  F020         	goto	_main	;jump to C main() function
   456                           
   457                           	psect	bssCOMRAM
   458  00005B                     __pbssCOMRAM:
   459                           	opt callstack 0
   460  00005B                     _flags:
   461                           	opt callstack 0
   462  00005B                     	ds	2
   463                           
   464                           	psect	bssBANK0
   465  0000EA                     __pbssBANK0:
   466                           	opt callstack 0
   467  0000EA                     logf@F469:
   468                           	opt callstack 0
   469  0000EA                     	ds	4
   470  0000EE                     _errno:
   471                           	opt callstack 0
   472  0000EE                     	ds	2
   473  0000F0                     _count_sec_OLD:
   474                           	opt callstack 0
   475  0000F0                     	ds	2
   476  0000F2                     _nout:
   477                           	opt callstack 0
   478  0000F2                     	ds	2
   479  0000F4                     _width:
   480                           	opt callstack 0
   481  0000F4                     	ds	2
   482  0000F6                     _prec:
   483                           	opt callstack 0
   484  0000F6                     	ds	2
   485  0000F8                     _buffer:
   486                           	opt callstack 0
   487  0000F8                     	ds	4
   488                           
   489                           	psect	dataBANK0
   490  0000FC                     __pdataBANK0:
   491                           	opt callstack 0
   492  0000FC                     _count_sec:
   493                           	opt callstack 0
   494  0000FC                     	ds	2
   495  0000FE                     _count:
   496                           	opt callstack 0
   497  0000FE                     	ds	1
   498                           
   499                           	psect	bssBANK1
   500  000100                     __pbssBANK1:
   501                           	opt callstack 0
   502  000100                     _thermistor:
   503                           	opt callstack 0
   504  000100                     	ds	15
   505  00010F                     _dbuf:
   506                           	opt callstack 0
   507  00010F                     	ds	32
   508  00012F                     _ADC_results:
   509                           	opt callstack 0
   510  00012F                     	ds	7
   511                           
   512                           	psect	dataBANK1
   513  000136                     __pdataBANK1:
   514                           	opt callstack 0
   515  000136                     stoa@F1152:
   516                           	opt callstack 0
   517  000136                     	ds	7
   518                           
   519                           	psect	cstackBANK0
   520  000060                     __pcstackBANK0:
   521                           	opt callstack 0
   522  000060                     ?_logf:
   523                           	opt callstack 0
   524  000060                     ?___fltol:
   525                           	opt callstack 0
   526  000060                     vfpfcnvrt@cp:
   527                           	opt callstack 0
   528  000060                     ___fltol@f1:
   529                           	opt callstack 0
   530  000060                     logf@x:
   531                           	opt callstack 0
   532                           
   533                           ; 4 bytes @ 0x0
   534  000060                     	ds	2
   535  000062                     vfpfcnvrt@done:
   536                           	opt callstack 0
   537                           
   538                           ; 2 bytes @ 0x2
   539  000062                     	ds	2
   540  000064                     ??_logf:
   541  000064                     ??___fltol:
   542  000064                     _vfpfcnvrt$198:
   543                           	opt callstack 0
   544                           
   545                           ; 2 bytes @ 0x4
   546  000064                     	ds	2
   547  000066                     _vfpfcnvrt$199:
   548                           	opt callstack 0
   549                           
   550                           ; 2 bytes @ 0x6
   551  000066                     	ds	2
   552  000068                     ___fltol@sign1:
   553                           	opt callstack 0
   554  000068                     vfpfcnvrt@ll:
   555                           	opt callstack 0
   556                           
   557                           ; 8 bytes @ 0x8
   558  000068                     	ds	1
   559  000069                     ___fltol@exp1:
   560                           	opt callstack 0
   561                           
   562                           ; 1 bytes @ 0x9
   563  000069                     	ds	1
   564  00006A                     logf@R:
   565                           	opt callstack 0
   566                           
   567                           ; 4 bytes @ 0xA
   568  00006A                     	ds	4
   569  00006E                     logf@t1:
   570                           	opt callstack 0
   571                           
   572                           ; 4 bytes @ 0xE
   573  00006E                     	ds	2
   574  000070                     vfpfcnvrt@vp:
   575                           	opt callstack 0
   576                           
   577                           ; 2 bytes @ 0x10
   578  000070                     	ds	2
   579  000072                     vfpfcnvrt@c:
   580                           	opt callstack 0
   581  000072                     logf@t2:
   582                           	opt callstack 0
   583                           
   584                           ; 4 bytes @ 0x12
   585  000072                     	ds	1
   586  000073                     vfpfcnvrt@llu:
   587                           	opt callstack 0
   588                           
   589                           ; 8 bytes @ 0x13
   590  000073                     	ds	3
   591  000076                     _logf$1783:
   592                           	opt callstack 0
   593                           
   594                           ; 4 bytes @ 0x16
   595  000076                     	ds	4
   596  00007A                     _logf$1784:
   597                           	opt callstack 0
   598                           
   599                           ; 4 bytes @ 0x1A
   600  00007A                     	ds	1
   601  00007B                     ?_vsnprintf:
   602                           	opt callstack 0
   603  00007B                     vsnprintf@s:
   604                           	opt callstack 0
   605                           
   606                           ; 2 bytes @ 0x1B
   607  00007B                     	ds	2
   608  00007D                     vsnprintf@n:
   609                           	opt callstack 0
   610                           
   611                           ; 2 bytes @ 0x1D
   612  00007D                     	ds	1
   613  00007E                     _logf$1785:
   614                           	opt callstack 0
   615                           
   616                           ; 4 bytes @ 0x1E
   617  00007E                     	ds	1
   618  00007F                     vsnprintf@fmt:
   619                           	opt callstack 0
   620                           
   621                           ; 2 bytes @ 0x1F
   622  00007F                     	ds	2
   623  000081                     vsnprintf@ap:
   624                           	opt callstack 0
   625                           
   626                           ; 2 bytes @ 0x21
   627  000081                     	ds	1
   628  000082                     _logf$1786:
   629                           	opt callstack 0
   630                           
   631                           ; 4 bytes @ 0x22
   632  000082                     	ds	1
   633  000083                     _vsnprintf$1520:
   634                           	opt callstack 0
   635                           
   636                           ; 2 bytes @ 0x23
   637  000083                     	ds	2
   638  000085                     vsnprintf@cnt:
   639                           	opt callstack 0
   640                           
   641                           ; 2 bytes @ 0x25
   642  000085                     	ds	1
   643  000086                     logf@k:
   644                           	opt callstack 0
   645                           
   646                           ; 2 bytes @ 0x26
   647  000086                     	ds	1
   648  000087                     vsnprintf@f:
   649                           	opt callstack 0
   650                           
   651                           ; 6 bytes @ 0x27
   652  000087                     	ds	1
   653  000088                     logf@hfsq:
   654                           	opt callstack 0
   655                           
   656                           ; 4 bytes @ 0x28
   657  000088                     	ds	4
   658  00008C                     logf@dk:
   659                           	opt callstack 0
   660                           
   661                           ; 4 bytes @ 0x2C
   662  00008C                     	ds	4
   663  000090                     logf@s:
   664                           	opt callstack 0
   665                           
   666                           ; 4 bytes @ 0x30
   667  000090                     	ds	4
   668  000094                     logf@z:
   669                           	opt callstack 0
   670                           
   671                           ; 4 bytes @ 0x34
   672  000094                     	ds	4
   673  000098                     logf@w:
   674                           	opt callstack 0
   675                           
   676                           ; 4 bytes @ 0x38
   677  000098                     	ds	4
   678  00009C                     _logf$1782:
   679                           	opt callstack 0
   680                           
   681                           ; 4 bytes @ 0x3C
   682  00009C                     	ds	4
   683  0000A0                     logf@u:
   684                           	opt callstack 0
   685                           
   686                           ; 4 bytes @ 0x40
   687  0000A0                     	ds	4
   688  0000A4                     logf@f:
   689                           	opt callstack 0
   690                           
   691                           ; 4 bytes @ 0x44
   692  0000A4                     	ds	4
   693  0000A8                     logf@ix:
   694                           	opt callstack 0
   695                           
   696                           ; 4 bytes @ 0x48
   697  0000A8                     	ds	4
   698  0000AC                     Ohm2C@x:
   699                           	opt callstack 0
   700                           
   701                           ; 2 bytes @ 0x4C
   702  0000AC                     	ds	2
   703  0000AE                     _Ohm2C$1777:
   704                           	opt callstack 0
   705                           
   706                           ; 4 bytes @ 0x4E
   707  0000AE                     	ds	4
   708  0000B2                     _Ohm2C$1778:
   709                           	opt callstack 0
   710                           
   711                           ; 4 bytes @ 0x52
   712  0000B2                     	ds	4
   713  0000B6                     _Ohm2C$1779:
   714                           	opt callstack 0
   715                           
   716                           ; 4 bytes @ 0x56
   717  0000B6                     	ds	4
   718  0000BA                     _Ohm2C$1780:
   719                           	opt callstack 0
   720                           
   721                           ; 4 bytes @ 0x5A
   722  0000BA                     	ds	4
   723  0000BE                     _Ohm2C$1781:
   724                           	opt callstack 0
   725                           
   726                           ; 4 bytes @ 0x5E
   727  0000BE                     	ds	4
   728  0000C2                     Ohm2C@logR:
   729                           	opt callstack 0
   730                           
   731                           ; 4 bytes @ 0x62
   732  0000C2                     	ds	4
   733  0000C6                     ?_snprintf:
   734                           	opt callstack 0
   735  0000C6                     snprintf@s:
   736                           	opt callstack 0
   737                           
   738                           ; 2 bytes @ 0x66
   739  0000C6                     	ds	2
   740  0000C8                     snprintf@n:
   741                           	opt callstack 0
   742                           
   743                           ; 2 bytes @ 0x68
   744  0000C8                     	ds	2
   745  0000CA                     snprintf@fmt:
   746                           	opt callstack 0
   747                           
   748                           ; 2 bytes @ 0x6A
   749  0000CA                     	ds	6
   750  0000D0                     snprintf@ap:
   751                           	opt callstack 0
   752                           
   753                           ; 2 bytes @ 0x70
   754  0000D0                     	ds	2
   755  0000D2                     ?_update_ADC_results:
   756                           	opt callstack 0
   757                           
   758                           ; 2 bytes @ 0x72
   759  0000D2                     	ds	2
   760  0000D4                     ??_update_ADC_results:
   761                           
   762                           ; 1 bytes @ 0x74
   763  0000D4                     	ds	1
   764  0000D5                     update_ADC_results@Rt:
   765                           	opt callstack 0
   766                           
   767                           ; 2 bytes @ 0x75
   768  0000D5                     	ds	2
   769  0000D7                     update_ADC_results@Vout:
   770                           	opt callstack 0
   771                           
   772                           ; 4 bytes @ 0x77
   773  0000D7                     	ds	4
   774  0000DB                     ?_temperature:
   775                           	opt callstack 0
   776                           
   777                           ; 2 bytes @ 0x7B
   778  0000DB                     	ds	2
   779  0000DD                     display3@data3:
   780                           	opt callstack 0
   781                           
   782                           ; 2 bytes @ 0x7D
   783  0000DD                     	ds	2
   784  0000DF                     ??_display3:
   785                           
   786                           ; 1 bytes @ 0x7F
   787  0000DF                     	ds	4
   788  0000E3                     display3@csize:
   789                           	opt callstack 0
   790                           
   791                           ; 1 bytes @ 0x83
   792  0000E3                     	ds	1
   793  0000E4                     display3@bit:
   794                           	opt callstack 0
   795                           
   796                           ; 1 bytes @ 0x84
   797  0000E4                     	ds	1
   798  0000E5                     
   799                           ; 2 bytes @ 0x85
   800  0000E5                     	ds	2
   801  0000E7                     
   802                           ; 3 bytes @ 0x87
   803  0000E7                     	ds	3
   804                           
   805                           	psect	cstackCOMRAM
   806  000001                     __pcstackCOMRAM:
   807                           	opt callstack 0
   808  000001                     ??_my_ISR:
   809  000001                     
   810                           ; 1 bytes @ 0x0
   811  000001                     	ds	2
   812  000003                     ??_character_table:
   813  000003                     ?_strlen:
   814                           	opt callstack 0
   815  000003                     ?_isupper:
   816                           	opt callstack 0
   817  000003                     ?_isalpha:
   818                           	opt callstack 0
   819  000003                     ?_isdigit:
   820                           	opt callstack 0
   821  000003                     ?_strncmp:
   822                           	opt callstack 0
   823  000003                     ?_isspace:
   824                           	opt callstack 0
   825  000003                     ?_islower:
   826                           	opt callstack 0
   827  000003                     ?___wmul:
   828                           	opt callstack 0
   829  000003                     ?___xxtofl:
   830                           	opt callstack 0
   831  000003                     ?___aodiv:
   832                           	opt callstack 0
   833  000003                     ?___aomod:
   834                           	opt callstack 0
   835  000003                     ?___lodiv:
   836                           	opt callstack 0
   837  000003                     ?___lomod:
   838                           	opt callstack 0
   839  000003                     send_digit@i:
   840                           	opt callstack 0
   841  000003                     ___wmul@multiplier:
   842                           	opt callstack 0
   843  000003                     isalpha@c:
   844                           	opt callstack 0
   845  000003                     isdigit@c:
   846                           	opt callstack 0
   847  000003                     isspace@c:
   848                           	opt callstack 0
   849  000003                     isupper@c:
   850                           	opt callstack 0
   851  000003                     fputc@c:
   852                           	opt callstack 0
   853  000003                     strlen@s:
   854                           	opt callstack 0
   855  000003                     strncmp@_l:
   856                           	opt callstack 0
   857  000003                     islower@c:
   858                           	opt callstack 0
   859  000003                     ___xxtofl@val:
   860                           	opt callstack 0
   861  000003                     ___aodiv@dividend:
   862                           	opt callstack 0
   863  000003                     ___aomod@dividend:
   864                           	opt callstack 0
   865  000003                     ___lodiv@dividend:
   866                           	opt callstack 0
   867  000003                     ___lomod@dividend:
   868                           	opt callstack 0
   869                           
   870                           ; 8 bytes @ 0x2
   871  000003                     	ds	2
   872  000005                     ??_isupper:
   873  000005                     ??_isalpha:
   874  000005                     ??_isdigit:
   875  000005                     ??_isspace:
   876  000005                     ??_islower:
   877  000005                     character_table@symbol:
   878                           	opt callstack 0
   879  000005                     send_digit@a:
   880                           	opt callstack 0
   881  000005                     ___wmul@multiplicand:
   882                           	opt callstack 0
   883  000005                     fputc@fp:
   884                           	opt callstack 0
   885  000005                     strlen@a:
   886                           	opt callstack 0
   887  000005                     strncmp@_r:
   888                           	opt callstack 0
   889                           
   890                           ; 2 bytes @ 0x4
   891  000005                     	ds	1
   892  000006                     send_digit@data:
   893                           	opt callstack 0
   894                           
   895                           ; 1 bytes @ 0x5
   896  000006                     	ds	1
   897  000007                     ??_fputc:
   898  000007                     ??___xxtofl:
   899  000007                     ___wmul@product:
   900                           	opt callstack 0
   901  000007                     strncmp@n:
   902                           	opt callstack 0
   903                           
   904                           ; 2 bytes @ 0x6
   905  000007                     	ds	2
   906  000009                     ??_strncmp:
   907  000009                     ?_toupper:
   908                           	opt callstack 0
   909  000009                     _isspace$1380:
   910                           	opt callstack 0
   911  000009                     toupper@c:
   912                           	opt callstack 0
   913                           
   914                           ; 2 bytes @ 0x8
   915  000009                     	ds	1
   916  00000A                     ?_atoi:
   917                           	opt callstack 0
   918  00000A                     atoi@s:
   919                           	opt callstack 0
   920  00000A                     strncmp@l:
   921                           	opt callstack 0
   922                           
   923                           ; 2 bytes @ 0x9
   924  00000A                     	ds	1
   925  00000B                     ??_toupper:
   926  00000B                     ___xxtofl@sign:
   927                           	opt callstack 0
   928  00000B                     ___aodiv@divisor:
   929                           	opt callstack 0
   930  00000B                     ___aomod@divisor:
   931                           	opt callstack 0
   932  00000B                     ___lodiv@divisor:
   933                           	opt callstack 0
   934  00000B                     ___lomod@divisor:
   935                           	opt callstack 0
   936                           
   937                           ; 8 bytes @ 0xA
   938  00000B                     	ds	1
   939  00000C                     ??_atoi:
   940  00000C                     ?_stoa:
   941                           	opt callstack 0
   942  00000C                     ___xxtofl@exp:
   943                           	opt callstack 0
   944  00000C                     stoa@fp:
   945                           	opt callstack 0
   946  00000C                     fputs@s:
   947                           	opt callstack 0
   948  00000C                     strncmp@r:
   949                           	opt callstack 0
   950                           
   951                           ; 2 bytes @ 0xB
   952  00000C                     	ds	1
   953  00000D                     ___xxtofl@arg:
   954                           	opt callstack 0
   955                           
   956                           ; 4 bytes @ 0xC
   957  00000D                     	ds	1
   958  00000E                     stoa@s:
   959                           	opt callstack 0
   960  00000E                     fputs@fp:
   961                           	opt callstack 0
   962                           
   963                           ; 2 bytes @ 0xD
   964  00000E                     	ds	1
   965  00000F                     _toupper$1488:
   966                           	opt callstack 0
   967                           
   968                           ; 2 bytes @ 0xE
   969  00000F                     	ds	1
   970  000010                     ??_stoa:
   971  000010                     fputs@c:
   972                           	opt callstack 0
   973  000010                     atoi@neg:
   974                           	opt callstack 0
   975                           
   976                           ; 2 bytes @ 0xF
   977  000010                     	ds	1
   978  000011                     ?___flmul:
   979                           	opt callstack 0
   980  000011                     fputs@i:
   981                           	opt callstack 0
   982  000011                     ___flmul@b:
   983                           	opt callstack 0
   984  000011                     stoa@nuls:
   985                           	opt callstack 0
   986                           
   987                           ; 7 bytes @ 0x10
   988  000011                     	ds	1
   989  000012                     _atoi$1353:
   990                           	opt callstack 0
   991                           
   992                           ; 2 bytes @ 0x11
   993  000012                     	ds	1
   994  000013                     ?_pad:
   995                           	opt callstack 0
   996  000013                     ___aodiv@counter:
   997                           	opt callstack 0
   998  000013                     ___aomod@counter:
   999                           	opt callstack 0
  1000  000013                     ___lomod@counter:
  1001                           	opt callstack 0
  1002  000013                     pad@fp:
  1003                           	opt callstack 0
  1004  000013                     ___lodiv@quotient:
  1005                           	opt callstack 0
  1006                           
  1007                           ; 8 bytes @ 0x12
  1008  000013                     	ds	1
  1009  000014                     ___aodiv@sign:
  1010                           	opt callstack 0
  1011  000014                     ___aomod@sign:
  1012                           	opt callstack 0
  1013  000014                     _atoi$1355:
  1014                           	opt callstack 0
  1015                           
  1016                           ; 2 bytes @ 0x13
  1017  000014                     	ds	1
  1018  000015                     ?_abs:
  1019                           	opt callstack 0
  1020  000015                     pad@buf:
  1021                           	opt callstack 0
  1022  000015                     abs@a:
  1023                           	opt callstack 0
  1024  000015                     ___flmul@a:
  1025                           	opt callstack 0
  1026  000015                     ___aodiv@quotient:
  1027                           	opt callstack 0
  1028                           
  1029                           ; 8 bytes @ 0x14
  1030  000015                     	ds	1
  1031  000016                     _atoi$1354:
  1032                           	opt callstack 0
  1033                           
  1034                           ; 1 bytes @ 0x15
  1035  000016                     	ds	1
  1036  000017                     ??_abs:
  1037  000017                     pad@p:
  1038                           	opt callstack 0
  1039  000017                     atoi@n:
  1040                           	opt callstack 0
  1041                           
  1042                           ; 2 bytes @ 0x16
  1043  000017                     	ds	1
  1044  000018                     stoa@i:
  1045                           	opt callstack 0
  1046                           
  1047                           ; 2 bytes @ 0x17
  1048  000018                     	ds	1
  1049  000019                     ??___flmul:
  1050  000019                     ??_pad:
  1051                           
  1052                           ; 1 bytes @ 0x18
  1053  000019                     	ds	1
  1054  00001A                     pad@i:
  1055                           	opt callstack 0
  1056  00001A                     stoa@w:
  1057                           	opt callstack 0
  1058                           
  1059                           ; 2 bytes @ 0x19
  1060  00001A                     	ds	1
  1061  00001B                     ___lodiv@counter:
  1062                           	opt callstack 0
  1063                           
  1064                           ; 1 bytes @ 0x1A
  1065  00001B                     	ds	1
  1066  00001C                     pad@w:
  1067                           	opt callstack 0
  1068  00001C                     stoa@cp:
  1069                           	opt callstack 0
  1070                           
  1071                           ; 2 bytes @ 0x1B
  1072  00001C                     	ds	1
  1073  00001D                     ___flmul@sign:
  1074                           	opt callstack 0
  1075                           
  1076                           ; 1 bytes @ 0x1C
  1077  00001D                     	ds	1
  1078  00001E                     ?_ctoa:
  1079                           	opt callstack 0
  1080  00001E                     ?_dtoa:
  1081                           	opt callstack 0
  1082  00001E                     ?_otoa:
  1083                           	opt callstack 0
  1084  00001E                     ?_utoa:
  1085                           	opt callstack 0
  1086  00001E                     ?_xtoa:
  1087                           	opt callstack 0
  1088  00001E                     ctoa@fp:
  1089                           	opt callstack 0
  1090  00001E                     dtoa@fp:
  1091                           	opt callstack 0
  1092  00001E                     otoa@fp:
  1093                           	opt callstack 0
  1094  00001E                     stoa@p:
  1095                           	opt callstack 0
  1096  00001E                     utoa@fp:
  1097                           	opt callstack 0
  1098  00001E                     xtoa@fp:
  1099                           	opt callstack 0
  1100  00001E                     ___flmul@grs:
  1101                           	opt callstack 0
  1102                           
  1103                           ; 4 bytes @ 0x1D
  1104  00001E                     	ds	2
  1105  000020                     ctoa@c:
  1106                           	opt callstack 0
  1107  000020                     stoa@l:
  1108                           	opt callstack 0
  1109  000020                     dtoa@d:
  1110                           	opt callstack 0
  1111  000020                     otoa@d:
  1112                           	opt callstack 0
  1113  000020                     utoa@d:
  1114                           	opt callstack 0
  1115  000020                     xtoa@d:
  1116                           	opt callstack 0
  1117                           
  1118                           ; 8 bytes @ 0x1F
  1119  000020                     	ds	1
  1120  000021                     ctoa@w:
  1121                           	opt callstack 0
  1122                           
  1123                           ; 2 bytes @ 0x20
  1124  000021                     	ds	1
  1125  000022                     ___flmul@aexp:
  1126                           	opt callstack 0
  1127                           
  1128                           ; 1 bytes @ 0x21
  1129  000022                     	ds	1
  1130  000023                     ___flmul@bexp:
  1131                           	opt callstack 0
  1132                           
  1133                           ; 1 bytes @ 0x22
  1134  000023                     	ds	1
  1135  000024                     ___flmul@prod:
  1136                           	opt callstack 0
  1137                           
  1138                           ; 4 bytes @ 0x23
  1139  000024                     	ds	4
  1140  000028                     ??_dtoa:
  1141  000028                     ??_otoa:
  1142  000028                     ??_utoa:
  1143  000028                     xtoa@x:
  1144                           	opt callstack 0
  1145  000028                     ___flmul@temp:
  1146                           	opt callstack 0
  1147                           
  1148                           ; 2 bytes @ 0x27
  1149  000028                     	ds	1
  1150  000029                     ??_xtoa:
  1151                           
  1152                           ; 1 bytes @ 0x28
  1153  000029                     	ds	1
  1154  00002A                     ?___fladd:
  1155                           	opt callstack 0
  1156  00002A                     ___fladd@b:
  1157                           	opt callstack 0
  1158                           
  1159                           ; 4 bytes @ 0x29
  1160  00002A                     	ds	4
  1161  00002E                     ___fladd@a:
  1162                           	opt callstack 0
  1163                           
  1164                           ; 4 bytes @ 0x2D
  1165  00002E                     	ds	2
  1166  000030                     _dtoa$147:
  1167                           	opt callstack 0
  1168  000030                     otoa@p:
  1169                           	opt callstack 0
  1170  000030                     utoa@p:
  1171                           	opt callstack 0
  1172                           
  1173                           ; 2 bytes @ 0x2F
  1174  000030                     	ds	1
  1175  000031                     _xtoa$183:
  1176                           	opt callstack 0
  1177                           
  1178                           ; 2 bytes @ 0x30
  1179  000031                     	ds	1
  1180  000032                     ??___fladd:
  1181  000032                     dtoa@p:
  1182                           	opt callstack 0
  1183  000032                     otoa@t:
  1184                           	opt callstack 0
  1185  000032                     utoa@w:
  1186                           	opt callstack 0
  1187                           
  1188                           ; 2 bytes @ 0x31
  1189  000032                     	ds	1
  1190  000033                     _xtoa$184:
  1191                           	opt callstack 0
  1192                           
  1193                           ; 2 bytes @ 0x32
  1194  000033                     	ds	1
  1195  000034                     dtoa@w:
  1196                           	opt callstack 0
  1197  000034                     otoa@w:
  1198                           	opt callstack 0
  1199  000034                     utoa@n:
  1200                           	opt callstack 0
  1201                           
  1202                           ; 8 bytes @ 0x33
  1203  000034                     	ds	1
  1204  000035                     xtoa@p:
  1205                           	opt callstack 0
  1206                           
  1207                           ; 2 bytes @ 0x34
  1208  000035                     	ds	1
  1209  000036                     ___fladd@signs:
  1210                           	opt callstack 0
  1211  000036                     dtoa@s:
  1212                           	opt callstack 0
  1213  000036                     otoa@n:
  1214                           	opt callstack 0
  1215                           
  1216                           ; 8 bytes @ 0x35
  1217  000036                     	ds	1
  1218  000037                     ___fladd@aexp:
  1219                           	opt callstack 0
  1220  000037                     xtoa@w:
  1221                           	opt callstack 0
  1222                           
  1223                           ; 2 bytes @ 0x36
  1224  000037                     	ds	1
  1225  000038                     ___fladd@bexp:
  1226                           	opt callstack 0
  1227  000038                     dtoa@n:
  1228                           	opt callstack 0
  1229                           
  1230                           ; 8 bytes @ 0x37
  1231  000038                     	ds	1
  1232  000039                     ___fladd@grs:
  1233                           	opt callstack 0
  1234  000039                     xtoa@n:
  1235                           	opt callstack 0
  1236                           
  1237                           ; 8 bytes @ 0x38
  1238  000039                     	ds	1
  1239  00003A                     ?___flsub:
  1240                           	opt callstack 0
  1241  00003A                     ___flsub@b:
  1242                           	opt callstack 0
  1243                           
  1244                           ; 4 bytes @ 0x39
  1245  00003A                     	ds	2
  1246  00003C                     utoa@i:
  1247                           	opt callstack 0
  1248                           
  1249                           ; 2 bytes @ 0x3B
  1250  00003C                     	ds	2
  1251  00003E                     otoa@i:
  1252                           	opt callstack 0
  1253  00003E                     ___flsub@a:
  1254                           	opt callstack 0
  1255                           
  1256                           ; 4 bytes @ 0x3D
  1257  00003E                     	ds	2
  1258  000040                     dtoa@i:
  1259                           	opt callstack 0
  1260                           
  1261                           ; 2 bytes @ 0x3F
  1262  000040                     	ds	1
  1263  000041                     xtoa@i:
  1264                           	opt callstack 0
  1265                           
  1266                           ; 2 bytes @ 0x40
  1267  000041                     	ds	1
  1268  000042                     ?___fldiv:
  1269                           	opt callstack 0
  1270  000042                     ___fldiv@b:
  1271                           	opt callstack 0
  1272                           
  1273                           ; 4 bytes @ 0x41
  1274  000042                     	ds	1
  1275  000043                     xtoa@c:
  1276                           	opt callstack 0
  1277                           
  1278                           ; 2 bytes @ 0x42
  1279  000043                     	ds	2
  1280  000045                     ?_vfpfcnvrt:
  1281                           	opt callstack 0
  1282  000045                     vfpfcnvrt@fp:
  1283                           	opt callstack 0
  1284                           
  1285                           ; 2 bytes @ 0x44
  1286  000045                     	ds	1
  1287  000046                     ___fldiv@a:
  1288                           	opt callstack 0
  1289                           
  1290                           ; 4 bytes @ 0x45
  1291  000046                     	ds	1
  1292  000047                     vfpfcnvrt@fmt:
  1293                           	opt callstack 0
  1294                           
  1295                           ; 2 bytes @ 0x46
  1296  000047                     	ds	2
  1297  000049                     vfpfcnvrt@ap:
  1298                           	opt callstack 0
  1299                           
  1300                           ; 2 bytes @ 0x48
  1301  000049                     	ds	1
  1302  00004A                     ??___fldiv:
  1303                           
  1304                           ; 1 bytes @ 0x49
  1305  00004A                     	ds	1
  1306  00004B                     ??_vfpfcnvrt:
  1307                           
  1308                           ; 1 bytes @ 0x4A
  1309  00004B                     	ds	3
  1310  00004E                     ___fldiv@rem:
  1311                           	opt callstack 0
  1312                           
  1313                           ; 4 bytes @ 0x4D
  1314  00004E                     	ds	1
  1315  00004F                     ?_vfprintf:
  1316                           	opt callstack 0
  1317  00004F                     vfprintf@fp:
  1318                           	opt callstack 0
  1319                           
  1320                           ; 2 bytes @ 0x4E
  1321  00004F                     	ds	2
  1322  000051                     vfprintf@fmt:
  1323                           	opt callstack 0
  1324                           
  1325                           ; 2 bytes @ 0x50
  1326  000051                     	ds	1
  1327  000052                     ___fldiv@sign:
  1328                           	opt callstack 0
  1329                           
  1330                           ; 1 bytes @ 0x51
  1331  000052                     	ds	1
  1332  000053                     vfprintf@ap:
  1333                           	opt callstack 0
  1334  000053                     ___fldiv@new_exp:
  1335                           	opt callstack 0
  1336                           
  1337                           ; 2 bytes @ 0x52
  1338  000053                     	ds	2
  1339  000055                     vfprintf@cfmt:
  1340                           	opt callstack 0
  1341  000055                     ___fldiv@grs:
  1342                           	opt callstack 0
  1343                           
  1344                           ; 4 bytes @ 0x54
  1345  000055                     	ds	2
  1346  000057                     ??_vsnprintf:
  1347                           
  1348                           ; 1 bytes @ 0x56
  1349  000057                     	ds	2
  1350  000059                     ___fldiv@bexp:
  1351                           	opt callstack 0
  1352                           
  1353                           ; 1 bytes @ 0x58
  1354  000059                     	ds	1
  1355  00005A                     ___fldiv@aexp:
  1356                           	opt callstack 0
  1357                           
  1358                           ; 1 bytes @ 0x59
  1359  00005A                     	ds	1
  1360  00005B                     
  1361                           ; 1 bytes @ 0x5A
  1362 ;;
  1363 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1364 ;;
  1365 ;; *************** function _main *****************
  1366 ;; Defined at:
  1367 ;;		line 56 in file "main.c"
  1368 ;; Parameters:    Size  Location     Type
  1369 ;;  argc            2  133[BANK0 ] int 
  1370 ;;  argv            3  135[BANK0 ] PTR PTR unsigned char 
  1371 ;; Auto vars:     Size  Location     Type
  1372 ;;		None
  1373 ;; Return value:  Size  Location     Type
  1374 ;;                  2  133[BANK0 ] int 
  1375 ;; Registers used:
  1376 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1377 ;; Tracked objects:
  1378 ;;		On entry : 0/0
  1379 ;;		On exit  : 0/0
  1380 ;;		Unchanged: 0/0
  1381 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1382 ;;      Params:         0       5       0       0       0       0       0       0       0
  1383 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1384 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1385 ;;      Totals:         0       5       0       0       0       0       0       0       0
  1386 ;;Total ram usage:        5 bytes
  1387 ;; Hardware stack levels required when called:   14
  1388 ;; This function calls:
  1389 ;;		_display3
  1390 ;;		_init_thermistor
  1391 ;;		_setupPortDisplay
  1392 ;;		_setupTemperatureSensor
  1393 ;;		_temperature
  1394 ;; This function is called by:
  1395 ;;		Startup code after reset
  1396 ;; This function uses a non-reentrant model
  1397 ;;
  1398                           
  1399                           	psect	text0
  1400  0041D2                     __ptext0:
  1401                           	opt callstack 0
  1402  0041D2                     _main:
  1403                           	opt callstack 17
  1404                           
  1405                           ;main.c: 57:     setupPortDisplay();
  1406                           
  1407                           ;incstack = 0
  1408  0041D2  EC07  F021         	call	_setupPortDisplay	;wreg free
  1409                           
  1410                           ;main.c: 58:     setupTemperatureSensor();
  1411  0041D6  ECF8  F020         	call	_setupTemperatureSensor	;wreg free
  1412                           
  1413                           ;main.c: 59:     init_thermistor();
  1414  0041DA  EC79  F01F         	call	_init_thermistor	;wreg free
  1415  0041DE                     l5253:
  1416                           
  1417                           ;main.c: 63:         display3(temperature());
  1418  0041DE  ECC3  F020         	call	_temperature	;wreg free
  1419  0041E2  C0DB  F0DD         	movff	?_temperature,display3@data3
  1420  0041E6  C0DC  F0DE         	movff	?_temperature+1,display3@data3+1
  1421  0041EA  ECC6  F01C         	call	_display3	;wreg free
  1422  0041EE  D7F7               	goto	l5253
  1423  0041F0                     __end_of_main:
  1424                           	opt callstack 0
  1425                           
  1426 ;; *************** function _temperature *****************
  1427 ;; Defined at:
  1428 ;;		line 114 in file "source/temperatureSensor.c"
  1429 ;; Parameters:    Size  Location     Type
  1430 ;;		None
  1431 ;; Auto vars:     Size  Location     Type
  1432 ;;		None
  1433 ;; Return value:  Size  Location     Type
  1434 ;;                  2  123[BANK0 ] PTR unsigned char 
  1435 ;; Registers used:
  1436 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1437 ;; Tracked objects:
  1438 ;;		On entry : 0/0
  1439 ;;		On exit  : 0/0
  1440 ;;		Unchanged: 0/0
  1441 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1442 ;;      Params:         0       2       0       0       0       0       0       0       0
  1443 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1444 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1445 ;;      Totals:         0       2       0       0       0       0       0       0       0
  1446 ;;Total ram usage:        2 bytes
  1447 ;; Hardware stack levels used:    1
  1448 ;; Hardware stack levels required when called:   13
  1449 ;; This function calls:
  1450 ;;		_update_ADC_results
  1451 ;; This function is called by:
  1452 ;;		_main
  1453 ;; This function uses a non-reentrant model
  1454 ;;
  1455                           
  1456                           	psect	text1
  1457  004186                     __ptext1:
  1458                           	opt callstack 0
  1459  004186                     _temperature:
  1460                           	opt callstack 17
  1461                           
  1462                           ;source/temperatureSensor.c: 115:     if(ADC_results.isUpdated){
  1463                           
  1464                           ;incstack = 0
  1465  004186  0101               	movlb	1	; () banked
  1466  004188  5135               	movf	(_ADC_results+6)& (0+255),w,b
  1467  00418A  B4D8               	btfsc	status,2,c
  1468  00418C  D006               	goto	l5241
  1469                           
  1470                           ; BSR set to: 1
  1471                           ;source/temperatureSensor.c: 116:         return ADC_results.buffer;
  1472  00418E  0E31               	movlw	low (_ADC_results+2)
  1473  004190  0100               	movlb	0	; () banked
  1474  004192  6FDB               	movwf	?_temperature& (0+255),b
  1475  004194  0E01               	movlw	high (_ADC_results+2)
  1476  004196  6FDC               	movwf	(?_temperature+1)& (0+255),b
  1477  004198  0012               	return	
  1478  00419A                     l5241:
  1479                           
  1480                           ; BSR set to: 1
  1481                           ;source/temperatureSensor.c: 118:     ADC_results.isUpdated=1;
  1482  00419A  0E01               	movlw	1
  1483  00419C  6F35               	movwf	(_ADC_results+6)& (0+255),b
  1484                           
  1485                           ; BSR set to: 1
  1486                           ;source/temperatureSensor.c: 119:     return update_ADC_results();
  1487  00419E  EC97  F01A         	call	_update_ADC_results	;wreg free
  1488  0041A2  C0D2  F0DB         	movff	?_update_ADC_results,?_temperature
  1489  0041A6  C0D3  F0DC         	movff	?_update_ADC_results+1,?_temperature+1
  1490  0041AA  0012               	return		;funcret
  1491  0041AC                     __end_of_temperature:
  1492                           	opt callstack 0
  1493                           
  1494 ;; *************** function _update_ADC_results *****************
  1495 ;; Defined at:
  1496 ;;		line 98 in file "source/temperatureSensor.c"
  1497 ;; Parameters:    Size  Location     Type
  1498 ;;		None
  1499 ;; Auto vars:     Size  Location     Type
  1500 ;;  Vout            4  119[BANK0 ] PTR unsigned char 
  1501 ;;  Rt              2  117[BANK0 ] unsigned int 
  1502 ;; Return value:  Size  Location     Type
  1503 ;;                  2  114[BANK0 ] PTR unsigned char 
  1504 ;; Registers used:
  1505 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1506 ;; Tracked objects:
  1507 ;;		On entry : 0/0
  1508 ;;		On exit  : 0/0
  1509 ;;		Unchanged: 0/0
  1510 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1511 ;;      Params:         0       2       0       0       0       0       0       0       0
  1512 ;;      Locals:         0       6       0       0       0       0       0       0       0
  1513 ;;      Temps:          0       1       0       0       0       0       0       0       0
  1514 ;;      Totals:         0       9       0       0       0       0       0       0       0
  1515 ;;Total ram usage:        9 bytes
  1516 ;; Hardware stack levels used:    1
  1517 ;; Hardware stack levels required when called:   12
  1518 ;; This function calls:
  1519 ;;		_Ohm2C
  1520 ;;		___fldiv
  1521 ;;		___flmul
  1522 ;;		___flsub
  1523 ;;		___fltol
  1524 ;;		___xxtofl
  1525 ;;		_snprintf
  1526 ;; This function is called by:
  1527 ;;		_temperature
  1528 ;; This function uses a non-reentrant model
  1529 ;;
  1530                           
  1531                           	psect	text2
  1532  00352E                     __ptext2:
  1533                           	opt callstack 0
  1534  00352E                     _update_ADC_results:
  1535                           	opt callstack 17
  1536                           
  1537                           ;source/temperatureSensor.c: 99:     double Vout=5/1024.0f * ADC_results.all;
  1538                           
  1539                           ;incstack = 0
  1540  00352E  C12F  F003         	movff	_ADC_results,___xxtofl@val
  1541  003532  C130  F004         	movff	_ADC_results+1,___xxtofl@val+1
  1542  003536  6A05               	clrf	___xxtofl@val+2,c
  1543  003538  6A06               	clrf	___xxtofl@val+3,c
  1544  00353A  0E00               	movlw	0
  1545  00353C  ECD1  F018         	call	___xxtofl
  1546  003540  C003  F011         	movff	?___xxtofl,___flmul@b
  1547  003544  C004  F012         	movff	?___xxtofl+1,___flmul@b+1
  1548  003548  C005  F013         	movff	?___xxtofl+2,___flmul@b+2
  1549  00354C  C006  F014         	movff	?___xxtofl+3,___flmul@b+3
  1550  003550  0E00               	movlw	0
  1551  003552  6E15               	movwf	___flmul@a,c
  1552  003554  0E00               	movlw	0
  1553  003556  6E16               	movwf	___flmul@a+1,c
  1554  003558  0EA0               	movlw	160
  1555  00355A  6E17               	movwf	___flmul@a+2,c
  1556  00355C  0E3B               	movlw	59
  1557  00355E  6E18               	movwf	___flmul@a+3,c
  1558  003560  EC69  F00E         	call	___flmul	;wreg free
  1559  003564  C011  F0D7         	movff	?___flmul,update_ADC_results@Vout
  1560  003568  C012  F0D8         	movff	?___flmul+1,update_ADC_results@Vout+1
  1561  00356C  C013  F0D9         	movff	?___flmul+2,update_ADC_results@Vout+2
  1562  003570  C014  F0DA         	movff	?___flmul+3,update_ADC_results@Vout+3
  1563                           
  1564                           ;source/temperatureSensor.c: 100:     unsigned Rt=2500*Vout/(5 -Vout);
  1565  003574  C0D7  F03E         	movff	update_ADC_results@Vout,___flsub@a
  1566  003578  C0D8  F03F         	movff	update_ADC_results@Vout+1,___flsub@a+1
  1567  00357C  C0D9  F040         	movff	update_ADC_results@Vout+2,___flsub@a+2
  1568  003580  C0DA  F041         	movff	update_ADC_results@Vout+3,___flsub@a+3
  1569  003584  0E00               	movlw	0
  1570  003586  6E3A               	movwf	___flsub@b,c
  1571  003588  0E00               	movlw	0
  1572  00358A  6E3B               	movwf	___flsub@b+1,c
  1573  00358C  0EA0               	movlw	160
  1574  00358E  6E3C               	movwf	___flsub@b+2,c
  1575  003590  0E40               	movlw	64
  1576  003592  6E3D               	movwf	___flsub@b+3,c
  1577  003594  EC11  F01F         	call	___flsub	;wreg free
  1578  003598  C03A  F046         	movff	?___flsub,___fldiv@a
  1579  00359C  C03B  F047         	movff	?___flsub+1,___fldiv@a+1
  1580  0035A0  C03C  F048         	movff	?___flsub+2,___fldiv@a+2
  1581  0035A4  C03D  F049         	movff	?___flsub+3,___fldiv@a+3
  1582  0035A8  0E00               	movlw	0
  1583  0035AA  6E15               	movwf	___flmul@a,c
  1584  0035AC  0E40               	movlw	64
  1585  0035AE  6E16               	movwf	___flmul@a+1,c
  1586  0035B0  0E1C               	movlw	28
  1587  0035B2  6E17               	movwf	___flmul@a+2,c
  1588  0035B4  0E45               	movlw	69
  1589  0035B6  6E18               	movwf	___flmul@a+3,c
  1590  0035B8  C0D7  F011         	movff	update_ADC_results@Vout,___flmul@b
  1591  0035BC  C0D8  F012         	movff	update_ADC_results@Vout+1,___flmul@b+1
  1592  0035C0  C0D9  F013         	movff	update_ADC_results@Vout+2,___flmul@b+2
  1593  0035C4  C0DA  F014         	movff	update_ADC_results@Vout+3,___flmul@b+3
  1594  0035C8  EC69  F00E         	call	___flmul	;wreg free
  1595  0035CC  C011  F042         	movff	?___flmul,___fldiv@b
  1596  0035D0  C012  F043         	movff	?___flmul+1,___fldiv@b+1
  1597  0035D4  C013  F044         	movff	?___flmul+2,___fldiv@b+2
  1598  0035D8  C014  F045         	movff	?___flmul+3,___fldiv@b+3
  1599  0035DC  EC98  F011         	call	___fldiv	;wreg free
  1600  0035E0  C042  F060         	movff	?___fldiv,___fltol@f1
  1601  0035E4  C043  F061         	movff	?___fldiv+1,___fltol@f1+1
  1602  0035E8  C044  F062         	movff	?___fldiv+2,___fltol@f1+2
  1603  0035EC  C045  F063         	movff	?___fldiv+3,___fltol@f1+3
  1604  0035F0  EC68  F01C         	call	___fltol	;wreg free
  1605  0035F4  C060  F0D5         	movff	?___fltol,update_ADC_results@Rt
  1606  0035F8  C061  F0D6         	movff	?___fltol+1,update_ADC_results@Rt+1
  1607                           
  1608                           ;source/temperatureSensor.c: 102:     snprintf(ADC_results.buffer,4,"%d",Ohm2C(Rt));
  1609  0035FC  0E31               	movlw	low (_ADC_results+2)
  1610  0035FE  0100               	movlb	0	; () banked
  1611  003600  6FC6               	movwf	snprintf@s& (0+255),b
  1612  003602  0E01               	movlw	high (_ADC_results+2)
  1613  003604  6FC7               	movwf	(snprintf@s+1)& (0+255),b
  1614  003606  0E00               	movlw	0
  1615  003608  6FC9               	movwf	(snprintf@n+1)& (0+255),b
  1616  00360A  0E04               	movlw	4
  1617  00360C  6FC8               	movwf	snprintf@n& (0+255),b
  1618  00360E  0E50               	movlw	low STR_100
  1619  003610  6FCA               	movwf	snprintf@fmt& (0+255),b
  1620  003612  0E08               	movlw	high STR_100
  1621  003614  6FCB               	movwf	(snprintf@fmt+1)& (0+255),b
  1622  003616  C0D5  F0AC         	movff	update_ADC_results@Rt,Ohm2C@x
  1623  00361A  C0D6  F0AD         	movff	update_ADC_results@Rt+1,Ohm2C@x+1
  1624  00361E  EC15  F015         	call	_Ohm2C	;wreg free
  1625  003622  0100               	movlb	0	; () banked
  1626  003624  6FD4               	movwf	??_update_ADC_results& (0+255),b
  1627  003626  51D4               	movf	??_update_ADC_results& (0+255),w,b
  1628  003628  6FCC               	movwf	(?_snprintf+6)& (0+255),b
  1629  00362A  6BCD               	clrf	(?_snprintf+7)& (0+255),b
  1630  00362C  EC21  F020         	call	_snprintf	;wreg free
  1631                           
  1632                           ;source/temperatureSensor.c: 103:     return ADC_results.buffer;
  1633  003630  0E31               	movlw	low (_ADC_results+2)
  1634  003632  0100               	movlb	0	; () banked
  1635  003634  6FD2               	movwf	?_update_ADC_results& (0+255),b
  1636  003636  0E01               	movlw	high (_ADC_results+2)
  1637  003638  6FD3               	movwf	(?_update_ADC_results+1)& (0+255),b
  1638                           
  1639                           ; BSR set to: 0
  1640  00363A  0012               	return		;funcret
  1641  00363C                     __end_of_update_ADC_results:
  1642                           	opt callstack 0
  1643                           
  1644 ;; *************** function _snprintf *****************
  1645 ;; Defined at:
  1646 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\snprintf.c"
  1647 ;; Parameters:    Size  Location     Type
  1648 ;;  s               2  102[BANK0 ] PTR unsigned char 
  1649 ;;		 -> ADC_results(7), buffer(4), 
  1650 ;;  n               2  104[BANK0 ] unsigned int 
  1651 ;;  fmt             2  106[BANK0 ] PTR const unsigned char 
  1652 ;;		 -> STR_101(3), STR_100(3), 
  1653 ;; Auto vars:     Size  Location     Type
  1654 ;;  ap              2  112[BANK0 ] PTR void [1]
  1655 ;;		 -> ?_snprintf(2), 
  1656 ;;  ret             2    0        int 
  1657 ;; Return value:  Size  Location     Type
  1658 ;;                  2  102[BANK0 ] int 
  1659 ;; Registers used:
  1660 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1661 ;; Tracked objects:
  1662 ;;		On entry : 0/0
  1663 ;;		On exit  : 0/0
  1664 ;;		Unchanged: 0/0
  1665 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1666 ;;      Params:         0       8       0       0       0       0       0       0       0
  1667 ;;      Locals:         0       4       0       0       0       0       0       0       0
  1668 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1669 ;;      Totals:         0      12       0       0       0       0       0       0       0
  1670 ;;Total ram usage:       12 bytes
  1671 ;; Hardware stack levels used:    1
  1672 ;; Hardware stack levels required when called:   11
  1673 ;; This function calls:
  1674 ;;		_vsnprintf
  1675 ;; This function is called by:
  1676 ;;		_update_ADC_results
  1677 ;; This function uses a non-reentrant model
  1678 ;;
  1679                           
  1680                           	psect	text3
  1681  004042                     __ptext3:
  1682                           	opt callstack 0
  1683  004042                     _snprintf:
  1684                           	opt callstack 17
  1685                           
  1686                           ; BSR set to: 0
  1687                           ;incstack = 0
  1688  004042  0ECC               	movlw	low (?_snprintf+6)
  1689  004044  0100               	movlb	0	; () banked
  1690  004046  6FD0               	movwf	snprintf@ap& (0+255),b
  1691  004048  0E00               	movlw	high (?_snprintf+6)
  1692  00404A  6FD1               	movwf	(snprintf@ap+1)& (0+255),b
  1693                           
  1694                           ; BSR set to: 0
  1695  00404C  C0C6  F07B         	movff	snprintf@s,vsnprintf@s
  1696  004050  C0C7  F07C         	movff	snprintf@s+1,vsnprintf@s+1
  1697  004054  C0C8  F07D         	movff	snprintf@n,vsnprintf@n
  1698  004058  C0C9  F07E         	movff	snprintf@n+1,vsnprintf@n+1
  1699  00405C  C0CA  F07F         	movff	snprintf@fmt,vsnprintf@fmt
  1700  004060  C0CB  F080         	movff	snprintf@fmt+1,vsnprintf@fmt+1
  1701  004064  0ED0               	movlw	low snprintf@ap
  1702  004066  6F81               	movwf	vsnprintf@ap& (0+255),b
  1703  004068  0E00               	movlw	high snprintf@ap
  1704  00406A  6F82               	movwf	(vsnprintf@ap+1)& (0+255),b
  1705  00406C  EC97  F01B         	call	_vsnprintf	;wreg free
  1706  004070  0012               	return		;funcret
  1707  004072                     __end_of_snprintf:
  1708                           	opt callstack 0
  1709                           
  1710 ;; *************** function _vsnprintf *****************
  1711 ;; Defined at:
  1712 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\nf_vsnprintf.c"
  1713 ;; Parameters:    Size  Location     Type
  1714 ;;  s               2   27[BANK0 ] PTR unsigned char 
  1715 ;;		 -> ADC_results(7), buffer(4), 
  1716 ;;  n               2   29[BANK0 ] unsigned int 
  1717 ;;  fmt             2   31[BANK0 ] PTR const unsigned char 
  1718 ;;		 -> STR_101(3), STR_100(3), 
  1719 ;;  ap              2   33[BANK0 ] PTR PTR void 
  1720 ;;		 -> snprintf@ap(2), 
  1721 ;; Auto vars:     Size  Location     Type
  1722 ;;  f               6   39[BANK0 ] struct _IO_FILE
  1723 ;;  cnt             2   37[BANK0 ] int 
  1724 ;; Return value:  Size  Location     Type
  1725 ;;                  2   27[BANK0 ] int 
  1726 ;; Registers used:
  1727 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1728 ;; Tracked objects:
  1729 ;;		On entry : 0/0
  1730 ;;		On exit  : 0/0
  1731 ;;		Unchanged: 0/0
  1732 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1733 ;;      Params:         0       8       0       0       0       0       0       0       0
  1734 ;;      Locals:         0      10       0       0       0       0       0       0       0
  1735 ;;      Temps:          4       0       0       0       0       0       0       0       0
  1736 ;;      Totals:         4      18       0       0       0       0       0       0       0
  1737 ;;Total ram usage:       22 bytes
  1738 ;; Hardware stack levels used:    1
  1739 ;; Hardware stack levels required when called:   10
  1740 ;; This function calls:
  1741 ;;		_vfprintf
  1742 ;; This function is called by:
  1743 ;;		_snprintf
  1744 ;; This function uses a non-reentrant model
  1745 ;;
  1746                           
  1747                           	psect	text4
  1748  00372E                     __ptext4:
  1749                           	opt callstack 0
  1750  00372E                     _vsnprintf:
  1751                           	opt callstack 17
  1752                           
  1753                           ;incstack = 0
  1754  00372E  0E80               	movlw	128
  1755  003730  0100               	movlb	0	; () banked
  1756  003732  5D7E               	subwf	(vsnprintf@n+1)& (0+255),w,b
  1757  003734  A0D8               	btfss	status,0,c
  1758  003736  D007               	goto	l4781
  1759                           
  1760                           ; BSR set to: 0
  1761  003738  0E00               	movlw	0
  1762  00373A  6FEF               	movwf	(_errno+1)& (0+255),b
  1763  00373C  0E4B               	movlw	75
  1764  00373E  6FEE               	movwf	_errno& (0+255),b
  1765                           
  1766                           ; BSR set to: 0
  1767  003740  697B               	setf	?_vsnprintf& (0+255),b
  1768  003742  697C               	setf	(?_vsnprintf+1)& (0+255),b
  1769  003744  0012               	return	
  1770  003746                     l4781:
  1771                           
  1772                           ; BSR set to: 0
  1773  003746  C07B  F087         	movff	vsnprintf@s,vsnprintf@f
  1774  00374A  C07C  F088         	movff	vsnprintf@s+1,vsnprintf@f+1
  1775  00374E  517E               	movf	(vsnprintf@n+1)& (0+255),w,b
  1776  003750  E104               	bnz	u5550
  1777  003752  0E02               	movlw	2
  1778  003754  5D7D               	subwf	vsnprintf@n& (0+255),w,b
  1779  003756  A0D8               	btfss	status,0,c
  1780  003758  D00A               	goto	l4787
  1781  00375A                     u5550:
  1782                           
  1783                           ; BSR set to: 0
  1784  00375A  0EFF               	movlw	255
  1785  00375C  257D               	addwf	vsnprintf@n& (0+255),w,b
  1786  00375E  6F8B               	movwf	(vsnprintf@f+4)& (0+255),b
  1787  003760  0EFF               	movlw	255
  1788  003762  217E               	addwfc	(vsnprintf@n+1)& (0+255),w,b
  1789  003764  6F8C               	movwf	(vsnprintf@f+5)& (0+255),b
  1790                           
  1791                           ; BSR set to: 0
  1792  003766  0E00               	movlw	0
  1793  003768  6F8A               	movwf	(vsnprintf@f+3)& (0+255),b
  1794  00376A  0E00               	movlw	0
  1795  00376C  D007               	goto	L1
  1796  00376E                     l4787:
  1797                           
  1798                           ; BSR set to: 0
  1799  00376E  0E00               	movlw	0
  1800  003770  6F8C               	movwf	(vsnprintf@f+5)& (0+255),b
  1801  003772  0E01               	movlw	1
  1802  003774  6F8B               	movwf	(vsnprintf@f+4)& (0+255),b
  1803  003776  0E00               	movlw	0
  1804  003778  6F8A               	movwf	(vsnprintf@f+3)& (0+255),b
  1805  00377A  0E01               	movlw	1
  1806  00377C                     L1:
  1807  00377C  6F89               	movwf	(vsnprintf@f+2)& (0+255),b
  1808                           
  1809                           ; BSR set to: 0
  1810  00377E  0E87               	movlw	low vsnprintf@f
  1811  003780  6E4F               	movwf	vfprintf@fp,c
  1812  003782  0E00               	movlw	high vsnprintf@f
  1813  003784  6E50               	movwf	vfprintf@fp+1,c
  1814  003786  C07F  F051         	movff	vsnprintf@fmt,vfprintf@fmt
  1815  00378A  C080  F052         	movff	vsnprintf@fmt+1,vfprintf@fmt+1
  1816  00378E  C081  F053         	movff	vsnprintf@ap,vfprintf@ap
  1817  003792  C082  F054         	movff	vsnprintf@ap+1,vfprintf@ap+1
  1818  003796  EC99  F01E         	call	_vfprintf	;wreg free
  1819  00379A  C04F  F085         	movff	?_vfprintf,vsnprintf@cnt
  1820  00379E  C050  F086         	movff	?_vfprintf+1,vsnprintf@cnt+1
  1821  0037A2  0100               	movlb	0	; () banked
  1822  0037A4  517D               	movf	vsnprintf@n& (0+255),w,b
  1823  0037A6  117E               	iorwf	(vsnprintf@n+1)& (0+255),w,b
  1824  0037A8  A4D8               	btfss	status,2,c
  1825                           
  1826                           ; BSR set to: 0
  1827  0037AA  BF86               	btfsc	(vsnprintf@cnt+1)& (0+255),7,b
  1828  0037AC  D025               	goto	l4801
  1829                           
  1830                           ; BSR set to: 0
  1831  0037AE  0EFF               	movlw	255
  1832  0037B0  6E57               	movwf	??_vsnprintf& (0+255),c
  1833  0037B2  0EFF               	movlw	255
  1834  0037B4  6E58               	movwf	(??_vsnprintf+1)& (0+255),c
  1835  0037B6  C07D  F059         	movff	vsnprintf@n,??_vsnprintf+2
  1836  0037BA  C07E  F05A         	movff	vsnprintf@n+1,??_vsnprintf+3
  1837  0037BE  5057               	movf	??_vsnprintf,w,c
  1838  0037C0  2659               	addwf	??_vsnprintf+2,f,c
  1839  0037C2  5058               	movf	??_vsnprintf+1,w,c
  1840  0037C4  225A               	addwfc	??_vsnprintf+3,f,c
  1841  0037C6  5059               	movf	??_vsnprintf+2,w,c
  1842  0037C8  5D85               	subwf	vsnprintf@cnt& (0+255),w,b
  1843  0037CA  505A               	movf	??_vsnprintf+3,w,c
  1844  0037CC  5986               	subwfb	(vsnprintf@cnt+1)& (0+255),w,b
  1845  0037CE  A0D8               	btfss	status,0,c
  1846  0037D0  D007               	goto	l1327
  1847                           
  1848                           ; BSR set to: 0
  1849  0037D2  0EFF               	movlw	255
  1850  0037D4  257D               	addwf	vsnprintf@n& (0+255),w,b
  1851  0037D6  6F83               	movwf	_vsnprintf$1520& (0+255),b
  1852  0037D8  0EFF               	movlw	255
  1853  0037DA  217E               	addwfc	(vsnprintf@n+1)& (0+255),w,b
  1854  0037DC  6F84               	movwf	(_vsnprintf$1520+1)& (0+255),b
  1855  0037DE  D004               	goto	l4799
  1856  0037E0                     l1327:
  1857                           
  1858                           ; BSR set to: 0
  1859  0037E0  C085  F083         	movff	vsnprintf@cnt,_vsnprintf$1520
  1860  0037E4  C086  F084         	movff	vsnprintf@cnt+1,_vsnprintf$1520+1
  1861  0037E8                     l4799:
  1862                           
  1863                           ; BSR set to: 0
  1864  0037E8  5183               	movf	_vsnprintf$1520& (0+255),w,b
  1865  0037EA  257B               	addwf	vsnprintf@s& (0+255),w,b
  1866  0037EC  6ED9               	movwf	fsr2l,c
  1867  0037EE  5184               	movf	(_vsnprintf$1520+1)& (0+255),w,b
  1868  0037F0  217C               	addwfc	(vsnprintf@s+1)& (0+255),w,b
  1869  0037F2  6EDA               	movwf	fsr2h,c
  1870  0037F4  0E00               	movlw	0
  1871  0037F6  6EDF               	movwf	indf2,c
  1872  0037F8                     l4801:
  1873                           
  1874                           ; BSR set to: 0
  1875  0037F8  C085  F07B         	movff	vsnprintf@cnt,?_vsnprintf
  1876  0037FC  C086  F07C         	movff	vsnprintf@cnt+1,?_vsnprintf+1
  1877                           
  1878                           ; BSR set to: 0
  1879  003800  0012               	return		;funcret
  1880  003802                     __end_of_vsnprintf:
  1881                           	opt callstack 0
  1882                           
  1883 ;; *************** function _vfprintf *****************
  1884 ;; Defined at:
  1885 ;;		line 1368 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  1886 ;; Parameters:    Size  Location     Type
  1887 ;;  fp              2   78[COMRAM] PTR struct _IO_FILE
  1888 ;;		 -> vsnprintf@f(6), 
  1889 ;;  fmt             2   80[COMRAM] PTR const unsigned char 
  1890 ;;		 -> STR_101(3), STR_100(3), 
  1891 ;;  ap              2   82[COMRAM] PTR PTR void 
  1892 ;;		 -> snprintf@ap(2), 
  1893 ;; Auto vars:     Size  Location     Type
  1894 ;;  cfmt            2   84[COMRAM] PTR unsigned char 
  1895 ;;		 -> STR_101(3), STR_100(3), 
  1896 ;; Return value:  Size  Location     Type
  1897 ;;                  2   78[COMRAM] int 
  1898 ;; Registers used:
  1899 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1900 ;; Tracked objects:
  1901 ;;		On entry : 0/0
  1902 ;;		On exit  : 0/0
  1903 ;;		Unchanged: 0/0
  1904 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1905 ;;      Params:         6       0       0       0       0       0       0       0       0
  1906 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1907 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1908 ;;      Totals:         8       0       0       0       0       0       0       0       0
  1909 ;;Total ram usage:        8 bytes
  1910 ;; Hardware stack levels used:    1
  1911 ;; Hardware stack levels required when called:    9
  1912 ;; This function calls:
  1913 ;;		_vfpfcnvrt
  1914 ;; This function is called by:
  1915 ;;		_vsnprintf
  1916 ;; This function uses a non-reentrant model
  1917 ;;
  1918                           
  1919                           	psect	text5
  1920  003D32                     __ptext5:
  1921                           	opt callstack 0
  1922  003D32                     _vfprintf:
  1923                           	opt callstack 17
  1924                           
  1925                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1368: int v
      +                          fprintf(FILE *fp, const char *fmt, va_list ap);C:\Program Files (x86)\Microchip\xc8\v2.0
      +                          5\pic\sources\c99\common\doprnt.c: 1369: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pi
      +                          c\sources\c99\common\doprnt.c: 1371:     char *cfmt;;C:\Program Files (x86)\Microchip\xc
      +                          8\v2.05\pic\sources\c99\common\doprnt.c: 1373:     cfmt = (char *)fmt;
  1926                           
  1927                           ; BSR set to: 0
  1928                           ;incstack = 0
  1929  003D32  C051  F055         	movff	vfprintf@fmt,vfprintf@cfmt
  1930  003D36  C052  F056         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  1931                           
  1932                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1374:     n
      +                          out = 0;
  1933  003D3A  0E00               	movlw	0
  1934  003D3C  0100               	movlb	0	; () banked
  1935  003D3E  6FF3               	movwf	(_nout+1)& (0+255),b
  1936  003D40  0E00               	movlw	0
  1937  003D42  6FF2               	movwf	_nout& (0+255),b
  1938                           
  1939                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  1940  003D44  D013               	goto	l4325
  1941  003D46                     l4323:
  1942                           
  1943                           ; BSR set to: 0
  1944                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1376:      
      +                             nout += vfpfcnvrt(fp, &cfmt, ap);
  1945  003D46  C04F  F045         	movff	vfprintf@fp,vfpfcnvrt@fp
  1946  003D4A  C050  F046         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  1947  003D4E  0E55               	movlw	low vfprintf@cfmt
  1948  003D50  6E47               	movwf	vfpfcnvrt@fmt,c
  1949  003D52  0E00               	movlw	high vfprintf@cfmt
  1950  003D54  6E48               	movwf	vfpfcnvrt@fmt+1,c
  1951  003D56  C053  F049         	movff	vfprintf@ap,vfpfcnvrt@ap
  1952  003D5A  C054  F04A         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  1953  003D5E  EC35  F004         	call	_vfpfcnvrt	;wreg free
  1954  003D62  5045               	movf	?_vfpfcnvrt,w,c
  1955  003D64  0100               	movlb	0	; () banked
  1956  003D66  27F2               	addwf	_nout& (0+255),f,b
  1957  003D68  5046               	movf	?_vfpfcnvrt+1,w,c
  1958  003D6A  23F3               	addwfc	(_nout+1)& (0+255),f,b
  1959  003D6C                     l4325:
  1960                           
  1961                           ; BSR set to: 0
  1962                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  1963  003D6C  C055  FFF6         	movff	vfprintf@cfmt,tblptrl
  1964  003D70  C056  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  1965  003D74                     	if	0	;tblptru may be non-zero
  1966  003D74                     	endif
  1967  003D74                     	if	0	;tblptru may be non-zero
  1968  003D74                     	endif
  1969  003D74  0008               	tblrd		*
  1970  003D76  50F5               	movf	tablat,w,c
  1971  003D78  0900               	iorlw	0
  1972  003D7A  A4D8               	btfss	status,2,c
  1973  003D7C  D7E4               	goto	l4323
  1974                           
  1975                           ; BSR set to: 0
  1976                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1378:     r
      +                          eturn nout;
  1977  003D7E  C0F2  F04F         	movff	_nout,?_vfprintf
  1978  003D82  C0F3  F050         	movff	_nout+1,?_vfprintf+1
  1979                           
  1980                           ; BSR set to: 0
  1981  003D86  0012               	return		;funcret
  1982  003D88                     __end_of_vfprintf:
  1983                           	opt callstack 0
  1984                           
  1985 ;; *************** function _vfpfcnvrt *****************
  1986 ;; Defined at:
  1987 ;;		line 670 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  1988 ;; Parameters:    Size  Location     Type
  1989 ;;  fp              2   68[COMRAM] PTR struct _IO_FILE
  1990 ;;		 -> vsnprintf@f(6), 
  1991 ;;  fmt             2   70[COMRAM] PTR PTR unsigned char 
  1992 ;;		 -> vfprintf@cfmt(2), 
  1993 ;;  ap              2   72[COMRAM] PTR PTR void 
  1994 ;;		 -> snprintf@ap(2), 
  1995 ;; Auto vars:     Size  Location     Type
  1996 ;;  llu             8   19[BANK0 ] unsigned long long 
  1997 ;;  ll              8    8[BANK0 ] long long 
  1998 ;;  f               4    0        long long 
  1999 ;;  ct              3    0        unsigned char [3]
  2000 ;;  vp              2   16[BANK0 ] PTR void 
  2001 ;;		 -> ?_snprintf(2), 
  2002 ;;  done            2    2[BANK0 ] int 
  2003 ;;  cp              2    0[BANK0 ] PTR unsigned char 
  2004 ;;		 -> ?_snprintf(2), 
  2005 ;;  i               2    0        int 
  2006 ;;  c               1   18[BANK0 ] unsigned char 
  2007 ;; Return value:  Size  Location     Type
  2008 ;;                  2   68[COMRAM] int 
  2009 ;; Registers used:
  2010 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2011 ;; Tracked objects:
  2012 ;;		On entry : 0/0
  2013 ;;		On exit  : 0/0
  2014 ;;		Unchanged: 0/0
  2015 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2016 ;;      Params:         6       0       0       0       0       0       0       0       0
  2017 ;;      Locals:         0      27       0       0       0       0       0       0       0
  2018 ;;      Temps:          4       0       0       0       0       0       0       0       0
  2019 ;;      Totals:        10      27       0       0       0       0       0       0       0
  2020 ;;Total ram usage:       37 bytes
  2021 ;; Hardware stack levels used:    1
  2022 ;; Hardware stack levels required when called:    8
  2023 ;; This function calls:
  2024 ;;		_atoi
  2025 ;;		_ctoa
  2026 ;;		_dtoa
  2027 ;;		_fputc
  2028 ;;		_isdigit
  2029 ;;		_otoa
  2030 ;;		_stoa
  2031 ;;		_strncmp
  2032 ;;		_utoa
  2033 ;;		_xtoa
  2034 ;; This function is called by:
  2035 ;;		_vfprintf
  2036 ;; This function uses a non-reentrant model
  2037 ;;
  2038                           
  2039                           	psect	text6
  2040  00086A                     __ptext6:
  2041                           	opt callstack 0
  2042  00086A                     _vfpfcnvrt:
  2043                           	opt callstack 17
  2044                           
  2045                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 670: static
      +                           int vfpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files (x86)\Microchip\xc8\v
      +                          2.05\pic\sources\c99\common\doprnt.c: 671: {;C:\Program Files (x86)\Microchip\xc8\v2.05\
      +                          pic\sources\c99\common\doprnt.c: 672:     char c, *cp, ct[3];;C:\Program Files (x86)\Mic
      +                          rochip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 673:     int done, i;;C:\Program Files
      +                           (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 674:     long long ll;
  2046                           
  2047                           ; BSR set to: 0
  2048                           ;incstack = 0
  2049  00086A  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2050  00086E  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2051  000872  CFDE FFF6          	movff	postinc2,tblptrl
  2052  000876  CFDD FFF7          	movff	postdec2,tblptrh
  2053  00087A                     	if	0	;tblptru may be non-zero
  2054  00087A                     	endif
  2055  00087A                     	if	0	;tblptru may be non-zero
  2056  00087A                     	endif
  2057  00087A  0008               	tblrd		*
  2058  00087C  50F5               	movf	tablat,w,c
  2059  00087E  0A25               	xorlw	37
  2060  000880  A4D8               	btfss	status,2,c
  2061  000882  EFD6  F00A         	goto	l4099
  2062                           
  2063                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 681:       
      +                            ++*fmt;
  2064  000886  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2065  00088A  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2066  00088E  2ADE               	incf	postinc2,f,c
  2067  000890  0E00               	movlw	0
  2068  000892  22DD               	addwfc	postdec2,f,c
  2069                           
  2070                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 683:       
      +                            flags = width = 0;
  2071  000894  0E00               	movlw	0
  2072  000896  0100               	movlb	0	; () banked
  2073  000898  6FF5               	movwf	(_width+1)& (0+255),b
  2074  00089A  0E00               	movlw	0
  2075  00089C  6FF4               	movwf	_width& (0+255),b
  2076  00089E  C0F4  F05B         	movff	_width,_flags
  2077  0008A2  C0F5  F05C         	movff	_width+1,_flags+1
  2078                           
  2079                           ; BSR set to: 0
  2080                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 684:       
      +                            prec = -1;
  2081  0008A6  69F6               	setf	_prec& (0+255),b
  2082  0008A8  69F7               	setf	(_prec+1)& (0+255),b
  2083                           
  2084                           ; BSR set to: 0
  2085                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 688:       
      +                            done = 0;
  2086  0008AA  0E00               	movlw	0
  2087  0008AC  6F63               	movwf	(vfpfcnvrt@done+1)& (0+255),b
  2088  0008AE  0E00               	movlw	0
  2089  0008B0  D014               	goto	L2
  2090  0008B2                     l3791:
  2091                           
  2092                           ; BSR set to: 0
  2093                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 692:       
      +                                        flags |= (1 << 0);
  2094  0008B2  805B               	bsf	_flags,0,c
  2095  0008B4                     l3793:
  2096                           
  2097                           ; BSR set to: 0
  2098                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 693:       
      +                                        ++*fmt;
  2099  0008B4  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2100  0008B8  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2101  0008BC  2ADE               	incf	postinc2,f,c
  2102  0008BE  0E00               	movlw	0
  2103  0008C0  22DD               	addwfc	postdec2,f,c
  2104                           
  2105                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 694:       
      +                                        break;
  2106  0008C2  D02E               	goto	l3817
  2107  0008C4                     l3795:
  2108                           
  2109                           ; BSR set to: 0
  2110                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 696:       
      +                                        flags |= (1 << 1);
  2111  0008C4  825B               	bsf	_flags,1,c
  2112  0008C6  D7F6               	goto	l3793
  2113  0008C8                     l3799:
  2114                           
  2115                           ; BSR set to: 0
  2116                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 700:       
      +                                        flags |= (1 << 2);
  2117  0008C8  845B               	bsf	_flags,2,c
  2118  0008CA  D7F4               	goto	l3793
  2119  0008CC                     l3803:
  2120                           
  2121                           ; BSR set to: 0
  2122                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 704:       
      +                                        flags |= (1 << 3);
  2123  0008CC  865B               	bsf	_flags,3,c
  2124  0008CE  D7F2               	goto	l3793
  2125  0008D0                     l3807:
  2126                           
  2127                           ; BSR set to: 0
  2128                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 708:       
      +                                        flags |= (1 << 4);
  2129  0008D0  885B               	bsf	_flags,4,c
  2130  0008D2  D7F0               	goto	l3793
  2131  0008D4                     l3811:
  2132                           
  2133                           ; BSR set to: 0
  2134                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 712:       
      +                                        done = 1;
  2135  0008D4  0E00               	movlw	0
  2136  0008D6  6F63               	movwf	(vfpfcnvrt@done+1)& (0+255),b
  2137  0008D8  0E01               	movlw	1
  2138  0008DA                     L2:
  2139  0008DA  6F62               	movwf	vfpfcnvrt@done& (0+255),b
  2140                           
  2141                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 713:       
      +                                        break;
  2142  0008DC  D021               	goto	l3817
  2143  0008DE                     l3815:
  2144                           
  2145                           ; BSR set to: 0
  2146  0008DE  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2147  0008E2  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2148  0008E6  CFDE FFF6          	movff	postinc2,tblptrl
  2149  0008EA  CFDD FFF7          	movff	postdec2,tblptrh
  2150  0008EE                     	if	0	;tblptru may be non-zero
  2151  0008EE                     	endif
  2152  0008EE                     	if	0	;tblptru may be non-zero
  2153  0008EE                     	endif
  2154  0008EE  0008               	tblrd		*
  2155  0008F0  50F5               	movf	tablat,w,c
  2156  0008F2  6E4B               	movwf	??_vfpfcnvrt& (0+255),c
  2157  0008F4  6A4C               	clrf	(??_vfpfcnvrt+1)& (0+255),c
  2158                           
  2159                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2160                           ; Switch size 1, requested type "simple"
  2161                           ; Number of cases is 1, Range of values is 0 to 0
  2162                           ; switch strategies available:
  2163                           ; Name         Instructions Cycles
  2164                           ; simple_byte            4     3 (average)
  2165                           ;	Chosen strategy is simple_byte
  2166  0008F6  504C               	movf	??_vfpfcnvrt+1,w,c
  2167  0008F8  0A00               	xorlw	0	; case 0
  2168  0008FA  A4D8               	btfss	status,2,c
  2169  0008FC  D7EB               	goto	l3811
  2170                           
  2171                           ; BSR set to: 0
  2172                           ; Switch size 1, requested type "simple"
  2173                           ; Number of cases is 5, Range of values is 32 to 48
  2174                           ; switch strategies available:
  2175                           ; Name         Instructions Cycles
  2176                           ; simple_byte           16     9 (average)
  2177                           ;	Chosen strategy is simple_byte
  2178  0008FE  504B               	movf	??_vfpfcnvrt,w,c
  2179  000900  0A20               	xorlw	32	; case 32
  2180  000902  B4D8               	btfsc	status,2,c
  2181  000904  D7E3               	goto	l3803
  2182  000906  0A03               	xorlw	3	; case 35
  2183  000908  B4D8               	btfsc	status,2,c
  2184  00090A  D7E2               	goto	l3807
  2185  00090C  0A08               	xorlw	8	; case 43
  2186  00090E  B4D8               	btfsc	status,2,c
  2187  000910  D7DB               	goto	l3799
  2188  000912  0A06               	xorlw	6	; case 45
  2189  000914  B4D8               	btfsc	status,2,c
  2190  000916  D7CD               	goto	l3791
  2191  000918  0A1D               	xorlw	29	; case 48
  2192  00091A  B4D8               	btfsc	status,2,c
  2193  00091C  D7D3               	goto	l3795
  2194  00091E  D7DA               	goto	l3811
  2195  000920                     l3817:
  2196                           
  2197                           ; BSR set to: 0
  2198                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 689:       
      +                            while (!done) {
  2199  000920  5162               	movf	vfpfcnvrt@done& (0+255),w,b
  2200  000922  1163               	iorwf	(vfpfcnvrt@done+1)& (0+255),w,b
  2201  000924  B4D8               	btfsc	status,2,c
  2202  000926  D7DB               	goto	l3815
  2203                           
  2204                           ; BSR set to: 0
  2205                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 716:       
      +                            if (flags & (1 << 0)) {
  2206  000928  B05B               	btfsc	_flags,0,c
  2207                           
  2208                           ; BSR set to: 0
  2209                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 717:       
      +                                flags &= ~(1 << 1);
  2210  00092A  925B               	bcf	_flags,1,c
  2211                           
  2212                           ; BSR set to: 0
  2213                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 723:       
      +                            if ((*fmt)[0] == '*') {
  2214  00092C  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2215  000930  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2216  000934  CFDE FFF6          	movff	postinc2,tblptrl
  2217  000938  CFDD FFF7          	movff	postdec2,tblptrh
  2218  00093C                     	if	0	;tblptru may be non-zero
  2219  00093C                     	endif
  2220  00093C                     	if	0	;tblptru may be non-zero
  2221  00093C                     	endif
  2222  00093C  0008               	tblrd		*
  2223  00093E  50F5               	movf	tablat,w,c
  2224  000940  0A2A               	xorlw	42
  2225  000942  A4D8               	btfss	status,2,c
  2226  000944  D023               	goto	l3829
  2227                           
  2228                           ; BSR set to: 0
  2229                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 724:       
      +                                ++*fmt;
  2230  000946  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2231  00094A  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2232  00094E  2ADE               	incf	postinc2,f,c
  2233  000950  0E00               	movlw	0
  2234  000952  22DD               	addwfc	postdec2,f,c
  2235                           
  2236                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 725:       
      +                                width = (*(int *)__va_arg(*(int **)ap, (int)0));
  2237  000954  C049  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2238  000958  C04A  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2239  00095C  CFDF F04B          	movff	indf2,??_vfpfcnvrt
  2240  000960  0E02               	movlw	2
  2241  000962  26DE               	addwf	postinc2,f,c
  2242  000964  CFDF F04C          	movff	indf2,??_vfpfcnvrt+1
  2243  000968  0E00               	movlw	0
  2244  00096A  22DD               	addwfc	postdec2,f,c
  2245  00096C  C04B  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2246  000970  C04C  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2247  000974  CFDE F0F4          	movff	postinc2,_width
  2248  000978  CFDD F0F5          	movff	postdec2,_width+1
  2249                           
  2250                           ; BSR set to: 0
  2251                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 726:       
      +                                if (width < 0) {
  2252  00097C  AFF5               	btfss	(_width+1)& (0+255),7,b
  2253  00097E  D040               	goto	u4080
  2254                           
  2255                           ; BSR set to: 0
  2256                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 727:       
      +                                    flags |= (1 << 0);
  2257  000980  805B               	bsf	_flags,0,c
  2258                           
  2259                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 728:       
      +                                    width = -width;
  2260  000982  6DF4               	negf	_width& (0+255),b
  2261  000984  1FF5               	comf	(_width+1)& (0+255),f,b
  2262  000986  B0D8               	btfsc	status,0,c
  2263  000988  2BF5               	incf	(_width+1)& (0+255),f,b
  2264  00098A  D03A               	goto	u4080
  2265  00098C                     l3829:
  2266                           
  2267                           ; BSR set to: 0
  2268                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 731:       
      +                                width = atoi(*fmt);
  2269  00098C  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2270  000990  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2271  000994  CFDE F00A          	movff	postinc2,atoi@s
  2272  000998  CFDD F00B          	movff	postdec2,atoi@s+1
  2273  00099C  EC31  F018         	call	_atoi	;wreg free
  2274  0009A0  C00A  F0F4         	movff	?_atoi,_width
  2275  0009A4  C00B  F0F5         	movff	?_atoi+1,_width+1
  2276                           
  2277                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 732:       
      +                                while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  2278  0009A8  D007               	goto	l3833
  2279  0009AA                     l3831:
  2280                           
  2281                           ; BSR set to: 0
  2282                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 733:       
      +                                    ++*fmt;
  2283  0009AA  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2284  0009AE  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2285  0009B2  2ADE               	incf	postinc2,f,c
  2286  0009B4  0E00               	movlw	0
  2287  0009B6  22DD               	addwfc	postdec2,f,c
  2288  0009B8                     l3833:
  2289  0009B8  0ED0               	movlw	208
  2290  0009BA  6E4B               	movwf	??_vfpfcnvrt& (0+255),c
  2291  0009BC  0EFF               	movlw	255
  2292  0009BE  6E4C               	movwf	(??_vfpfcnvrt+1)& (0+255),c
  2293  0009C0  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2294  0009C4  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2295  0009C8  CFDE FFF6          	movff	postinc2,tblptrl
  2296  0009CC  CFDD FFF7          	movff	postdec2,tblptrh
  2297  0009D0                     	if	0	;tblptru may be non-zero
  2298  0009D0                     	endif
  2299  0009D0                     	if	0	;tblptru may be non-zero
  2300  0009D0                     	endif
  2301  0009D0  0008               	tblrd		*
  2302  0009D2  50F5               	movf	tablat,w,c
  2303  0009D4  6E4D               	movwf	(??_vfpfcnvrt+2)& (0+255),c
  2304  0009D6  6A4E               	clrf	(??_vfpfcnvrt+3)& (0+255),c
  2305  0009D8  504B               	movf	??_vfpfcnvrt,w,c
  2306  0009DA  264D               	addwf	??_vfpfcnvrt+2,f,c
  2307  0009DC  504C               	movf	??_vfpfcnvrt+1,w,c
  2308  0009DE  224E               	addwfc	??_vfpfcnvrt+3,f,c
  2309  0009E0  504E               	movf	??_vfpfcnvrt+3,w,c
  2310  0009E2  E106               	bnz	u4060
  2311  0009E4  0E0A               	movlw	10
  2312  0009E6  5C4D               	subwf	??_vfpfcnvrt+2,w,c
  2313  0009E8  B0D8               	btfsc	status,0,c
  2314  0009EA  D002               	goto	u4060
  2315  0009EC  0E01               	movlw	1
  2316  0009EE  D001               	goto	u4070
  2317  0009F0                     u4060:
  2318  0009F0  0E00               	movlw	0
  2319  0009F2                     u4070:
  2320  0009F2  0100               	movlb	0	; () banked
  2321  0009F4  6F64               	movwf	_vfpfcnvrt$198& (0+255),b
  2322  0009F6  6B65               	clrf	(_vfpfcnvrt$198+1)& (0+255),b
  2323                           
  2324                           ; BSR set to: 0
  2325  0009F8  5164               	movf	_vfpfcnvrt$198& (0+255),w,b
  2326  0009FA  1165               	iorwf	(_vfpfcnvrt$198+1)& (0+255),w,b
  2327  0009FC  A4D8               	btfss	status,2,c
  2328  0009FE  D7D5               	goto	l3831
  2329  000A00                     u4080:
  2330                           
  2331                           ; BSR set to: 0
  2332                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 740:       
      +                            if ((*fmt)[0] == '.') {
  2333  000A00  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2334  000A04  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2335  000A08  CFDE FFF6          	movff	postinc2,tblptrl
  2336  000A0C  CFDD FFF7          	movff	postdec2,tblptrh
  2337  000A10                     	if	0	;tblptru may be non-zero
  2338  000A10                     	endif
  2339  000A10                     	if	0	;tblptru may be non-zero
  2340  000A10                     	endif
  2341  000A10  0008               	tblrd		*
  2342  000A12  50F5               	movf	tablat,w,c
  2343  000A14  0A2E               	xorlw	46
  2344  000A16  A4D8               	btfss	status,2,c
  2345  000A18  D06E               	goto	u4130
  2346                           
  2347                           ; BSR set to: 0
  2348                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 741:       
      +                                prec = 0;
  2349  000A1A  0E00               	movlw	0
  2350  000A1C  6FF7               	movwf	(_prec+1)& (0+255),b
  2351  000A1E  0E00               	movlw	0
  2352  000A20  6FF6               	movwf	_prec& (0+255),b
  2353                           
  2354                           ; BSR set to: 0
  2355                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 742:       
      +                                ++*fmt;
  2356  000A22  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2357  000A26  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2358  000A2A  2ADE               	incf	postinc2,f,c
  2359  000A2C  0E00               	movlw	0
  2360  000A2E  22DD               	addwfc	postdec2,f,c
  2361                           
  2362                           ; BSR set to: 0
  2363                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 743:       
      +                                if ((*fmt)[0] == '*') {
  2364  000A30  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2365  000A34  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2366  000A38  CFDE FFF6          	movff	postinc2,tblptrl
  2367  000A3C  CFDD FFF7          	movff	postdec2,tblptrh
  2368  000A40                     	if	0	;tblptru may be non-zero
  2369  000A40                     	endif
  2370  000A40                     	if	0	;tblptru may be non-zero
  2371  000A40                     	endif
  2372  000A40  0008               	tblrd		*
  2373  000A42  50F5               	movf	tablat,w,c
  2374  000A44  0A2A               	xorlw	42
  2375  000A46  A4D8               	btfss	status,2,c
  2376  000A48  D01C               	goto	l3849
  2377                           
  2378                           ; BSR set to: 0
  2379                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 744:       
      +                                    ++*fmt;
  2380  000A4A  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2381  000A4E  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2382  000A52  2ADE               	incf	postinc2,f,c
  2383  000A54  0E00               	movlw	0
  2384  000A56  22DD               	addwfc	postdec2,f,c
  2385                           
  2386                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 745:       
      +                                    prec = (*(int *)__va_arg(*(int **)ap, (int)0));
  2387  000A58  C049  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2388  000A5C  C04A  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2389  000A60  CFDF F04B          	movff	indf2,??_vfpfcnvrt
  2390  000A64  0E02               	movlw	2
  2391  000A66  26DE               	addwf	postinc2,f,c
  2392  000A68  CFDF F04C          	movff	indf2,??_vfpfcnvrt+1
  2393  000A6C  0E00               	movlw	0
  2394  000A6E  22DD               	addwfc	postdec2,f,c
  2395  000A70  C04B  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2396  000A74  C04C  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2397  000A78  CFDE F0F6          	movff	postinc2,_prec
  2398  000A7C  CFDD F0F7          	movff	postdec2,_prec+1
  2399                           
  2400                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 746:       
      +                                } else {
  2401  000A80  D03A               	goto	u4130
  2402  000A82                     l3849:
  2403                           
  2404                           ; BSR set to: 0
  2405                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 747:       
      +                                    prec = atoi(*fmt);
  2406  000A82  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2407  000A86  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2408  000A8A  CFDE F00A          	movff	postinc2,atoi@s
  2409  000A8E  CFDD F00B          	movff	postdec2,atoi@s+1
  2410  000A92  EC31  F018         	call	_atoi	;wreg free
  2411  000A96  C00A  F0F6         	movff	?_atoi,_prec
  2412  000A9A  C00B  F0F7         	movff	?_atoi+1,_prec+1
  2413                           
  2414                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 748:       
      +                                    while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  2415  000A9E  D007               	goto	l3853
  2416  000AA0                     l3851:
  2417                           
  2418                           ; BSR set to: 0
  2419                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 749:       
      +                                        ++*fmt;
  2420  000AA0  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2421  000AA4  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2422  000AA8  2ADE               	incf	postinc2,f,c
  2423  000AAA  0E00               	movlw	0
  2424  000AAC  22DD               	addwfc	postdec2,f,c
  2425  000AAE                     l3853:
  2426  000AAE  0ED0               	movlw	208
  2427  000AB0  6E4B               	movwf	??_vfpfcnvrt& (0+255),c
  2428  000AB2  0EFF               	movlw	255
  2429  000AB4  6E4C               	movwf	(??_vfpfcnvrt+1)& (0+255),c
  2430  000AB6  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2431  000ABA  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2432  000ABE  CFDE FFF6          	movff	postinc2,tblptrl
  2433  000AC2  CFDD FFF7          	movff	postdec2,tblptrh
  2434  000AC6                     	if	0	;tblptru may be non-zero
  2435  000AC6                     	endif
  2436  000AC6                     	if	0	;tblptru may be non-zero
  2437  000AC6                     	endif
  2438  000AC6  0008               	tblrd		*
  2439  000AC8  50F5               	movf	tablat,w,c
  2440  000ACA  6E4D               	movwf	(??_vfpfcnvrt+2)& (0+255),c
  2441  000ACC  6A4E               	clrf	(??_vfpfcnvrt+3)& (0+255),c
  2442  000ACE  504B               	movf	??_vfpfcnvrt,w,c
  2443  000AD0  264D               	addwf	??_vfpfcnvrt+2,f,c
  2444  000AD2  504C               	movf	??_vfpfcnvrt+1,w,c
  2445  000AD4  224E               	addwfc	??_vfpfcnvrt+3,f,c
  2446  000AD6  504E               	movf	??_vfpfcnvrt+3,w,c
  2447  000AD8  E106               	bnz	u4110
  2448  000ADA  0E0A               	movlw	10
  2449  000ADC  5C4D               	subwf	??_vfpfcnvrt+2,w,c
  2450  000ADE  B0D8               	btfsc	status,0,c
  2451  000AE0  D002               	goto	u4110
  2452  000AE2  0E01               	movlw	1
  2453  000AE4  D001               	goto	u4120
  2454  000AE6                     u4110:
  2455  000AE6  0E00               	movlw	0
  2456  000AE8                     u4120:
  2457  000AE8  0100               	movlb	0	; () banked
  2458  000AEA  6F66               	movwf	_vfpfcnvrt$199& (0+255),b
  2459  000AEC  6B67               	clrf	(_vfpfcnvrt$199+1)& (0+255),b
  2460                           
  2461                           ; BSR set to: 0
  2462  000AEE  5166               	movf	_vfpfcnvrt$199& (0+255),w,b
  2463  000AF0  1167               	iorwf	(_vfpfcnvrt$199+1)& (0+255),w,b
  2464  000AF2  A4D8               	btfss	status,2,c
  2465  000AF4  D7D5               	goto	l3851
  2466  000AF6                     u4130:
  2467                           
  2468                           ; BSR set to: 0
  2469                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 792:       
      +                            if (*fmt[0] == 'c') {
  2470  000AF6  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2471  000AFA  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2472  000AFE  CFDE FFF6          	movff	postinc2,tblptrl
  2473  000B02  CFDD FFF7          	movff	postdec2,tblptrh
  2474  000B06                     	if	0	;tblptru may be non-zero
  2475  000B06                     	endif
  2476  000B06                     	if	0	;tblptru may be non-zero
  2477  000B06                     	endif
  2478  000B06  0008               	tblrd		*
  2479  000B08  50F5               	movf	tablat,w,c
  2480  000B0A  0A63               	xorlw	99
  2481  000B0C  A4D8               	btfss	status,2,c
  2482  000B0E  D026               	goto	l3867
  2483                           
  2484                           ; BSR set to: 0
  2485                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 793:       
      +                                ++*fmt;
  2486  000B10  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2487  000B14  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2488  000B18  2ADE               	incf	postinc2,f,c
  2489  000B1A  0E00               	movlw	0
  2490  000B1C  22DD               	addwfc	postdec2,f,c
  2491                           
  2492                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 794:       
      +                                c = (unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
  2493  000B1E  C049  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2494  000B22  C04A  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2495  000B26  CFDF F04B          	movff	indf2,??_vfpfcnvrt
  2496  000B2A  0E02               	movlw	2
  2497  000B2C  26DE               	addwf	postinc2,f,c
  2498  000B2E  CFDF F04C          	movff	indf2,??_vfpfcnvrt+1
  2499  000B32  0E00               	movlw	0
  2500  000B34  22DD               	addwfc	postdec2,f,c
  2501  000B36  C04B  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2502  000B3A  C04C  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2503  000B3E  50DF               	movf	indf2,w,c
  2504  000B40  6F72               	movwf	vfpfcnvrt@c& (0+255),b
  2505                           
  2506                           ; BSR set to: 0
  2507                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 795:       
      +                                return ctoa(fp, c);
  2508  000B42  C045  F01E         	movff	vfpfcnvrt@fp,ctoa@fp
  2509  000B46  C046  F01F         	movff	vfpfcnvrt@fp+1,ctoa@fp+1
  2510  000B4A  C072  F020         	movff	vfpfcnvrt@c,ctoa@c
  2511  000B4E  ECC4  F01E         	call	_ctoa	;wreg free
  2512  000B52  C01E  F045         	movff	?_ctoa,?_vfpfcnvrt
  2513  000B56  C01F  F046         	movff	?_ctoa+1,?_vfpfcnvrt+1
  2514  000B5A  0012               	return	
  2515  000B5C                     l3867:
  2516                           
  2517                           ; BSR set to: 0
  2518                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 802:       
      +                            if (!strncmp(*fmt, "hhd", ((sizeof("hhd")/sizeof("hhd"[0]))-1)) || !strncmp(*fmt, "hhi
      +                          ", ((sizeof("hhi")/sizeof("hhi"[0]))-1))) {
  2519  000B5C  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2520  000B60  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2521  000B64  CFDE F003          	movff	postinc2,strncmp@_l
  2522  000B68  CFDD F004          	movff	postdec2,strncmp@_l+1
  2523  000B6C  0E38               	movlw	low STR_1
  2524  000B6E  6E05               	movwf	strncmp@_r,c
  2525  000B70  0E08               	movlw	high STR_1
  2526  000B72  6E06               	movwf	strncmp@_r+1,c
  2527  000B74  0E00               	movlw	0
  2528  000B76  6E08               	movwf	strncmp@n+1,c
  2529  000B78  0E03               	movlw	3
  2530  000B7A  6E07               	movwf	strncmp@n,c
  2531  000B7C  EC75  F01D         	call	_strncmp	;wreg free
  2532  000B80  5003               	movf	?_strncmp,w,c
  2533  000B82  1004               	iorwf	?_strncmp+1,w,c
  2534  000B84  B4D8               	btfsc	status,2,c
  2535  000B86  D016               	goto	u4160
  2536  000B88  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2537  000B8C  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2538  000B90  CFDE F003          	movff	postinc2,strncmp@_l
  2539  000B94  CFDD F004          	movff	postdec2,strncmp@_l+1
  2540  000B98  0E3C               	movlw	low STR_5
  2541  000B9A  6E05               	movwf	strncmp@_r,c
  2542  000B9C  0E08               	movlw	high STR_5
  2543  000B9E  6E06               	movwf	strncmp@_r+1,c
  2544  000BA0  0E00               	movlw	0
  2545  000BA2  6E08               	movwf	strncmp@n+1,c
  2546  000BA4  0E03               	movlw	3
  2547  000BA6  6E07               	movwf	strncmp@n,c
  2548  000BA8  EC75  F01D         	call	_strncmp	;wreg free
  2549  000BAC  5003               	movf	?_strncmp,w,c
  2550  000BAE  1004               	iorwf	?_strncmp+1,w,c
  2551  000BB0  A4D8               	btfss	status,2,c
  2552  000BB2  D040               	goto	l3877
  2553  000BB4                     u4160:
  2554                           
  2555                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 803: ;C:\Pr
      +                          ogram Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 805:             
      +                          *fmt += ((sizeof("hhd")/sizeof("hhd"[0]))-1);
  2556  000BB4  0E03               	movlw	3
  2557  000BB6  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2558  000BBA  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2559  000BBE  26DE               	addwf	postinc2,f,c
  2560  000BC0  0E00               	movlw	0
  2561  000BC2  22DD               	addwfc	postdec2,f,c
  2562                           
  2563                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 806:       
      +                                ll = (long long)(signed char)(*(int *)__va_arg(*(int **)ap, (int)0));
  2564  000BC4  C049  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2565  000BC8  C04A  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2566  000BCC  CFDF F04B          	movff	indf2,??_vfpfcnvrt
  2567  000BD0  0E02               	movlw	2
  2568  000BD2  26DE               	addwf	postinc2,f,c
  2569  000BD4  CFDF F04C          	movff	indf2,??_vfpfcnvrt+1
  2570  000BD8  0E00               	movlw	0
  2571  000BDA  22DD               	addwfc	postdec2,f,c
  2572  000BDC  C04B  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2573  000BE0  C04C  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2574  000BE4  50DF               	movf	indf2,w,c
  2575  000BE6  0100               	movlb	0	; () banked
  2576  000BE8  6F68               	movwf	vfpfcnvrt@ll& (0+255),b
  2577  000BEA  0E00               	movlw	0
  2578  000BEC  BF68               	btfsc	vfpfcnvrt@ll& (0+255),7,b
  2579  000BEE  0EFF               	movlw	-1
  2580  000BF0  6F69               	movwf	(vfpfcnvrt@ll+1)& (0+255),b
  2581  000BF2                     L3:
  2582  000BF2  6F6A               	movwf	(vfpfcnvrt@ll+2)& (0+255),b
  2583  000BF4  6F6B               	movwf	(vfpfcnvrt@ll+3)& (0+255),b
  2584  000BF6  6F6C               	movwf	(vfpfcnvrt@ll+4)& (0+255),b
  2585  000BF8  6F6D               	movwf	(vfpfcnvrt@ll+5)& (0+255),b
  2586  000BFA  6F6E               	movwf	(vfpfcnvrt@ll+6)& (0+255),b
  2587  000BFC  6F6F               	movwf	(vfpfcnvrt@ll+7)& (0+255),b
  2588  000BFE                     l3873:
  2589                           
  2590                           ; BSR set to: 0
  2591                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 808:       
      +                                return dtoa(fp, ll);
  2592  000BFE  C045  F01E         	movff	vfpfcnvrt@fp,dtoa@fp
  2593  000C02  C046  F01F         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  2594  000C06  C068  F020         	movff	vfpfcnvrt@ll,dtoa@d
  2595  000C0A  C069  F021         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  2596  000C0E  C06A  F022         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  2597  000C12  C06B  F023         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  2598  000C16  C06C  F024         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  2599  000C1A  C06D  F025         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  2600  000C1E  C06E  F026         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  2601  000C22  C06F  F027         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  2602  000C26  ECDC  F012         	call	_dtoa	;wreg free
  2603  000C2A  C01E  F045         	movff	?_dtoa,?_vfpfcnvrt
  2604  000C2E  C01F  F046         	movff	?_dtoa+1,?_vfpfcnvrt+1
  2605  000C32  0012               	return	
  2606  000C34                     l3877:
  2607                           
  2608                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 814:       
      +                            if (!strncmp(*fmt, "hd", ((sizeof("hd")/sizeof("hd"[0]))-1)) || !strncmp(*fmt, "hi", (
      +                          (sizeof("hi")/sizeof("hi"[0]))-1))) {
  2609  000C34  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2610  000C38  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2611  000C3C  CFDE F003          	movff	postinc2,strncmp@_l
  2612  000C40  CFDD F004          	movff	postdec2,strncmp@_l+1
  2613  000C44  0E39               	movlw	low (STR_1+1)
  2614  000C46  6E05               	movwf	strncmp@_r,c
  2615  000C48  0E08               	movlw	high (STR_1+1)
  2616  000C4A  6E06               	movwf	strncmp@_r+1,c
  2617  000C4C  0E00               	movlw	0
  2618  000C4E  6E08               	movwf	strncmp@n+1,c
  2619  000C50  0E02               	movlw	2
  2620  000C52  6E07               	movwf	strncmp@n,c
  2621  000C54  EC75  F01D         	call	_strncmp	;wreg free
  2622  000C58  5003               	movf	?_strncmp,w,c
  2623  000C5A  1004               	iorwf	?_strncmp+1,w,c
  2624  000C5C  B4D8               	btfsc	status,2,c
  2625  000C5E  D016               	goto	u4180
  2626  000C60  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2627  000C64  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2628  000C68  CFDE F003          	movff	postinc2,strncmp@_l
  2629  000C6C  CFDD F004          	movff	postdec2,strncmp@_l+1
  2630  000C70  0E3D               	movlw	low (STR_5+1)
  2631  000C72  6E05               	movwf	strncmp@_r,c
  2632  000C74  0E08               	movlw	high (STR_5+1)
  2633  000C76  6E06               	movwf	strncmp@_r+1,c
  2634  000C78  0E00               	movlw	0
  2635  000C7A  6E08               	movwf	strncmp@n+1,c
  2636  000C7C  0E02               	movlw	2
  2637  000C7E  6E07               	movwf	strncmp@n,c
  2638  000C80  EC75  F01D         	call	_strncmp	;wreg free
  2639  000C84  5003               	movf	?_strncmp,w,c
  2640  000C86  1004               	iorwf	?_strncmp+1,w,c
  2641  000C88  A4D8               	btfss	status,2,c
  2642  000C8A  D007               	goto	l3887
  2643  000C8C                     u4180:
  2644                           
  2645                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 815: ;C:\Pr
      +                          ogram Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 817:             
      +                          *fmt += ((sizeof("hd")/sizeof("hd"[0]))-1);
  2646  000C8C  0E02               	movlw	2
  2647  000C8E  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2648  000C92  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2649  000C96  26DE               	addwf	postinc2,f,c
  2650  000C98  D01F               	goto	L8
  2651  000C9A                     l3887:
  2652                           
  2653                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 825:       
      +                            if ((*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  2654  000C9A  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2655  000C9E  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2656  000CA2  CFDE FFF6          	movff	postinc2,tblptrl
  2657  000CA6  CFDD FFF7          	movff	postdec2,tblptrh
  2658  000CAA                     	if	0	;tblptru may be non-zero
  2659  000CAA                     	endif
  2660  000CAA                     	if	0	;tblptru may be non-zero
  2661  000CAA                     	endif
  2662  000CAA  0008               	tblrd		*
  2663  000CAC  50F5               	movf	tablat,w,c
  2664  000CAE  0A64               	xorlw	100
  2665  000CB0  B4D8               	btfsc	status,2,c
  2666  000CB2  D00D               	goto	u4200
  2667  000CB4  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2668  000CB8  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2669  000CBC  CFDE FFF6          	movff	postinc2,tblptrl
  2670  000CC0  CFDD FFF7          	movff	postdec2,tblptrh
  2671  000CC4                     	if	0	;tblptru may be non-zero
  2672  000CC4                     	endif
  2673  000CC4                     	if	0	;tblptru may be non-zero
  2674  000CC4                     	endif
  2675  000CC4  0008               	tblrd		*
  2676  000CC6  50F5               	movf	tablat,w,c
  2677  000CC8  0A69               	xorlw	105
  2678  000CCA  A4D8               	btfss	status,2,c
  2679  000CCC  D020               	goto	l3897
  2680  000CCE                     u4200:
  2681                           
  2682                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 827:       
      +                                ++*fmt;
  2683  000CCE  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2684  000CD2  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2685  000CD6  2ADE               	incf	postinc2,f,c
  2686  000CD8                     L8:
  2687  000CD8  0E00               	movlw	0
  2688  000CDA  22DD               	addwfc	postdec2,f,c
  2689                           
  2690                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 828:       
      +                                ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  2691  000CDC  C049  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2692  000CE0  C04A  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2693  000CE4  CFDF F04B          	movff	indf2,??_vfpfcnvrt
  2694  000CE8  0E02               	movlw	2
  2695  000CEA  26DE               	addwf	postinc2,f,c
  2696  000CEC  CFDF F04C          	movff	indf2,??_vfpfcnvrt+1
  2697  000CF0  0E00               	movlw	0
  2698  000CF2  22DD               	addwfc	postdec2,f,c
  2699  000CF4  C04B  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2700  000CF8  C04C  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2701  000CFC  CFDE F068          	movff	postinc2,vfpfcnvrt@ll
  2702  000D00  CFDD F069          	movff	postdec2,vfpfcnvrt@ll+1
  2703  000D04  0100               	movlb	0	; () banked
  2704  000D06  0E00               	movlw	0
  2705  000D08  BF69               	btfsc	(vfpfcnvrt@ll+1)& (0+255),7,b
  2706  000D0A  0EFF               	movlw	-1
  2707  000D0C  D772               	goto	L3
  2708  000D0E                     l3897:
  2709                           
  2710                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 883:       
      +                            if (!strncmp(*fmt, "zd", ((sizeof("zd")/sizeof("zd"[0]))-1)) || !strncmp(*fmt, "zi", (
      +                          (sizeof("zi")/sizeof("zi"[0]))-1))) {
  2711  000D0E  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2712  000D12  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2713  000D16  CFDE F003          	movff	postinc2,strncmp@_l
  2714  000D1A  CFDD F004          	movff	postdec2,strncmp@_l+1
  2715  000D1E  0E56               	movlw	low STR_19
  2716  000D20  6E05               	movwf	strncmp@_r,c
  2717  000D22  0E08               	movlw	high STR_19
  2718  000D24  6E06               	movwf	strncmp@_r+1,c
  2719  000D26  0E00               	movlw	0
  2720  000D28  6E08               	movwf	strncmp@n+1,c
  2721  000D2A  0E02               	movlw	2
  2722  000D2C  6E07               	movwf	strncmp@n,c
  2723  000D2E  EC75  F01D         	call	_strncmp	;wreg free
  2724  000D32  5003               	movf	?_strncmp,w,c
  2725  000D34  1004               	iorwf	?_strncmp+1,w,c
  2726  000D36  B4D8               	btfsc	status,2,c
  2727  000D38  D016               	goto	u4220
  2728  000D3A  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2729  000D3E  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2730  000D42  CFDE F003          	movff	postinc2,strncmp@_l
  2731  000D46  CFDD F004          	movff	postdec2,strncmp@_l+1
  2732  000D4A  0E59               	movlw	low STR_23
  2733  000D4C  6E05               	movwf	strncmp@_r,c
  2734  000D4E  0E08               	movlw	high STR_23
  2735  000D50  6E06               	movwf	strncmp@_r+1,c
  2736  000D52  0E00               	movlw	0
  2737  000D54  6E08               	movwf	strncmp@n+1,c
  2738  000D56  0E02               	movlw	2
  2739  000D58  6E07               	movwf	strncmp@n,c
  2740  000D5A  EC75  F01D         	call	_strncmp	;wreg free
  2741  000D5E  5003               	movf	?_strncmp,w,c
  2742  000D60  1004               	iorwf	?_strncmp+1,w,c
  2743  000D62  A4D8               	btfss	status,2,c
  2744  000D64  D028               	goto	l3907
  2745  000D66                     u4220:
  2746                           
  2747                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 884: ;C:\Pr
      +                          ogram Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 886:             
      +                          *fmt += ((sizeof("zd")/sizeof("zd"[0]))-1);
  2748  000D66  0E02               	movlw	2
  2749  000D68  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2750  000D6C  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2751  000D70  26DE               	addwf	postinc2,f,c
  2752  000D72  0E00               	movlw	0
  2753  000D74  22DD               	addwfc	postdec2,f,c
  2754                           
  2755                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 887:       
      +                                ll = (long long)(*(size_t *)__va_arg(*(size_t **)ap, (size_t)0));
  2756  000D76  C049  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2757  000D7A  C04A  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2758  000D7E  CFDF F04B          	movff	indf2,??_vfpfcnvrt
  2759  000D82  0E02               	movlw	2
  2760  000D84  26DE               	addwf	postinc2,f,c
  2761  000D86  CFDF F04C          	movff	indf2,??_vfpfcnvrt+1
  2762  000D8A  0E00               	movlw	0
  2763  000D8C  22DD               	addwfc	postdec2,f,c
  2764  000D8E  C04B  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2765  000D92  C04C  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2766  000D96  CFDE F04D          	movff	postinc2,??_vfpfcnvrt+2
  2767  000D9A  CFDD F04E          	movff	postdec2,??_vfpfcnvrt+3
  2768  000D9E  C04D  F068         	movff	??_vfpfcnvrt+2,vfpfcnvrt@ll
  2769  000DA2  C04E  F069         	movff	??_vfpfcnvrt+3,vfpfcnvrt@ll+1
  2770  000DA6  0100               	movlb	0	; () banked
  2771  000DA8  6B6A               	clrf	(vfpfcnvrt@ll+2)& (0+255),b
  2772  000DAA  6B6B               	clrf	(vfpfcnvrt@ll+3)& (0+255),b
  2773  000DAC  6B6C               	clrf	(vfpfcnvrt@ll+4)& (0+255),b
  2774  000DAE  6B6D               	clrf	(vfpfcnvrt@ll+5)& (0+255),b
  2775  000DB0  6B6E               	clrf	(vfpfcnvrt@ll+6)& (0+255),b
  2776  000DB2  6B6F               	clrf	(vfpfcnvrt@ll+7)& (0+255),b
  2777  000DB4  D724               	goto	l3873
  2778  000DB6                     l3907:
  2779                           
  2780                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 969:       
      +                            if (!strncmp(*fmt, "hho", ((sizeof("hho")/sizeof("hho"[0]))-1))) {
  2781  000DB6  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2782  000DBA  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2783  000DBE  CFDE F003          	movff	postinc2,strncmp@_l
  2784  000DC2  CFDD F004          	movff	postdec2,strncmp@_l+1
  2785  000DC6  0E44               	movlw	low STR_28
  2786  000DC8  6E05               	movwf	strncmp@_r,c
  2787  000DCA  0E08               	movlw	high STR_28
  2788  000DCC  6E06               	movwf	strncmp@_r+1,c
  2789  000DCE  0E00               	movlw	0
  2790  000DD0  6E08               	movwf	strncmp@n+1,c
  2791  000DD2  0E03               	movlw	3
  2792  000DD4  6E07               	movwf	strncmp@n,c
  2793  000DD6  EC75  F01D         	call	_strncmp	;wreg free
  2794  000DDA  5003               	movf	?_strncmp,w,c
  2795  000DDC  1004               	iorwf	?_strncmp+1,w,c
  2796  000DDE  A4D8               	btfss	status,2,c
  2797  000DE0  D03F               	goto	l3915
  2798                           
  2799                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 971:       
      +                                *fmt += ((sizeof("hho")/sizeof("hho"[0]))-1);
  2800  000DE2  0E03               	movlw	3
  2801  000DE4  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2802  000DE8  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2803  000DEC  26DE               	addwf	postinc2,f,c
  2804  000DEE  0E00               	movlw	0
  2805  000DF0  22DD               	addwfc	postdec2,f,c
  2806                           
  2807                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 972:       
      +                                llu = (unsigned long long)(unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
  2808  000DF2  C049  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2809  000DF6  C04A  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2810  000DFA  CFDF F04B          	movff	indf2,??_vfpfcnvrt
  2811  000DFE  0E02               	movlw	2
  2812  000E00  26DE               	addwf	postinc2,f,c
  2813  000E02  CFDF F04C          	movff	indf2,??_vfpfcnvrt+1
  2814  000E06  0E00               	movlw	0
  2815  000E08  22DD               	addwfc	postdec2,f,c
  2816  000E0A  C04B  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2817  000E0E  C04C  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2818  000E12  50DF               	movf	indf2,w,c
  2819  000E14  6E4D               	movwf	(??_vfpfcnvrt+2)& (0+255),c
  2820  000E16  504D               	movf	??_vfpfcnvrt+2,w,c
  2821  000E18  0100               	movlb	0	; () banked
  2822  000E1A  6F73               	movwf	vfpfcnvrt@llu& (0+255),b
  2823  000E1C  6B74               	clrf	(vfpfcnvrt@llu+1)& (0+255),b
  2824  000E1E                     L4:
  2825  000E1E  6B75               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
  2826  000E20  6B76               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
  2827  000E22  6B77               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
  2828  000E24  6B78               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
  2829  000E26  6B79               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
  2830  000E28  6B7A               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
  2831                           
  2832                           ; BSR set to: 0
  2833                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 974:       
      +                                return otoa(fp, llu);
  2834  000E2A  C045  F01E         	movff	vfpfcnvrt@fp,otoa@fp
  2835  000E2E  C046  F01F         	movff	vfpfcnvrt@fp+1,otoa@fp+1
  2836  000E32  C073  F020         	movff	vfpfcnvrt@llu,otoa@d
  2837  000E36  C074  F021         	movff	vfpfcnvrt@llu+1,otoa@d+1
  2838  000E3A  C075  F022         	movff	vfpfcnvrt@llu+2,otoa@d+2
  2839  000E3E  C076  F023         	movff	vfpfcnvrt@llu+3,otoa@d+3
  2840  000E42  C077  F024         	movff	vfpfcnvrt@llu+4,otoa@d+4
  2841  000E46  C078  F025         	movff	vfpfcnvrt@llu+5,otoa@d+5
  2842  000E4A  C079  F026         	movff	vfpfcnvrt@llu+6,otoa@d+6
  2843  000E4E  C07A  F027         	movff	vfpfcnvrt@llu+7,otoa@d+7
  2844  000E52  ECCD  F016         	call	_otoa	;wreg free
  2845  000E56  C01E  F045         	movff	?_otoa,?_vfpfcnvrt
  2846  000E5A  C01F  F046         	movff	?_otoa+1,?_vfpfcnvrt+1
  2847  000E5E  0012               	return	
  2848  000E60                     l3915:
  2849                           
  2850                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 980:       
      +                            if (!strncmp(*fmt, "ho", ((sizeof("ho")/sizeof("ho"[0]))-1))) {
  2851  000E60  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2852  000E64  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2853  000E68  CFDE F003          	movff	postinc2,strncmp@_l
  2854  000E6C  CFDD F004          	movff	postdec2,strncmp@_l+1
  2855  000E70  0E45               	movlw	low (STR_28+1)
  2856  000E72  6E05               	movwf	strncmp@_r,c
  2857  000E74  0E08               	movlw	high (STR_28+1)
  2858  000E76  6E06               	movwf	strncmp@_r+1,c
  2859  000E78  0E00               	movlw	0
  2860  000E7A  6E08               	movwf	strncmp@n+1,c
  2861  000E7C  0E02               	movlw	2
  2862  000E7E  6E07               	movwf	strncmp@n,c
  2863  000E80  EC75  F01D         	call	_strncmp	;wreg free
  2864  000E84  5003               	movf	?_strncmp,w,c
  2865  000E86  1004               	iorwf	?_strncmp+1,w,c
  2866  000E88  B4D8               	btfsc	status,2,c
  2867  000E8A  D029               	goto	u4260
  2868                           
  2869                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 990:       
      +                            if (*fmt[0] == 'o') {
  2870                           
  2871                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 983:       
      +                                llu = (unsigned long long)(unsigned short)(*(int *)__va_arg(*(int **)ap, (int)0));
  2872                           
  2873                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 982:       
      +                                *fmt += ((sizeof("ho")/sizeof("ho"[0]))-1);
  2874  000E8C  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2875  000E90  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2876  000E94  CFDE FFF6          	movff	postinc2,tblptrl
  2877  000E98  CFDD FFF7          	movff	postdec2,tblptrh
  2878  000E9C                     	if	0	;tblptru may be non-zero
  2879  000E9C                     	endif
  2880  000E9C                     	if	0	;tblptru may be non-zero
  2881  000E9C                     	endif
  2882  000E9C  0008               	tblrd		*
  2883  000E9E  50F5               	movf	tablat,w,c
  2884  000EA0  0A6F               	xorlw	111
  2885  000EA2  A4D8               	btfss	status,2,c
  2886  000EA4  D006               	goto	l3931
  2887                           
  2888                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 992:       
      +                                ++*fmt;
  2889  000EA6  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2890  000EAA  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2891  000EAE  2ADE               	incf	postinc2,f,c
  2892  000EB0  D01C               	goto	L10
  2893  000EB2                     l3931:
  2894                           
  2895                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1044:      
      +                             if (!strncmp(*fmt, "zo", ((sizeof("zo")/sizeof("zo"[0]))-1))) {
  2896  000EB2  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2897  000EB6  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2898  000EBA  CFDE F003          	movff	postinc2,strncmp@_l
  2899  000EBE  CFDD F004          	movff	postdec2,strncmp@_l+1
  2900  000EC2  0E5F               	movlw	low STR_38
  2901  000EC4  6E05               	movwf	strncmp@_r,c
  2902  000EC6  0E08               	movlw	high STR_38
  2903  000EC8  6E06               	movwf	strncmp@_r+1,c
  2904  000ECA  0E00               	movlw	0
  2905  000ECC  6E08               	movwf	strncmp@n+1,c
  2906  000ECE  0E02               	movlw	2
  2907  000ED0  6E07               	movwf	strncmp@n,c
  2908  000ED2  EC75  F01D         	call	_strncmp	;wreg free
  2909  000ED6  5003               	movf	?_strncmp,w,c
  2910  000ED8  1004               	iorwf	?_strncmp+1,w,c
  2911  000EDA  A4D8               	btfss	status,2,c
  2912  000EDC  D022               	goto	l3939
  2913  000EDE                     u4260:
  2914                           
  2915                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1046:      
      +                                 *fmt += ((sizeof("zo")/sizeof("zo"[0]))-1);
  2916  000EDE  0E02               	movlw	2
  2917  000EE0  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2918  000EE4  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2919  000EE8  26DE               	addwf	postinc2,f,c
  2920  000EEA                     L10:
  2921  000EEA  0E00               	movlw	0
  2922  000EEC  22DD               	addwfc	postdec2,f,c
  2923                           
  2924                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1047:      
      +                                 llu = (unsigned long long)(*(size_t *)__va_arg(*(size_t **)ap, (size_t)0));
  2925  000EEE  C049  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2926  000EF2  C04A  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2927  000EF6  CFDF F04B          	movff	indf2,??_vfpfcnvrt
  2928  000EFA  0E02               	movlw	2
  2929  000EFC  26DE               	addwf	postinc2,f,c
  2930  000EFE  CFDF F04C          	movff	indf2,??_vfpfcnvrt+1
  2931  000F02  0E00               	movlw	0
  2932  000F04  22DD               	addwfc	postdec2,f,c
  2933  000F06  C04B  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2934  000F0A  C04C  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2935  000F0E  CFDE F04D          	movff	postinc2,??_vfpfcnvrt+2
  2936  000F12  CFDD F04E          	movff	postdec2,??_vfpfcnvrt+3
  2937  000F16  C04D  F073         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  2938  000F1A  C04E  F074         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  2939  000F1E  0100               	movlb	0	; () banked
  2940  000F20  D77E               	goto	L4
  2941  000F22                     l3939:
  2942                           
  2943                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1058:      
      +                             if (!strncmp(*fmt, "hhn", ((sizeof("hhn")/sizeof("hhn"[0]))-1))) {
  2944  000F22  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2945  000F26  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2946  000F2A  CFDE F003          	movff	postinc2,strncmp@_l
  2947  000F2E  CFDD F004          	movff	postdec2,strncmp@_l+1
  2948  000F32  0E40               	movlw	low STR_43
  2949  000F34  6E05               	movwf	strncmp@_r,c
  2950  000F36  0E08               	movlw	high STR_43
  2951  000F38  6E06               	movwf	strncmp@_r+1,c
  2952  000F3A  0E00               	movlw	0
  2953  000F3C  6E08               	movwf	strncmp@n+1,c
  2954  000F3E  0E03               	movlw	3
  2955  000F40  6E07               	movwf	strncmp@n,c
  2956  000F42  EC75  F01D         	call	_strncmp	;wreg free
  2957  000F46  5003               	movf	?_strncmp,w,c
  2958  000F48  1004               	iorwf	?_strncmp+1,w,c
  2959  000F4A  A4D8               	btfss	status,2,c
  2960  000F4C  D027               	goto	l3949
  2961                           
  2962                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1060:      
      +                                 *fmt += ((sizeof("hhn")/sizeof("hhn"[0]))-1);
  2963  000F4E  0E03               	movlw	3
  2964  000F50  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2965  000F54  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2966  000F58  26DE               	addwf	postinc2,f,c
  2967  000F5A  0E00               	movlw	0
  2968  000F5C  22DD               	addwfc	postdec2,f,c
  2969                           
  2970                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1061:      
      +                                 vp = (void *)(*(char * *)__va_arg(*(char * **)ap, (char *)0));
  2971  000F5E  C049  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2972  000F62  C04A  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2973  000F66  CFDF F04B          	movff	indf2,??_vfpfcnvrt
  2974  000F6A  0E02               	movlw	2
  2975  000F6C  26DE               	addwf	postinc2,f,c
  2976  000F6E  CFDF F04C          	movff	indf2,??_vfpfcnvrt+1
  2977  000F72  0E00               	movlw	0
  2978  000F74  22DD               	addwfc	postdec2,f,c
  2979  000F76  C04B  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2980  000F7A  C04C  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2981  000F7E  CFDE F070          	movff	postinc2,vfpfcnvrt@vp
  2982  000F82  CFDD F071          	movff	postdec2,vfpfcnvrt@vp+1
  2983                           
  2984                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1062:      
      +                                 *(char *)vp = (char)nout;
  2985  000F86  C070  FFD9         	movff	vfpfcnvrt@vp,fsr2l
  2986  000F8A  C071  FFDA         	movff	vfpfcnvrt@vp+1,fsr2h
  2987  000F8E  C0F2  FFDF         	movff	_nout,indf2
  2988  000F92                     l3945:
  2989                           
  2990                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1063:      
      +                                 return 0;
  2991  000F92  0E00               	movlw	0
  2992  000F94  6E46               	movwf	?_vfpfcnvrt+1,c
  2993  000F96  0E00               	movlw	0
  2994  000F98  6E45               	movwf	?_vfpfcnvrt,c
  2995  000F9A  0012               	return	
  2996  000F9C                     l3949:
  2997                           
  2998                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1068:      
      +                             if (!strncmp(*fmt, "hn", ((sizeof("hn")/sizeof("hn"[0]))-1))) {
  2999  000F9C  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3000  000FA0  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3001  000FA4  CFDE F003          	movff	postinc2,strncmp@_l
  3002  000FA8  CFDD F004          	movff	postdec2,strncmp@_l+1
  3003  000FAC  0E41               	movlw	low (STR_43+1)
  3004  000FAE  6E05               	movwf	strncmp@_r,c
  3005  000FB0  0E08               	movlw	high (STR_43+1)
  3006  000FB2  6E06               	movwf	strncmp@_r+1,c
  3007  000FB4  0E00               	movlw	0
  3008  000FB6  6E08               	movwf	strncmp@n+1,c
  3009  000FB8  0E02               	movlw	2
  3010  000FBA  6E07               	movwf	strncmp@n,c
  3011  000FBC  EC75  F01D         	call	_strncmp	;wreg free
  3012  000FC0  5003               	movf	?_strncmp,w,c
  3013  000FC2  1004               	iorwf	?_strncmp+1,w,c
  3014  000FC4  A4D8               	btfss	status,2,c
  3015  000FC6  D00A               	goto	l3959
  3016  000FC8  D032               	goto	u4300
  3017  000FCA                     l3953:
  3018                           
  3019                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1072:      
      +                                 *(short *)vp = (short)nout;
  3020  000FCA  C070  FFD9         	movff	vfpfcnvrt@vp,fsr2l
  3021  000FCE  C071  FFDA         	movff	vfpfcnvrt@vp+1,fsr2h
  3022  000FD2  C0F2  FFDE         	movff	_nout,postinc2
  3023  000FD6  C0F3  FFDD         	movff	_nout+1,postdec2
  3024  000FDA  D7DB               	goto	l3945
  3025  000FDC                     l3959:
  3026                           
  3027                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1077:      
      +                             if (*fmt[0] == 'n') {
  3028  000FDC  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3029  000FE0  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3030  000FE4  CFDE FFF6          	movff	postinc2,tblptrl
  3031  000FE8  CFDD FFF7          	movff	postdec2,tblptrh
  3032  000FEC                     	if	0	;tblptru may be non-zero
  3033  000FEC                     	endif
  3034  000FEC                     	if	0	;tblptru may be non-zero
  3035  000FEC                     	endif
  3036  000FEC  0008               	tblrd		*
  3037  000FEE  50F5               	movf	tablat,w,c
  3038  000FF0  0A6E               	xorlw	110
  3039  000FF2  A4D8               	btfss	status,2,c
  3040  000FF4  D006               	goto	l3969
  3041                           
  3042                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1078:      
      +                                 ++*fmt;
  3043  000FF6  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3044  000FFA  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3045  000FFE  2ADE               	incf	postinc2,f,c
  3046  001000  D01C               	goto	L11
  3047  001002                     l3969:
  3048                           
  3049                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1125:      
      +                             if (!strncmp(*fmt, "zn", ((sizeof("zn")/sizeof("zn"[0]))-1))) {
  3050  001002  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3051  001006  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3052  00100A  CFDE F003          	movff	postinc2,strncmp@_l
  3053  00100E  CFDD F004          	movff	postdec2,strncmp@_l+1
  3054  001012  0E5C               	movlw	low STR_53
  3055  001014  6E05               	movwf	strncmp@_r,c
  3056  001016  0E08               	movlw	high STR_53
  3057  001018  6E06               	movwf	strncmp@_r+1,c
  3058  00101A  0E00               	movlw	0
  3059  00101C  6E08               	movwf	strncmp@n+1,c
  3060  00101E  0E02               	movlw	2
  3061  001020  6E07               	movwf	strncmp@n,c
  3062  001022  EC75  F01D         	call	_strncmp	;wreg free
  3063  001026  5003               	movf	?_strncmp,w,c
  3064  001028  1004               	iorwf	?_strncmp+1,w,c
  3065  00102A  A4D8               	btfss	status,2,c
  3066  00102C  D01D               	goto	l3979
  3067  00102E                     u4300:
  3068                           
  3069                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1127:      
      +                                 *fmt += ((sizeof("zn")/sizeof("zn"[0]))-1);
  3070  00102E  0E02               	movlw	2
  3071  001030  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3072  001034  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3073  001038  26DE               	addwf	postinc2,f,c
  3074  00103A                     L11:
  3075  00103A  0E00               	movlw	0
  3076  00103C  22DD               	addwfc	postdec2,f,c
  3077                           
  3078                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1128:      
      +                                 vp = (void *)(*(size_t * *)__va_arg(*(size_t * **)ap, (size_t *)0));
  3079  00103E  C049  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3080  001042  C04A  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3081  001046  CFDF F04B          	movff	indf2,??_vfpfcnvrt
  3082  00104A  0E02               	movlw	2
  3083  00104C  26DE               	addwf	postinc2,f,c
  3084  00104E  CFDF F04C          	movff	indf2,??_vfpfcnvrt+1
  3085  001052  0E00               	movlw	0
  3086  001054  22DD               	addwfc	postdec2,f,c
  3087  001056  C04B  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3088  00105A  C04C  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3089  00105E  CFDE F070          	movff	postinc2,vfpfcnvrt@vp
  3090  001062  CFDD F071          	movff	postdec2,vfpfcnvrt@vp+1
  3091  001066  D7B1               	goto	l3953
  3092  001068                     l3979:
  3093                           
  3094                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1138:      
      +                             if (*fmt[0] == 'p') {
  3095  001068  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3096  00106C  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3097  001070  CFDE FFF6          	movff	postinc2,tblptrl
  3098  001074  CFDD FFF7          	movff	postdec2,tblptrh
  3099  001078                     	if	0	;tblptru may be non-zero
  3100  001078                     	endif
  3101  001078                     	if	0	;tblptru may be non-zero
  3102  001078                     	endif
  3103  001078  0008               	tblrd		*
  3104  00107A  50F5               	movf	tablat,w,c
  3105  00107C  0A70               	xorlw	112
  3106  00107E  A4D8               	btfss	status,2,c
  3107  001080  D043               	goto	l3987
  3108                           
  3109                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1140:      
      +                                 ++*fmt;
  3110  001082  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3111  001086  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3112  00108A  2ADE               	incf	postinc2,f,c
  3113  00108C  0E00               	movlw	0
  3114  00108E  22DD               	addwfc	postdec2,f,c
  3115                           
  3116                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1141:      
      +                                 llu = (unsigned long long)(size_t)(*(void * *)__va_arg(*(void * **)ap, (void *)0)
      +                          );
  3117  001090  C049  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3118  001094  C04A  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3119  001098  CFDF F04B          	movff	indf2,??_vfpfcnvrt
  3120  00109C  0E02               	movlw	2
  3121  00109E  26DE               	addwf	postinc2,f,c
  3122  0010A0  CFDF F04C          	movff	indf2,??_vfpfcnvrt+1
  3123  0010A4  0E00               	movlw	0
  3124  0010A6  22DD               	addwfc	postdec2,f,c
  3125  0010A8  C04B  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3126  0010AC  C04C  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3127  0010B0  CFDE F04D          	movff	postinc2,??_vfpfcnvrt+2
  3128  0010B4  CFDD F04E          	movff	postdec2,??_vfpfcnvrt+3
  3129  0010B8  C04D  F073         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  3130  0010BC  C04E  F074         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  3131  0010C0  0100               	movlb	0	; () banked
  3132  0010C2  6B75               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
  3133  0010C4  6B76               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
  3134  0010C6  6B77               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
  3135  0010C8  6B78               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
  3136  0010CA  6B79               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
  3137  0010CC  6B7A               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
  3138                           
  3139                           ; BSR set to: 0
  3140                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1143:      
      +                                 return xtoa(fp, llu, 'x');
  3141  0010CE  C045  F01E         	movff	vfpfcnvrt@fp,xtoa@fp
  3142  0010D2  C046  F01F         	movff	vfpfcnvrt@fp+1,xtoa@fp+1
  3143  0010D6  C073  F020         	movff	vfpfcnvrt@llu,xtoa@d
  3144  0010DA  C074  F021         	movff	vfpfcnvrt@llu+1,xtoa@d+1
  3145  0010DE  C075  F022         	movff	vfpfcnvrt@llu+2,xtoa@d+2
  3146  0010E2  C076  F023         	movff	vfpfcnvrt@llu+3,xtoa@d+3
  3147  0010E6  C077  F024         	movff	vfpfcnvrt@llu+4,xtoa@d+4
  3148  0010EA  C078  F025         	movff	vfpfcnvrt@llu+5,xtoa@d+5
  3149  0010EE  C079  F026         	movff	vfpfcnvrt@llu+6,xtoa@d+6
  3150  0010F2  C07A  F027         	movff	vfpfcnvrt@llu+7,xtoa@d+7
  3151  0010F6  0E78               	movlw	120
  3152  0010F8  6E28               	movwf	xtoa@x,c
  3153  0010FA  ECFE  F013         	call	_xtoa	;wreg free
  3154  0010FE  C01E  F045         	movff	?_xtoa,?_vfpfcnvrt
  3155  001102  C01F  F046         	movff	?_xtoa+1,?_vfpfcnvrt+1
  3156  001106  0012               	return	
  3157  001108                     l3987:
  3158                           
  3159                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1149:      
      +                             if (*fmt[0] == 's') {
  3160  001108  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3161  00110C  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3162  001110  CFDE FFF6          	movff	postinc2,tblptrl
  3163  001114  CFDD FFF7          	movff	postdec2,tblptrh
  3164  001118                     	if	0	;tblptru may be non-zero
  3165  001118                     	endif
  3166  001118                     	if	0	;tblptru may be non-zero
  3167  001118                     	endif
  3168  001118  0008               	tblrd		*
  3169  00111A  50F5               	movf	tablat,w,c
  3170  00111C  0A73               	xorlw	115
  3171  00111E  A4D8               	btfss	status,2,c
  3172  001120  D02A               	goto	l3995
  3173                           
  3174                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1151:      
      +                                 ++*fmt;
  3175  001122  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3176  001126  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3177  00112A  2ADE               	incf	postinc2,f,c
  3178  00112C  0E00               	movlw	0
  3179  00112E  22DD               	addwfc	postdec2,f,c
  3180                           
  3181                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1152:      
      +                                 cp = (*(char * *)__va_arg(*(char * **)ap, (char *)0));
  3182  001130  C049  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3183  001134  C04A  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3184  001138  CFDF F04B          	movff	indf2,??_vfpfcnvrt
  3185  00113C  0E02               	movlw	2
  3186  00113E  26DE               	addwf	postinc2,f,c
  3187  001140  CFDF F04C          	movff	indf2,??_vfpfcnvrt+1
  3188  001144  0E00               	movlw	0
  3189  001146  22DD               	addwfc	postdec2,f,c
  3190  001148  C04B  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3191  00114C  C04C  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3192  001150  CFDE F060          	movff	postinc2,vfpfcnvrt@cp
  3193  001154  CFDD F061          	movff	postdec2,vfpfcnvrt@cp+1
  3194                           
  3195                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1154:      
      +                                 return stoa(fp, cp);
  3196  001158  C045  F00C         	movff	vfpfcnvrt@fp,stoa@fp
  3197  00115C  C046  F00D         	movff	vfpfcnvrt@fp+1,stoa@fp+1
  3198  001160  C060  F00E         	movff	vfpfcnvrt@cp,stoa@s
  3199  001164  C061  F00F         	movff	vfpfcnvrt@cp+1,stoa@s+1
  3200  001168  EC71  F019         	call	_stoa	;wreg free
  3201  00116C  C00C  F045         	movff	?_stoa,?_vfpfcnvrt
  3202  001170  C00D  F046         	movff	?_stoa+1,?_vfpfcnvrt+1
  3203  001174  0012               	return	
  3204  001176                     l3995:
  3205                           
  3206                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1161:      
      +                             if (!strncmp(*fmt, "hhu", ((sizeof("hhu")/sizeof("hhu"[0]))-1))) {
  3207  001176  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3208  00117A  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3209  00117E  CFDE F003          	movff	postinc2,strncmp@_l
  3210  001182  CFDD F004          	movff	postdec2,strncmp@_l+1
  3211  001186  0E48               	movlw	low STR_58
  3212  001188  6E05               	movwf	strncmp@_r,c
  3213  00118A  0E08               	movlw	high STR_58
  3214  00118C  6E06               	movwf	strncmp@_r+1,c
  3215  00118E  0E00               	movlw	0
  3216  001190  6E08               	movwf	strncmp@n+1,c
  3217  001192  0E03               	movlw	3
  3218  001194  6E07               	movwf	strncmp@n,c
  3219  001196  EC75  F01D         	call	_strncmp	;wreg free
  3220  00119A  5003               	movf	?_strncmp,w,c
  3221  00119C  1004               	iorwf	?_strncmp+1,w,c
  3222  00119E  A4D8               	btfss	status,2,c
  3223  0011A0  D03F               	goto	l4003
  3224                           
  3225                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1163:      
      +                                 *fmt += ((sizeof("hhu")/sizeof("hhu"[0]))-1);
  3226  0011A2  0E03               	movlw	3
  3227  0011A4  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3228  0011A8  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3229  0011AC  26DE               	addwf	postinc2,f,c
  3230  0011AE  0E00               	movlw	0
  3231  0011B0  22DD               	addwfc	postdec2,f,c
  3232                           
  3233                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1164:      
      +                                 llu = (unsigned long long)(unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
  3234  0011B2  C049  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3235  0011B6  C04A  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3236  0011BA  CFDF F04B          	movff	indf2,??_vfpfcnvrt
  3237  0011BE  0E02               	movlw	2
  3238  0011C0  26DE               	addwf	postinc2,f,c
  3239  0011C2  CFDF F04C          	movff	indf2,??_vfpfcnvrt+1
  3240  0011C6  0E00               	movlw	0
  3241  0011C8  22DD               	addwfc	postdec2,f,c
  3242  0011CA  C04B  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3243  0011CE  C04C  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3244  0011D2  50DF               	movf	indf2,w,c
  3245  0011D4  6E4D               	movwf	(??_vfpfcnvrt+2)& (0+255),c
  3246  0011D6  504D               	movf	??_vfpfcnvrt+2,w,c
  3247  0011D8  0100               	movlb	0	; () banked
  3248  0011DA  6F73               	movwf	vfpfcnvrt@llu& (0+255),b
  3249  0011DC  6B74               	clrf	(vfpfcnvrt@llu+1)& (0+255),b
  3250  0011DE                     L6:
  3251  0011DE  6B75               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
  3252  0011E0  6B76               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
  3253  0011E2  6B77               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
  3254  0011E4  6B78               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
  3255  0011E6  6B79               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
  3256  0011E8  6B7A               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
  3257                           
  3258                           ; BSR set to: 0
  3259                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1166:      
      +                                 return utoa(fp, llu);
  3260  0011EA  C045  F01E         	movff	vfpfcnvrt@fp,utoa@fp
  3261  0011EE  C046  F01F         	movff	vfpfcnvrt@fp+1,utoa@fp+1
  3262  0011F2  C073  F020         	movff	vfpfcnvrt@llu,utoa@d
  3263  0011F6  C074  F021         	movff	vfpfcnvrt@llu+1,utoa@d+1
  3264  0011FA  C075  F022         	movff	vfpfcnvrt@llu+2,utoa@d+2
  3265  0011FE  C076  F023         	movff	vfpfcnvrt@llu+3,utoa@d+3
  3266  001202  C077  F024         	movff	vfpfcnvrt@llu+4,utoa@d+4
  3267  001206  C078  F025         	movff	vfpfcnvrt@llu+5,utoa@d+5
  3268  00120A  C079  F026         	movff	vfpfcnvrt@llu+6,utoa@d+6
  3269  00120E  C07A  F027         	movff	vfpfcnvrt@llu+7,utoa@d+7
  3270  001212  ECF5  F015         	call	_utoa	;wreg free
  3271  001216  C01E  F045         	movff	?_utoa,?_vfpfcnvrt
  3272  00121A  C01F  F046         	movff	?_utoa+1,?_vfpfcnvrt+1
  3273  00121E  0012               	return	
  3274  001220                     l4003:
  3275                           
  3276                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1172:      
      +                             if (!strncmp(*fmt, "hu", ((sizeof("hu")/sizeof("hu"[0]))-1))) {
  3277  001220  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3278  001224  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3279  001228  CFDE F003          	movff	postinc2,strncmp@_l
  3280  00122C  CFDD F004          	movff	postdec2,strncmp@_l+1
  3281  001230  0E49               	movlw	low (STR_58+1)
  3282  001232  6E05               	movwf	strncmp@_r,c
  3283  001234  0E08               	movlw	high (STR_58+1)
  3284  001236  6E06               	movwf	strncmp@_r+1,c
  3285  001238  0E00               	movlw	0
  3286  00123A  6E08               	movwf	strncmp@n+1,c
  3287  00123C  0E02               	movlw	2
  3288  00123E  6E07               	movwf	strncmp@n,c
  3289  001240  EC75  F01D         	call	_strncmp	;wreg free
  3290  001244  5003               	movf	?_strncmp,w,c
  3291  001246  1004               	iorwf	?_strncmp+1,w,c
  3292  001248  B4D8               	btfsc	status,2,c
  3293  00124A  D029               	goto	u4360
  3294                           
  3295                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1182:      
      +                             if (*fmt[0] == 'u') {
  3296                           
  3297                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1175:      
      +                                 llu = (unsigned long long)(unsigned short)(*(int *)__va_arg(*(int **)ap, (int)0))
      +                          ;
  3298                           
  3299                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1174:      
      +                                 *fmt += ((sizeof("hu")/sizeof("hu"[0]))-1);
  3300  00124C  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3301  001250  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3302  001254  CFDE FFF6          	movff	postinc2,tblptrl
  3303  001258  CFDD FFF7          	movff	postdec2,tblptrh
  3304  00125C                     	if	0	;tblptru may be non-zero
  3305  00125C                     	endif
  3306  00125C                     	if	0	;tblptru may be non-zero
  3307  00125C                     	endif
  3308  00125C  0008               	tblrd		*
  3309  00125E  50F5               	movf	tablat,w,c
  3310  001260  0A75               	xorlw	117
  3311  001262  A4D8               	btfss	status,2,c
  3312  001264  D006               	goto	l4019
  3313                           
  3314                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1184:      
      +                                 ++*fmt;
  3315  001266  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3316  00126A  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3317  00126E  2ADE               	incf	postinc2,f,c
  3318  001270  D01C               	goto	L13
  3319  001272                     l4019:
  3320                           
  3321                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1236:      
      +                             if (!strncmp(*fmt, "zu", ((sizeof("zu")/sizeof("zu"[0]))-1))) {
  3322  001272  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3323  001276  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3324  00127A  CFDE F003          	movff	postinc2,strncmp@_l
  3325  00127E  CFDD F004          	movff	postdec2,strncmp@_l+1
  3326  001282  0E62               	movlw	low STR_68
  3327  001284  6E05               	movwf	strncmp@_r,c
  3328  001286  0E08               	movlw	high STR_68
  3329  001288  6E06               	movwf	strncmp@_r+1,c
  3330  00128A  0E00               	movlw	0
  3331  00128C  6E08               	movwf	strncmp@n+1,c
  3332  00128E  0E02               	movlw	2
  3333  001290  6E07               	movwf	strncmp@n,c
  3334  001292  EC75  F01D         	call	_strncmp	;wreg free
  3335  001296  5003               	movf	?_strncmp,w,c
  3336  001298  1004               	iorwf	?_strncmp+1,w,c
  3337  00129A  A4D8               	btfss	status,2,c
  3338  00129C  D022               	goto	l4027
  3339  00129E                     u4360:
  3340                           
  3341                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1238:      
      +                                 *fmt += ((sizeof("zu")/sizeof("zu"[0]))-1);
  3342  00129E  0E02               	movlw	2
  3343  0012A0  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3344  0012A4  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3345  0012A8  26DE               	addwf	postinc2,f,c
  3346  0012AA                     L13:
  3347  0012AA  0E00               	movlw	0
  3348  0012AC  22DD               	addwfc	postdec2,f,c
  3349                           
  3350                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1239:      
      +                                 llu = (unsigned long long)(*(size_t *)__va_arg(*(size_t **)ap, (size_t)0));
  3351  0012AE  C049  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3352  0012B2  C04A  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3353  0012B6  CFDF F04B          	movff	indf2,??_vfpfcnvrt
  3354  0012BA  0E02               	movlw	2
  3355  0012BC  26DE               	addwf	postinc2,f,c
  3356  0012BE  CFDF F04C          	movff	indf2,??_vfpfcnvrt+1
  3357  0012C2  0E00               	movlw	0
  3358  0012C4  22DD               	addwfc	postdec2,f,c
  3359  0012C6  C04B  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3360  0012CA  C04C  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3361  0012CE  CFDE F04D          	movff	postinc2,??_vfpfcnvrt+2
  3362  0012D2  CFDD F04E          	movff	postdec2,??_vfpfcnvrt+3
  3363  0012D6  C04D  F073         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  3364  0012DA  C04E  F074         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  3365  0012DE  0100               	movlb	0	; () banked
  3366  0012E0  D77E               	goto	L6
  3367  0012E2                     l4027:
  3368                           
  3369                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1249:      
      +                             if (!strncmp(*fmt, "hhx", ((sizeof("hhx")/sizeof("hhx"[0]))-1)) || !strncmp(*fmt, "hh
      +                          X", ((sizeof("hhX")/sizeof("hhX"[0]))-1))) {
  3370  0012E2  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3371  0012E6  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3372  0012EA  CFDE F003          	movff	postinc2,strncmp@_l
  3373  0012EE  CFDD F004          	movff	postdec2,strncmp@_l+1
  3374  0012F2  0E4C               	movlw	low STR_73
  3375  0012F4  6E05               	movwf	strncmp@_r,c
  3376  0012F6  0E08               	movlw	high STR_73
  3377  0012F8  6E06               	movwf	strncmp@_r+1,c
  3378  0012FA  0E00               	movlw	0
  3379  0012FC  6E08               	movwf	strncmp@n+1,c
  3380  0012FE  0E03               	movlw	3
  3381  001300  6E07               	movwf	strncmp@n,c
  3382  001302  EC75  F01D         	call	_strncmp	;wreg free
  3383  001306  5003               	movf	?_strncmp,w,c
  3384  001308  1004               	iorwf	?_strncmp+1,w,c
  3385  00130A  B4D8               	btfsc	status,2,c
  3386  00130C  D016               	goto	u4380
  3387  00130E  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3388  001312  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3389  001316  CFDE F003          	movff	postinc2,strncmp@_l
  3390  00131A  CFDD F004          	movff	postdec2,strncmp@_l+1
  3391  00131E  0E34               	movlw	low STR_77
  3392  001320  6E05               	movwf	strncmp@_r,c
  3393  001322  0E08               	movlw	high STR_77
  3394  001324  6E06               	movwf	strncmp@_r+1,c
  3395  001326  0E00               	movlw	0
  3396  001328  6E08               	movwf	strncmp@n+1,c
  3397  00132A  0E03               	movlw	3
  3398  00132C  6E07               	movwf	strncmp@n,c
  3399  00132E  EC75  F01D         	call	_strncmp	;wreg free
  3400  001332  5003               	movf	?_strncmp,w,c
  3401  001334  1004               	iorwf	?_strncmp+1,w,c
  3402  001336  A4D8               	btfss	status,2,c
  3403  001338  D054               	goto	l4041
  3404  00133A                     u4380:
  3405                           
  3406                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1250: ;C:\P
      +                          rogram Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1252:           
      +                            c = (*fmt)[2];
  3407  00133A  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3408  00133E  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3409  001342  CFDE F04B          	movff	postinc2,??_vfpfcnvrt
  3410  001346  CFDD F04C          	movff	postdec2,??_vfpfcnvrt+1
  3411  00134A  0E02               	movlw	2
  3412  00134C  264B               	addwf	??_vfpfcnvrt,f,c
  3413  00134E  0E00               	movlw	0
  3414  001350  224C               	addwfc	??_vfpfcnvrt+1,f,c
  3415  001352  C04B  FFF6         	movff	??_vfpfcnvrt,tblptrl
  3416  001356  C04C  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  3417  00135A                     	if	0	;tblptru may be non-zero
  3418  00135A                     	endif
  3419  00135A                     	if	0	;tblptru may be non-zero
  3420  00135A                     	endif
  3421  00135A  0008               	tblrd		*
  3422  00135C  CFF5 F072          	movff	tablat,vfpfcnvrt@c
  3423                           
  3424                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1253:      
      +                                 *fmt += ((sizeof("hhx")/sizeof("hhx"[0]))-1);
  3425  001360  0E03               	movlw	3
  3426  001362  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3427  001366  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3428  00136A  26DE               	addwf	postinc2,f,c
  3429  00136C  0E00               	movlw	0
  3430  00136E  22DD               	addwfc	postdec2,f,c
  3431                           
  3432                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1254:      
      +                                 llu = (unsigned long long)(unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
  3433  001370  C049  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3434  001374  C04A  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3435  001378  CFDF F04B          	movff	indf2,??_vfpfcnvrt
  3436  00137C  0E02               	movlw	2
  3437  00137E  26DE               	addwf	postinc2,f,c
  3438  001380  CFDF F04C          	movff	indf2,??_vfpfcnvrt+1
  3439  001384  0E00               	movlw	0
  3440  001386  22DD               	addwfc	postdec2,f,c
  3441  001388  C04B  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3442  00138C  C04C  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3443  001390  50DF               	movf	indf2,w,c
  3444  001392  6E4D               	movwf	(??_vfpfcnvrt+2)& (0+255),c
  3445  001394  504D               	movf	??_vfpfcnvrt+2,w,c
  3446  001396  0100               	movlb	0	; () banked
  3447  001398  6F73               	movwf	vfpfcnvrt@llu& (0+255),b
  3448  00139A  6B74               	clrf	(vfpfcnvrt@llu+1)& (0+255),b
  3449  00139C                     L7:
  3450  00139C  6B75               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
  3451  00139E  6B76               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
  3452  0013A0  6B77               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
  3453  0013A2  6B78               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
  3454  0013A4  6B79               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
  3455  0013A6  6B7A               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
  3456                           
  3457                           ; BSR set to: 0
  3458                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1256:      
      +                                 return xtoa(fp, llu, c);
  3459  0013A8  C045  F01E         	movff	vfpfcnvrt@fp,xtoa@fp
  3460  0013AC  C046  F01F         	movff	vfpfcnvrt@fp+1,xtoa@fp+1
  3461  0013B0  C073  F020         	movff	vfpfcnvrt@llu,xtoa@d
  3462  0013B4  C074  F021         	movff	vfpfcnvrt@llu+1,xtoa@d+1
  3463  0013B8  C075  F022         	movff	vfpfcnvrt@llu+2,xtoa@d+2
  3464  0013BC  C076  F023         	movff	vfpfcnvrt@llu+3,xtoa@d+3
  3465  0013C0  C077  F024         	movff	vfpfcnvrt@llu+4,xtoa@d+4
  3466  0013C4  C078  F025         	movff	vfpfcnvrt@llu+5,xtoa@d+5
  3467  0013C8  C079  F026         	movff	vfpfcnvrt@llu+6,xtoa@d+6
  3468  0013CC  C07A  F027         	movff	vfpfcnvrt@llu+7,xtoa@d+7
  3469  0013D0  C072  F028         	movff	vfpfcnvrt@c,xtoa@x
  3470  0013D4  ECFE  F013         	call	_xtoa	;wreg free
  3471  0013D8  C01E  F045         	movff	?_xtoa,?_vfpfcnvrt
  3472  0013DC  C01F  F046         	movff	?_xtoa+1,?_vfpfcnvrt+1
  3473  0013E0  0012               	return	
  3474  0013E2                     l4041:
  3475                           
  3476                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1262:      
      +                             if (!strncmp(*fmt, "hx", ((sizeof("hx")/sizeof("hx"[0]))-1)) || !strncmp(*fmt, "hX", 
      +                          ((sizeof("hX")/sizeof("hX"[0]))-1))) {
  3477  0013E2  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3478  0013E6  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3479  0013EA  CFDE F003          	movff	postinc2,strncmp@_l
  3480  0013EE  CFDD F004          	movff	postdec2,strncmp@_l+1
  3481  0013F2  0E4D               	movlw	low (STR_73+1)
  3482  0013F4  6E05               	movwf	strncmp@_r,c
  3483  0013F6  0E08               	movlw	high (STR_73+1)
  3484  0013F8  6E06               	movwf	strncmp@_r+1,c
  3485  0013FA  0E00               	movlw	0
  3486  0013FC  6E08               	movwf	strncmp@n+1,c
  3487  0013FE  0E02               	movlw	2
  3488  001400  6E07               	movwf	strncmp@n,c
  3489  001402  EC75  F01D         	call	_strncmp	;wreg free
  3490  001406  5003               	movf	?_strncmp,w,c
  3491  001408  1004               	iorwf	?_strncmp+1,w,c
  3492  00140A  B4D8               	btfsc	status,2,c
  3493  00140C  D088               	goto	u4440
  3494  00140E  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3495  001412  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3496  001416  CFDE F003          	movff	postinc2,strncmp@_l
  3497  00141A  CFDD F004          	movff	postdec2,strncmp@_l+1
  3498  00141E  0E35               	movlw	low (STR_77+1)
  3499  001420  6E05               	movwf	strncmp@_r,c
  3500  001422  0E08               	movlw	high (STR_77+1)
  3501  001424  6E06               	movwf	strncmp@_r+1,c
  3502  001426  0E00               	movlw	0
  3503  001428  6E08               	movwf	strncmp@n+1,c
  3504  00142A  0E02               	movlw	2
  3505  00142C  6E07               	movwf	strncmp@n,c
  3506  00142E  EC75  F01D         	call	_strncmp	;wreg free
  3507  001432  5003               	movf	?_strncmp,w,c
  3508  001434  1004               	iorwf	?_strncmp+1,w,c
  3509  001436  A4D8               	btfss	status,2,c
  3510  001438  D01B               	goto	l4055
  3511  00143A  D071               	goto	u4440
  3512  00143C                     l4049:
  3513                           
  3514                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1267:      
      +                                 llu = (unsigned long long)(unsigned short)(*(int *)__va_arg(*(int **)ap, (int)0))
      +                          ;
  3515  00143C  C049  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3516  001440  C04A  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3517  001444  CFDF F04B          	movff	indf2,??_vfpfcnvrt
  3518  001448  0E02               	movlw	2
  3519  00144A  26DE               	addwf	postinc2,f,c
  3520  00144C  CFDF F04C          	movff	indf2,??_vfpfcnvrt+1
  3521  001450  0E00               	movlw	0
  3522  001452  22DD               	addwfc	postdec2,f,c
  3523  001454  C04B  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3524  001458  C04C  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3525  00145C  CFDE F04D          	movff	postinc2,??_vfpfcnvrt+2
  3526  001460  CFDD F04E          	movff	postdec2,??_vfpfcnvrt+3
  3527  001464  C04D  F073         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  3528  001468  C04E  F074         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  3529  00146C  0100               	movlb	0	; () banked
  3530  00146E  D796               	goto	L7
  3531  001470                     l4055:
  3532                           
  3533                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1274:      
      +                             if ((*fmt[0] == 'x') || (*fmt[0] == 'X')) {
  3534  001470  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3535  001474  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3536  001478  CFDE FFF6          	movff	postinc2,tblptrl
  3537  00147C  CFDD FFF7          	movff	postdec2,tblptrh
  3538  001480                     	if	0	;tblptru may be non-zero
  3539  001480                     	endif
  3540  001480                     	if	0	;tblptru may be non-zero
  3541  001480                     	endif
  3542  001480  0008               	tblrd		*
  3543  001482  50F5               	movf	tablat,w,c
  3544  001484  0A78               	xorlw	120
  3545  001486  B4D8               	btfsc	status,2,c
  3546  001488  D00D               	goto	u4420
  3547  00148A  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3548  00148E  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3549  001492  CFDE FFF6          	movff	postinc2,tblptrl
  3550  001496  CFDD FFF7          	movff	postdec2,tblptrh
  3551  00149A                     	if	0	;tblptru may be non-zero
  3552  00149A                     	endif
  3553  00149A                     	if	0	;tblptru may be non-zero
  3554  00149A                     	endif
  3555  00149A  0008               	tblrd		*
  3556  00149C  50F5               	movf	tablat,w,c
  3557  00149E  0A58               	xorlw	88
  3558  0014A0  A4D8               	btfss	status,2,c
  3559  0014A2  D011               	goto	l4069
  3560  0014A4                     u4420:
  3561                           
  3562                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1276:      
      +                                 c = (*fmt)[0];
  3563  0014A4  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3564  0014A8  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3565  0014AC  CFDE FFF6          	movff	postinc2,tblptrl
  3566  0014B0  CFDD FFF7          	movff	postdec2,tblptrh
  3567  0014B4                     	if	0	;tblptru may be non-zero
  3568  0014B4                     	endif
  3569  0014B4                     	if	0	;tblptru may be non-zero
  3570  0014B4                     	endif
  3571  0014B4  0008               	tblrd		*
  3572  0014B6  CFF5 F072          	movff	tablat,vfpfcnvrt@c
  3573                           
  3574                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1277:      
      +                                 ++*fmt;
  3575  0014BA  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3576  0014BE  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3577  0014C2  2ADE               	incf	postinc2,f,c
  3578  0014C4  D045               	goto	L15
  3579  0014C6                     l4069:
  3580                           
  3581                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1337:      
      +                             if (!strncmp(*fmt, "zx", ((sizeof("zx")/sizeof("zx"[0]))-1)) || !strncmp(*fmt, "zX", 
      +                          ((sizeof("zX")/sizeof("zX"[0]))-1))) {
  3582  0014C6  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3583  0014CA  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3584  0014CE  CFDE F003          	movff	postinc2,strncmp@_l
  3585  0014D2  CFDD F004          	movff	postdec2,strncmp@_l+1
  3586  0014D6  0E65               	movlw	low STR_91
  3587  0014D8  6E05               	movwf	strncmp@_r,c
  3588  0014DA  0E08               	movlw	high STR_91
  3589  0014DC  6E06               	movwf	strncmp@_r+1,c
  3590  0014DE  0E00               	movlw	0
  3591  0014E0  6E08               	movwf	strncmp@n+1,c
  3592  0014E2  0E02               	movlw	2
  3593  0014E4  6E07               	movwf	strncmp@n,c
  3594  0014E6  EC75  F01D         	call	_strncmp	;wreg free
  3595  0014EA  5003               	movf	?_strncmp,w,c
  3596  0014EC  1004               	iorwf	?_strncmp+1,w,c
  3597  0014EE  B4D8               	btfsc	status,2,c
  3598  0014F0  D016               	goto	u4440
  3599  0014F2  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3600  0014F6  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3601  0014FA  CFDE F003          	movff	postinc2,strncmp@_l
  3602  0014FE  CFDD F004          	movff	postdec2,strncmp@_l+1
  3603  001502  0E53               	movlw	low STR_95
  3604  001504  6E05               	movwf	strncmp@_r,c
  3605  001506  0E08               	movlw	high STR_95
  3606  001508  6E06               	movwf	strncmp@_r+1,c
  3607  00150A  0E00               	movlw	0
  3608  00150C  6E08               	movwf	strncmp@n+1,c
  3609  00150E  0E02               	movlw	2
  3610  001510  6E07               	movwf	strncmp@n,c
  3611  001512  EC75  F01D         	call	_strncmp	;wreg free
  3612  001516  5003               	movf	?_strncmp,w,c
  3613  001518  1004               	iorwf	?_strncmp+1,w,c
  3614  00151A  A4D8               	btfss	status,2,c
  3615  00151C  D01C               	goto	l4083
  3616  00151E                     u4440:
  3617                           
  3618                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1338: ;C:\P
      +                          rogram Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1340:           
      +                            c = (*fmt)[1];
  3619  00151E  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3620  001522  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3621  001526  CFDE F04B          	movff	postinc2,??_vfpfcnvrt
  3622  00152A  CFDD F04C          	movff	postdec2,??_vfpfcnvrt+1
  3623  00152E  0E01               	movlw	1
  3624  001530  264B               	addwf	??_vfpfcnvrt,f,c
  3625  001532  0E00               	movlw	0
  3626  001534  224C               	addwfc	??_vfpfcnvrt+1,f,c
  3627  001536  C04B  FFF6         	movff	??_vfpfcnvrt,tblptrl
  3628  00153A  C04C  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  3629  00153E                     	if	0	;tblptru may be non-zero
  3630  00153E                     	endif
  3631  00153E                     	if	0	;tblptru may be non-zero
  3632  00153E                     	endif
  3633  00153E  0008               	tblrd		*
  3634  001540  CFF5 F072          	movff	tablat,vfpfcnvrt@c
  3635                           
  3636                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1341:      
      +                                 *fmt += ((sizeof("zx")/sizeof("zx"[0]))-1);
  3637  001544  0E02               	movlw	2
  3638  001546  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3639  00154A  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3640  00154E  26DE               	addwf	postinc2,f,c
  3641  001550                     L15:
  3642  001550  0E00               	movlw	0
  3643  001552  22DD               	addwfc	postdec2,f,c
  3644  001554  D773               	goto	l4049
  3645  001556                     l4083:
  3646                           
  3647                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1350:      
      +                             if ((*fmt)[0] == '%') {
  3648  001556  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3649  00155A  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3650  00155E  CFDE FFF6          	movff	postinc2,tblptrl
  3651  001562  CFDD FFF7          	movff	postdec2,tblptrh
  3652  001566                     	if	0	;tblptru may be non-zero
  3653  001566                     	endif
  3654  001566                     	if	0	;tblptru may be non-zero
  3655  001566                     	endif
  3656  001566  0008               	tblrd		*
  3657  001568  50F5               	movf	tablat,w,c
  3658  00156A  0A25               	xorlw	37
  3659  00156C  A4D8               	btfss	status,2,c
  3660  00156E  D016               	goto	l4093
  3661                           
  3662                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1351:      
      +                                 ++*fmt;
  3663  001570  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3664  001574  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3665  001578  2ADE               	incf	postinc2,f,c
  3666  00157A  0E00               	movlw	0
  3667  00157C  22DD               	addwfc	postdec2,f,c
  3668                           
  3669                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1352:      
      +                                 fputc((int)'%', fp);
  3670  00157E  0E00               	movlw	0
  3671  001580  6E04               	movwf	fputc@c+1,c
  3672  001582  0E25               	movlw	37
  3673  001584  6E03               	movwf	fputc@c,c
  3674  001586  C045  F005         	movff	vfpfcnvrt@fp,fputc@fp
  3675  00158A  C046  F006         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  3676  00158E  ECCA  F01D         	call	_fputc	;wreg free
  3677  001592                     l4089:
  3678                           
  3679                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1353:      
      +                                 return 1;
  3680  001592  0E00               	movlw	0
  3681  001594  6E46               	movwf	?_vfpfcnvrt+1,c
  3682  001596  0E01               	movlw	1
  3683  001598  6E45               	movwf	?_vfpfcnvrt,c
  3684  00159A  0012               	return	
  3685  00159C                     l4093:
  3686                           
  3687                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1357:      
      +                             ++*fmt;
  3688  00159C  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3689  0015A0  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3690  0015A4  2ADE               	incf	postinc2,f,c
  3691  0015A6  0E00               	movlw	0
  3692  0015A8  22DD               	addwfc	postdec2,f,c
  3693  0015AA  D4F3               	goto	l3945
  3694  0015AC                     l4099:
  3695                           
  3696                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1362:     f
      +                          putc((int)(*fmt)[0], fp);
  3697  0015AC  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3698  0015B0  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3699  0015B4  CFDE FFF6          	movff	postinc2,tblptrl
  3700  0015B8  CFDD FFF7          	movff	postdec2,tblptrh
  3701  0015BC                     	if	0	;tblptru may be non-zero
  3702  0015BC                     	endif
  3703  0015BC                     	if	0	;tblptru may be non-zero
  3704  0015BC                     	endif
  3705  0015BC  0008               	tblrd		*
  3706  0015BE  50F5               	movf	tablat,w,c
  3707  0015C0  6E03               	movwf	fputc@c,c
  3708  0015C2  6A04               	clrf	fputc@c+1,c
  3709  0015C4  C045  F005         	movff	vfpfcnvrt@fp,fputc@fp
  3710  0015C8  C046  F006         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  3711  0015CC  ECCA  F01D         	call	_fputc	;wreg free
  3712                           
  3713                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1363:     +
      +                          +*fmt;
  3714  0015D0  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3715  0015D4  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3716  0015D8  2ADE               	incf	postinc2,f,c
  3717  0015DA  0E00               	movlw	0
  3718  0015DC  22DD               	addwfc	postdec2,f,c
  3719  0015DE  D7D9               	goto	l4089
  3720  0015E0                     __end_of_vfpfcnvrt:
  3721                           	opt callstack 0
  3722                           
  3723 ;; *************** function _xtoa *****************
  3724 ;; Defined at:
  3725 ;;		line 623 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  3726 ;; Parameters:    Size  Location     Type
  3727 ;;  fp              2   29[COMRAM] PTR struct _IO_FILE
  3728 ;;		 -> vsnprintf@f(6), 
  3729 ;;  d               8   31[COMRAM] unsigned long long 
  3730 ;;  x               1   39[COMRAM] unsigned char 
  3731 ;; Auto vars:     Size  Location     Type
  3732 ;;  n               8   56[COMRAM] unsigned long long 
  3733 ;;  c               2   66[COMRAM] int 
  3734 ;;  i               2   64[COMRAM] int 
  3735 ;;  w               2   54[COMRAM] int 
  3736 ;;  p               2   52[COMRAM] int 
  3737 ;; Return value:  Size  Location     Type
  3738 ;;                  2   29[COMRAM] int 
  3739 ;; Registers used:
  3740 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3741 ;; Tracked objects:
  3742 ;;		On entry : 0/0
  3743 ;;		On exit  : 0/0
  3744 ;;		Unchanged: 0/0
  3745 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3746 ;;      Params:        11       0       0       0       0       0       0       0       0
  3747 ;;      Locals:        20       0       0       0       0       0       0       0       0
  3748 ;;      Temps:          8       0       0       0       0       0       0       0       0
  3749 ;;      Totals:        39       0       0       0       0       0       0       0       0
  3750 ;;Total ram usage:       39 bytes
  3751 ;; Hardware stack levels used:    1
  3752 ;; Hardware stack levels required when called:    7
  3753 ;; This function calls:
  3754 ;;		_isalpha
  3755 ;;		_isupper
  3756 ;;		_pad
  3757 ;;		_toupper
  3758 ;; This function is called by:
  3759 ;;		_vfpfcnvrt
  3760 ;; This function uses a non-reentrant model
  3761 ;;
  3762                           
  3763                           	psect	text7
  3764  0027FC                     __ptext7:
  3765                           	opt callstack 0
  3766  0027FC                     _xtoa:
  3767                           	opt callstack 17
  3768                           
  3769                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 623: static
      +                           int xtoa(FILE *fp, unsigned long long d, char x);C:\Program Files (x86)\Microchip\xc8\v
      +                          2.05\pic\sources\c99\common\doprnt.c: 624: {;C:\Program Files (x86)\Microchip\xc8\v2.05\
      +                          pic\sources\c99\common\doprnt.c: 625:     int c, i, p, w;;C:\Program Files (x86)\Microch
      +                          ip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 626:     unsigned long long n;;C:\Program 
      +                          Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 629:     if (!(prec < 0
      +                          )) {
  3770                           
  3771                           ;incstack = 0
  3772  0027FC  0100               	movlb	0	; () banked
  3773  0027FE  AFF7               	btfss	(_prec+1)& (0+255),7,b
  3774                           
  3775                           ; BSR set to: 0
  3776                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 630:       
      +                            flags &= ~(1 << 1);
  3777  002800  925B               	bcf	_flags,1,c
  3778                           
  3779                           ; BSR set to: 0
  3780                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 632:     p 
      +                          = (0 < prec) ? prec : 1;
  3781  002802  BFF7               	btfsc	(_prec+1)& (0+255),7,b
  3782  002804  D005               	goto	u3730
  3783  002806  51F7               	movf	(_prec+1)& (0+255),w,b
  3784  002808  E108               	bnz	l157
  3785  00280A  05F6               	decf	_prec& (0+255),w,b
  3786  00280C  B0D8               	btfsc	status,0,c
  3787  00280E  D005               	goto	l157
  3788  002810                     u3730:
  3789                           
  3790                           ; BSR set to: 0
  3791  002810  0E00               	movlw	0
  3792  002812  6E36               	movwf	xtoa@p+1,c
  3793  002814  0E01               	movlw	1
  3794  002816  6E35               	movwf	xtoa@p,c
  3795  002818  D004               	goto	l159
  3796  00281A                     l157:
  3797                           
  3798                           ; BSR set to: 0
  3799  00281A  C0F6  F035         	movff	_prec,xtoa@p
  3800  00281E  C0F7  F036         	movff	_prec+1,xtoa@p+1
  3801  002822                     l159:
  3802                           
  3803                           ; BSR set to: 0
  3804                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 633:     w 
      +                          = width;
  3805  002822  C0F4  F037         	movff	_width,xtoa@w
  3806  002826  C0F5  F038         	movff	_width+1,xtoa@w+1
  3807                           
  3808                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 634:     if
      +                           (flags & (1 << 4)) {
  3809  00282A  A85B               	btfss	_flags,4,c
  3810  00282C  D004               	goto	l3663
  3811                           
  3812                           ; BSR set to: 0
  3813                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 635:       
      +                            w -= 2;
  3814  00282E  0EFE               	movlw	254
  3815  002830  2637               	addwf	xtoa@w,f,c
  3816  002832  0EFF               	movlw	255
  3817  002834  2238               	addwfc	xtoa@w+1,f,c
  3818  002836                     l3663:
  3819                           
  3820                           ; BSR set to: 0
  3821                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 639:     n 
      +                          = d;
  3822  002836  C020  F039         	movff	xtoa@d,xtoa@n
  3823  00283A  C021  F03A         	movff	xtoa@d+1,xtoa@n+1
  3824  00283E  C022  F03B         	movff	xtoa@d+2,xtoa@n+2
  3825  002842  C023  F03C         	movff	xtoa@d+3,xtoa@n+3
  3826  002846  C024  F03D         	movff	xtoa@d+4,xtoa@n+4
  3827  00284A  C025  F03E         	movff	xtoa@d+5,xtoa@n+5
  3828  00284E  C026  F03F         	movff	xtoa@d+6,xtoa@n+6
  3829  002852  C027  F040         	movff	xtoa@d+7,xtoa@n+7
  3830                           
  3831                           ; BSR set to: 0
  3832                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 640:     i 
      +                          = sizeof(dbuf) - 1;
  3833  002856  0E00               	movlw	0
  3834  002858  6E42               	movwf	xtoa@i+1,c
  3835  00285A  0E1F               	movlw	31
  3836  00285C  6E41               	movwf	xtoa@i,c
  3837                           
  3838                           ; BSR set to: 0
  3839                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 641:     db
      +                          uf[i] = '\0';
  3840  00285E  0E00               	movlw	0
  3841  002860  0101               	movlb	1	; () banked
  3842  002862  6F2E               	movwf	(_dbuf+31)& (0+255),b
  3843                           
  3844                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 642:     wh
      +                          ile (!(i < 2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  3845  002864  D093               	goto	l3699
  3846  002866                     l3669:
  3847                           
  3848                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 643:       
      +                            --i;
  3849  002866  0641               	decf	xtoa@i,f,c
  3850  002868  A0D8               	btfss	status,0,c
  3851  00286A  0642               	decf	xtoa@i+1,f,c
  3852                           
  3853                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 644:       
      +                            c = n & 0x0f;
  3854  00286C  0E0F               	movlw	15
  3855  00286E  1439               	andwf	xtoa@n,w,c
  3856  002870  6E43               	movwf	xtoa@c,c
  3857  002872  6A44               	clrf	xtoa@c+1,c
  3858                           
  3859                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 645:       
      +                            c = (c < 10) ? '0' + c : 'a' + (c - 10);
  3860  002874  BE44               	btfsc	xtoa@c+1,7,c
  3861  002876  D008               	goto	l3677
  3862  002878  5044               	movf	xtoa@c+1,w,c
  3863  00287A  E104               	bnz	u3750
  3864  00287C  0E0A               	movlw	10
  3865  00287E  5C43               	subwf	xtoa@c,w,c
  3866  002880  A0D8               	btfss	status,0,c
  3867  002882  D002               	goto	l3677
  3868  002884                     u3750:
  3869  002884  0E57               	movlw	87
  3870  002886  D001               	goto	L16
  3871  002888                     l3677:
  3872  002888  0E30               	movlw	48
  3873  00288A                     L16:
  3874  00288A  2443               	addwf	xtoa@c,w,c
  3875  00288C  6E43               	movwf	xtoa@c,c
  3876  00288E  0E00               	movlw	0
  3877  002890  2044               	addwfc	xtoa@c+1,w,c
  3878  002892  6E44               	movwf	xtoa@c+1,c
  3879                           
  3880                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 646:       
      +                            if ((0 ? isupper((int)x) : ((unsigned)((int)x)-'A') < 26) && (0 ? isalpha(c) : (((unsi
      +                          gned)(c)|32)-'a') < 26)) {
  3881  002894  0EBF               	movlw	191
  3882  002896  6E29               	movwf	??_xtoa& (0+255),c
  3883  002898  0EFF               	movlw	255
  3884  00289A  6E2A               	movwf	(??_xtoa+1)& (0+255),c
  3885  00289C  5028               	movf	xtoa@x,w,c
  3886  00289E  6E2B               	movwf	(??_xtoa+2)& (0+255),c
  3887  0028A0  6A2C               	clrf	(??_xtoa+3)& (0+255),c
  3888  0028A2  5029               	movf	??_xtoa,w,c
  3889  0028A4  262B               	addwf	??_xtoa+2,f,c
  3890  0028A6  502A               	movf	??_xtoa+1,w,c
  3891  0028A8  222C               	addwfc	??_xtoa+3,f,c
  3892  0028AA  502C               	movf	??_xtoa+3,w,c
  3893  0028AC  E106               	bnz	u3760
  3894  0028AE  0E1A               	movlw	26
  3895  0028B0  5C2B               	subwf	??_xtoa+2,w,c
  3896  0028B2  B0D8               	btfsc	status,0,c
  3897  0028B4  D002               	goto	u3760
  3898  0028B6  0E01               	movlw	1
  3899  0028B8  D001               	goto	u3770
  3900  0028BA                     u3760:
  3901  0028BA  0E00               	movlw	0
  3902  0028BC                     u3770:
  3903  0028BC  6E31               	movwf	_xtoa$183,c
  3904  0028BE  6A32               	clrf	_xtoa$183+1,c
  3905  0028C0  5031               	movf	_xtoa$183,w,c
  3906  0028C2  1032               	iorwf	_xtoa$183+1,w,c
  3907  0028C4  B4D8               	btfsc	status,2,c
  3908  0028C6  D027               	goto	l3691
  3909  0028C8  0E9F               	movlw	159
  3910  0028CA  6E29               	movwf	??_xtoa& (0+255),c
  3911  0028CC  0EFF               	movlw	255
  3912  0028CE  6E2A               	movwf	(??_xtoa+1)& (0+255),c
  3913  0028D0  0E20               	movlw	32
  3914  0028D2  1043               	iorwf	xtoa@c,w,c
  3915  0028D4  6E2B               	movwf	(??_xtoa+2)& (0+255),c
  3916  0028D6  0E00               	movlw	0
  3917  0028D8  1044               	iorwf	xtoa@c+1,w,c
  3918  0028DA  6E2C               	movwf	(??_xtoa+3)& (0+255),c
  3919  0028DC  5029               	movf	??_xtoa,w,c
  3920  0028DE  262B               	addwf	??_xtoa+2,f,c
  3921  0028E0  502A               	movf	??_xtoa+1,w,c
  3922  0028E2  222C               	addwfc	??_xtoa+3,f,c
  3923  0028E4  502C               	movf	??_xtoa+3,w,c
  3924  0028E6  E106               	bnz	u3790
  3925  0028E8  0E1A               	movlw	26
  3926  0028EA  5C2B               	subwf	??_xtoa+2,w,c
  3927  0028EC  B0D8               	btfsc	status,0,c
  3928  0028EE  D002               	goto	u3790
  3929  0028F0  0E01               	movlw	1
  3930  0028F2  D001               	goto	u3800
  3931  0028F4                     u3790:
  3932  0028F4  0E00               	movlw	0
  3933  0028F6                     u3800:
  3934  0028F6  6E33               	movwf	_xtoa$184,c
  3935  0028F8  6A34               	clrf	_xtoa$184+1,c
  3936  0028FA  5033               	movf	_xtoa$184,w,c
  3937  0028FC  1034               	iorwf	_xtoa$184+1,w,c
  3938  0028FE  B4D8               	btfsc	status,2,c
  3939  002900  D00A               	goto	l3691
  3940                           
  3941                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 647:       
      +                                c = toupper(c);
  3942  002902  C043  F009         	movff	xtoa@c,toupper@c
  3943  002906  C044  F00A         	movff	xtoa@c+1,toupper@c+1
  3944  00290A  ECEC  F01E         	call	_toupper	;wreg free
  3945  00290E  C009  F043         	movff	?_toupper,xtoa@c
  3946  002912  C00A  F044         	movff	?_toupper+1,xtoa@c+1
  3947  002916                     l3691:
  3948                           
  3949                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 649:       
      +                            dbuf[i] = (char)c;
  3950  002916  0E0F               	movlw	low _dbuf
  3951  002918  2441               	addwf	xtoa@i,w,c
  3952  00291A  6ED9               	movwf	fsr2l,c
  3953  00291C  0E01               	movlw	high _dbuf
  3954  00291E  2042               	addwfc	xtoa@i+1,w,c
  3955  002920  6EDA               	movwf	fsr2h,c
  3956  002922  C043  FFDF         	movff	xtoa@c,indf2
  3957                           
  3958                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 650:       
      +                            --p;
  3959  002926  0635               	decf	xtoa@p,f,c
  3960  002928  A0D8               	btfss	status,0,c
  3961  00292A  0636               	decf	xtoa@p+1,f,c
  3962                           
  3963                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 651:       
      +                            --w;
  3964  00292C  0637               	decf	xtoa@w,f,c
  3965  00292E  A0D8               	btfss	status,0,c
  3966  002930  0638               	decf	xtoa@w+1,f,c
  3967                           
  3968                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 652:       
      +                            n = n >> 4;
  3969  002932  C039  F029         	movff	xtoa@n,??_xtoa
  3970  002936  C03A  F02A         	movff	xtoa@n+1,??_xtoa+1
  3971  00293A  C03B  F02B         	movff	xtoa@n+2,??_xtoa+2
  3972  00293E  C03C  F02C         	movff	xtoa@n+3,??_xtoa+3
  3973  002942  C03D  F02D         	movff	xtoa@n+4,??_xtoa+4
  3974  002946  C03E  F02E         	movff	xtoa@n+5,??_xtoa+5
  3975  00294A  C03F  F02F         	movff	xtoa@n+6,??_xtoa+6
  3976  00294E  C040  F030         	movff	xtoa@n+7,??_xtoa+7
  3977  002952  0E05               	movlw	5
  3978  002954  D009               	goto	u3820
  3979  002956                     u3825:
  3980  002956  90D8               	bcf	status,0,c
  3981  002958  3230               	rrcf	??_xtoa+7,f,c
  3982  00295A  322F               	rrcf	??_xtoa+6,f,c
  3983  00295C  322E               	rrcf	??_xtoa+5,f,c
  3984  00295E  322D               	rrcf	??_xtoa+4,f,c
  3985  002960  322C               	rrcf	??_xtoa+3,f,c
  3986  002962  322B               	rrcf	??_xtoa+2,f,c
  3987  002964  322A               	rrcf	??_xtoa+1,f,c
  3988  002966  3229               	rrcf	??_xtoa,f,c
  3989  002968                     u3820:
  3990  002968  2EE8               	decfsz	wreg,f,c
  3991  00296A  D7F5               	goto	u3825
  3992  00296C  C029  F039         	movff	??_xtoa,xtoa@n
  3993  002970  C02A  F03A         	movff	??_xtoa+1,xtoa@n+1
  3994  002974  C02B  F03B         	movff	??_xtoa+2,xtoa@n+2
  3995  002978  C02C  F03C         	movff	??_xtoa+3,xtoa@n+3
  3996  00297C  C02D  F03D         	movff	??_xtoa+4,xtoa@n+4
  3997  002980  C02E  F03E         	movff	??_xtoa+5,xtoa@n+5
  3998  002984  C02F  F03F         	movff	??_xtoa+6,xtoa@n+6
  3999  002988  C030  F040         	movff	??_xtoa+7,xtoa@n+7
  4000  00298C                     l3699:
  4001                           
  4002                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 642:     wh
      +                          ile (!(i < 2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  4003  00298C  BE42               	btfsc	xtoa@i+1,7,c
  4004  00298E  D020               	goto	u3870
  4005  002990  5042               	movf	xtoa@i+1,w,c
  4006  002992  E104               	bnz	u3830
  4007  002994  0E02               	movlw	2
  4008  002996  5C41               	subwf	xtoa@i,w,c
  4009  002998  A0D8               	btfss	status,0,c
  4010  00299A  D01A               	goto	u3870
  4011  00299C                     u3830:
  4012  00299C  5039               	movf	xtoa@n,w,c
  4013  00299E  103A               	iorwf	xtoa@n+1,w,c
  4014  0029A0  103B               	iorwf	xtoa@n+2,w,c
  4015  0029A2  103C               	iorwf	xtoa@n+3,w,c
  4016  0029A4  103D               	iorwf	xtoa@n+4,w,c
  4017  0029A6  103E               	iorwf	xtoa@n+5,w,c
  4018  0029A8  103F               	iorwf	xtoa@n+6,w,c
  4019  0029AA  1040               	iorwf	xtoa@n+7,w,c
  4020  0029AC  A4D8               	btfss	status,2,c
  4021  0029AE  D75B               	goto	l3669
  4022  0029B0  BE36               	btfsc	xtoa@p+1,7,c
  4023  0029B2  D005               	goto	u3850
  4024  0029B4  5036               	movf	xtoa@p+1,w,c
  4025  0029B6  E102               	bnz	u3851
  4026  0029B8  0435               	decf	xtoa@p,w,c
  4027  0029BA  B0D8               	btfsc	status,0,c
  4028  0029BC                     u3851:
  4029  0029BC  D754               	goto	l3669
  4030  0029BE                     u3850:
  4031  0029BE  BE38               	btfsc	xtoa@w+1,7,c
  4032  0029C0  D007               	goto	u3870
  4033  0029C2  5038               	movf	xtoa@w+1,w,c
  4034  0029C4  E103               	bnz	u3860
  4035  0029C6  0437               	decf	xtoa@w,w,c
  4036  0029C8  A0D8               	btfss	status,0,c
  4037  0029CA  D002               	goto	u3870
  4038  0029CC                     u3860:
  4039  0029CC  B25B               	btfsc	_flags,1,c
  4040  0029CE  D74B               	goto	l3669
  4041  0029D0                     u3870:
  4042                           
  4043                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 656:     if
      +                           (flags & (1 << 4)) {
  4044  0029D0  A85B               	btfss	_flags,4,c
  4045  0029D2  D016               	goto	l3715
  4046                           
  4047                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 657:       
      +                            --i;
  4048  0029D4  0641               	decf	xtoa@i,f,c
  4049  0029D6  A0D8               	btfss	status,0,c
  4050  0029D8  0642               	decf	xtoa@i+1,f,c
  4051                           
  4052                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 658:       
      +                            dbuf[i] = x;
  4053  0029DA  0E0F               	movlw	low _dbuf
  4054  0029DC  2441               	addwf	xtoa@i,w,c
  4055  0029DE  6ED9               	movwf	fsr2l,c
  4056  0029E0  0E01               	movlw	high _dbuf
  4057  0029E2  2042               	addwfc	xtoa@i+1,w,c
  4058  0029E4  6EDA               	movwf	fsr2h,c
  4059  0029E6  C028  FFDF         	movff	xtoa@x,indf2
  4060                           
  4061                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 659:       
      +                            --i;
  4062  0029EA  0641               	decf	xtoa@i,f,c
  4063  0029EC  A0D8               	btfss	status,0,c
  4064  0029EE  0642               	decf	xtoa@i+1,f,c
  4065                           
  4066                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 660:       
      +                            dbuf[i] = '0';
  4067  0029F0  0E0F               	movlw	low _dbuf
  4068  0029F2  2441               	addwf	xtoa@i,w,c
  4069  0029F4  6ED9               	movwf	fsr2l,c
  4070  0029F6  0E01               	movlw	high _dbuf
  4071  0029F8  2042               	addwfc	xtoa@i+1,w,c
  4072  0029FA  6EDA               	movwf	fsr2h,c
  4073  0029FC  0E30               	movlw	48
  4074  0029FE  6EDF               	movwf	indf2,c
  4075  002A00                     l3715:
  4076                           
  4077                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 664:     re
      +                          turn pad(fp, &dbuf[i], w);
  4078  002A00  C01E  F013         	movff	xtoa@fp,pad@fp
  4079  002A04  C01F  F014         	movff	xtoa@fp+1,pad@fp+1
  4080  002A08  0E0F               	movlw	low _dbuf
  4081  002A0A  2441               	addwf	xtoa@i,w,c
  4082  002A0C  6E15               	movwf	pad@buf,c
  4083  002A0E  0E01               	movlw	high _dbuf
  4084  002A10  2042               	addwfc	xtoa@i+1,w,c
  4085  002A12  6E16               	movwf	pad@buf+1,c
  4086  002A14  C037  F017         	movff	xtoa@w,pad@p
  4087  002A18  C038  F018         	movff	xtoa@w+1,pad@p+1
  4088  002A1C  EC1A  F01E         	call	_pad	;wreg free
  4089  002A20  C013  F01E         	movff	?_pad,?_xtoa
  4090  002A24  C014  F01F         	movff	?_pad+1,?_xtoa+1
  4091  002A28  0012               	return		;funcret
  4092  002A2A                     __end_of_xtoa:
  4093                           	opt callstack 0
  4094                           
  4095 ;; *************** function _toupper *****************
  4096 ;; Defined at:
  4097 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\toupper.c"
  4098 ;; Parameters:    Size  Location     Type
  4099 ;;  c               2    8[COMRAM] int 
  4100 ;; Auto vars:     Size  Location     Type
  4101 ;;		None
  4102 ;; Return value:  Size  Location     Type
  4103 ;;                  2    8[COMRAM] int 
  4104 ;; Registers used:
  4105 ;;		wreg, status,2, status,0
  4106 ;; Tracked objects:
  4107 ;;		On entry : 0/0
  4108 ;;		On exit  : 0/0
  4109 ;;		Unchanged: 0/0
  4110 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4111 ;;      Params:         2       0       0       0       0       0       0       0       0
  4112 ;;      Locals:         2       0       0       0       0       0       0       0       0
  4113 ;;      Temps:          4       0       0       0       0       0       0       0       0
  4114 ;;      Totals:         8       0       0       0       0       0       0       0       0
  4115 ;;Total ram usage:        8 bytes
  4116 ;; Hardware stack levels used:    1
  4117 ;; Hardware stack levels required when called:    4
  4118 ;; This function calls:
  4119 ;;		_islower
  4120 ;; This function is called by:
  4121 ;;		_xtoa
  4122 ;; This function uses a non-reentrant model
  4123 ;;
  4124                           
  4125                           	psect	text8
  4126  003DD8                     __ptext8:
  4127                           	opt callstack 0
  4128  003DD8                     _toupper:
  4129                           	opt callstack 19
  4130                           
  4131                           ;incstack = 0
  4132  003DD8  0E9F               	movlw	159
  4133  003DDA  6E0B               	movwf	??_toupper& (0+255),c
  4134  003DDC  0EFF               	movlw	255
  4135  003DDE  6E0C               	movwf	(??_toupper+1)& (0+255),c
  4136  003DE0  C009  F00D         	movff	toupper@c,??_toupper+2
  4137  003DE4  C00A  F00E         	movff	toupper@c+1,??_toupper+3
  4138  003DE8  500B               	movf	??_toupper,w,c
  4139  003DEA  260D               	addwf	??_toupper+2,f,c
  4140  003DEC  500C               	movf	??_toupper+1,w,c
  4141  003DEE  220E               	addwfc	??_toupper+3,f,c
  4142  003DF0  500E               	movf	??_toupper+3,w,c
  4143  003DF2  E106               	bnz	u3030
  4144  003DF4  0E1A               	movlw	26
  4145  003DF6  5C0D               	subwf	??_toupper+2,w,c
  4146  003DF8  B0D8               	btfsc	status,0,c
  4147  003DFA  D002               	goto	u3030
  4148  003DFC  0E01               	movlw	1
  4149  003DFE  D001               	goto	u3040
  4150  003E00                     u3030:
  4151  003E00  0E00               	movlw	0
  4152  003E02                     u3040:
  4153  003E02  6E0F               	movwf	_toupper$1488,c
  4154  003E04  6A10               	clrf	_toupper$1488+1,c
  4155  003E06  500F               	movf	_toupper$1488,w,c
  4156  003E08  1010               	iorwf	_toupper$1488+1,w,c
  4157  003E0A  B4D8               	btfsc	status,2,c
  4158  003E0C  D005               	goto	l1300
  4159  003E0E  0E5F               	movlw	95
  4160  003E10  1409               	andwf	toupper@c,w,c
  4161  003E12  6E09               	movwf	?_toupper,c
  4162  003E14  6A0A               	clrf	?_toupper+1,c
  4163  003E16  0012               	return	
  4164  003E18                     l1300:
  4165  003E18  C009  F009         	movff	toupper@c,?_toupper
  4166  003E1C  C00A  F00A         	movff	toupper@c+1,?_toupper+1
  4167  003E20  0012               	return		;funcret
  4168  003E22                     __end_of_toupper:
  4169                           	opt callstack 0
  4170                           
  4171 ;; *************** function _islower *****************
  4172 ;; Defined at:
  4173 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\islower.c"
  4174 ;; Parameters:    Size  Location     Type
  4175 ;;  c               2    2[COMRAM] int 
  4176 ;; Auto vars:     Size  Location     Type
  4177 ;;		None
  4178 ;; Return value:  Size  Location     Type
  4179 ;;                  2    2[COMRAM] int 
  4180 ;; Registers used:
  4181 ;;		wreg, status,2, status,0
  4182 ;; Tracked objects:
  4183 ;;		On entry : 0/0
  4184 ;;		On exit  : 0/0
  4185 ;;		Unchanged: 0/0
  4186 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4187 ;;      Params:         2       0       0       0       0       0       0       0       0
  4188 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4189 ;;      Temps:          4       0       0       0       0       0       0       0       0
  4190 ;;      Totals:         6       0       0       0       0       0       0       0       0
  4191 ;;Total ram usage:        6 bytes
  4192 ;; Hardware stack levels used:    1
  4193 ;; Hardware stack levels required when called:    3
  4194 ;; This function calls:
  4195 ;;		Nothing
  4196 ;; This function is called by:
  4197 ;;		_toupper
  4198 ;; This function uses a non-reentrant model
  4199 ;;
  4200                           
  4201                           	psect	text9
  4202  004072                     __ptext9:
  4203                           	opt callstack 0
  4204  004072                     _islower:
  4205                           	opt callstack 19
  4206                           
  4207                           ;incstack = 0
  4208  004072  0E9F               	movlw	159
  4209  004074  6E05               	movwf	??_islower& (0+255),c
  4210  004076  0EFF               	movlw	255
  4211  004078  6E06               	movwf	(??_islower+1)& (0+255),c
  4212  00407A  C003  F007         	movff	islower@c,??_islower+2
  4213  00407E  C004  F008         	movff	islower@c+1,??_islower+3
  4214  004082  5005               	movf	??_islower,w,c
  4215  004084  2607               	addwf	??_islower+2,f,c
  4216  004086  5006               	movf	??_islower+1,w,c
  4217  004088  2208               	addwfc	??_islower+3,f,c
  4218  00408A  5008               	movf	??_islower+3,w,c
  4219  00408C  E106               	bnz	u2920
  4220  00408E  0E1A               	movlw	26
  4221  004090  5C07               	subwf	??_islower+2,w,c
  4222  004092  B0D8               	btfsc	status,0,c
  4223  004094  D002               	goto	u2920
  4224  004096  0E01               	movlw	1
  4225  004098  D001               	goto	u2930
  4226  00409A                     u2920:
  4227  00409A  0E00               	movlw	0
  4228  00409C                     u2930:
  4229  00409C  6E03               	movwf	?_islower,c
  4230  00409E  6A04               	clrf	?_islower+1,c
  4231  0040A0  0012               	return		;funcret
  4232  0040A2                     __end_of_islower:
  4233                           	opt callstack 0
  4234                           
  4235 ;; *************** function _isupper *****************
  4236 ;; Defined at:
  4237 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\isupper.c"
  4238 ;; Parameters:    Size  Location     Type
  4239 ;;  c               2    2[COMRAM] int 
  4240 ;; Auto vars:     Size  Location     Type
  4241 ;;		None
  4242 ;; Return value:  Size  Location     Type
  4243 ;;                  2    2[COMRAM] int 
  4244 ;; Registers used:
  4245 ;;		wreg, status,2, status,0
  4246 ;; Tracked objects:
  4247 ;;		On entry : 0/0
  4248 ;;		On exit  : 0/0
  4249 ;;		Unchanged: 0/0
  4250 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4251 ;;      Params:         2       0       0       0       0       0       0       0       0
  4252 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4253 ;;      Temps:          4       0       0       0       0       0       0       0       0
  4254 ;;      Totals:         6       0       0       0       0       0       0       0       0
  4255 ;;Total ram usage:        6 bytes
  4256 ;; Hardware stack levels used:    1
  4257 ;; Hardware stack levels required when called:    3
  4258 ;; This function calls:
  4259 ;;		Nothing
  4260 ;; This function is called by:
  4261 ;;		_xtoa
  4262 ;; This function uses a non-reentrant model
  4263 ;;
  4264                           
  4265                           	psect	text10
  4266  0040A2                     __ptext10:
  4267                           	opt callstack 0
  4268  0040A2                     _isupper:
  4269                           	opt callstack 20
  4270                           
  4271                           ;incstack = 0
  4272  0040A2  0EBF               	movlw	191
  4273  0040A4  6E05               	movwf	??_isupper& (0+255),c
  4274  0040A6  0EFF               	movlw	255
  4275  0040A8  6E06               	movwf	(??_isupper+1)& (0+255),c
  4276  0040AA  C003  F007         	movff	isupper@c,??_isupper+2
  4277  0040AE  C004  F008         	movff	isupper@c+1,??_isupper+3
  4278  0040B2  5005               	movf	??_isupper,w,c
  4279  0040B4  2607               	addwf	??_isupper+2,f,c
  4280  0040B6  5006               	movf	??_isupper+1,w,c
  4281  0040B8  2208               	addwfc	??_isupper+3,f,c
  4282  0040BA  5008               	movf	??_isupper+3,w,c
  4283  0040BC  E106               	bnz	u2990
  4284  0040BE  0E1A               	movlw	26
  4285  0040C0  5C07               	subwf	??_isupper+2,w,c
  4286  0040C2  B0D8               	btfsc	status,0,c
  4287  0040C4  D002               	goto	u2990
  4288  0040C6  0E01               	movlw	1
  4289  0040C8  D001               	goto	u3000
  4290  0040CA                     u2990:
  4291  0040CA  0E00               	movlw	0
  4292  0040CC                     u3000:
  4293  0040CC  6E03               	movwf	?_isupper,c
  4294  0040CE  6A04               	clrf	?_isupper+1,c
  4295  0040D0  0012               	return		;funcret
  4296  0040D2                     __end_of_isupper:
  4297                           	opt callstack 0
  4298                           
  4299 ;; *************** function _isalpha *****************
  4300 ;; Defined at:
  4301 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\isalpha.c"
  4302 ;; Parameters:    Size  Location     Type
  4303 ;;  c               2    2[COMRAM] int 
  4304 ;; Auto vars:     Size  Location     Type
  4305 ;;		None
  4306 ;; Return value:  Size  Location     Type
  4307 ;;                  2    2[COMRAM] int 
  4308 ;; Registers used:
  4309 ;;		wreg, status,2, status,0
  4310 ;; Tracked objects:
  4311 ;;		On entry : 0/0
  4312 ;;		On exit  : 0/0
  4313 ;;		Unchanged: 0/0
  4314 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4315 ;;      Params:         2       0       0       0       0       0       0       0       0
  4316 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4317 ;;      Temps:          4       0       0       0       0       0       0       0       0
  4318 ;;      Totals:         6       0       0       0       0       0       0       0       0
  4319 ;;Total ram usage:        6 bytes
  4320 ;; Hardware stack levels used:    1
  4321 ;; Hardware stack levels required when called:    3
  4322 ;; This function calls:
  4323 ;;		Nothing
  4324 ;; This function is called by:
  4325 ;;		_xtoa
  4326 ;; This function uses a non-reentrant model
  4327 ;;
  4328                           
  4329                           	psect	text11
  4330  003FA8                     __ptext11:
  4331                           	opt callstack 0
  4332  003FA8                     _isalpha:
  4333                           	opt callstack 20
  4334                           
  4335                           ;incstack = 0
  4336  003FA8  0E9F               	movlw	159
  4337  003FAA  6E05               	movwf	??_isalpha& (0+255),c
  4338  003FAC  0EFF               	movlw	255
  4339  003FAE  6E06               	movwf	(??_isalpha+1)& (0+255),c
  4340  003FB0  0E20               	movlw	32
  4341  003FB2  1003               	iorwf	isalpha@c,w,c
  4342  003FB4  6E07               	movwf	(??_isalpha+2)& (0+255),c
  4343  003FB6  0E00               	movlw	0
  4344  003FB8  1004               	iorwf	isalpha@c+1,w,c
  4345  003FBA  6E08               	movwf	(??_isalpha+3)& (0+255),c
  4346  003FBC  5005               	movf	??_isalpha,w,c
  4347  003FBE  2607               	addwf	??_isalpha+2,f,c
  4348  003FC0  5006               	movf	??_isalpha+1,w,c
  4349  003FC2  2208               	addwfc	??_isalpha+3,f,c
  4350  003FC4  5008               	movf	??_isalpha+3,w,c
  4351  003FC6  E106               	bnz	u3010
  4352  003FC8  0E1A               	movlw	26
  4353  003FCA  5C07               	subwf	??_isalpha+2,w,c
  4354  003FCC  B0D8               	btfsc	status,0,c
  4355  003FCE  D002               	goto	u3010
  4356  003FD0  0E01               	movlw	1
  4357  003FD2  D001               	goto	u3020
  4358  003FD4                     u3010:
  4359  003FD4  0E00               	movlw	0
  4360  003FD6                     u3020:
  4361  003FD6  6E03               	movwf	?_isalpha,c
  4362  003FD8  6A04               	clrf	?_isalpha+1,c
  4363  003FDA  0012               	return		;funcret
  4364  003FDC                     __end_of_isalpha:
  4365                           	opt callstack 0
  4366                           
  4367 ;; *************** function _utoa *****************
  4368 ;; Defined at:
  4369 ;;		line 593 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  4370 ;; Parameters:    Size  Location     Type
  4371 ;;  fp              2   29[COMRAM] PTR struct _IO_FILE
  4372 ;;		 -> vsnprintf@f(6), 
  4373 ;;  d               8   31[COMRAM] unsigned long long 
  4374 ;; Auto vars:     Size  Location     Type
  4375 ;;  n               8   51[COMRAM] unsigned long long 
  4376 ;;  i               2   59[COMRAM] int 
  4377 ;;  w               2   49[COMRAM] int 
  4378 ;;  p               2   47[COMRAM] int 
  4379 ;; Return value:  Size  Location     Type
  4380 ;;                  2   29[COMRAM] int 
  4381 ;; Registers used:
  4382 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4383 ;; Tracked objects:
  4384 ;;		On entry : 0/0
  4385 ;;		On exit  : 0/0
  4386 ;;		Unchanged: 0/0
  4387 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4388 ;;      Params:        10       0       0       0       0       0       0       0       0
  4389 ;;      Locals:        14       0       0       0       0       0       0       0       0
  4390 ;;      Temps:          8       0       0       0       0       0       0       0       0
  4391 ;;      Totals:        32       0       0       0       0       0       0       0       0
  4392 ;;Total ram usage:       32 bytes
  4393 ;; Hardware stack levels used:    1
  4394 ;; Hardware stack levels required when called:    7
  4395 ;; This function calls:
  4396 ;;		___lodiv
  4397 ;;		___lomod
  4398 ;;		_pad
  4399 ;; This function is called by:
  4400 ;;		_vfpfcnvrt
  4401 ;; This function uses a non-reentrant model
  4402 ;;
  4403                           
  4404                           	psect	text12
  4405  002BEA                     __ptext12:
  4406                           	opt callstack 0
  4407  002BEA                     _utoa:
  4408                           	opt callstack 17
  4409                           
  4410                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 593: static
      +                           int utoa(FILE *fp, unsigned long long d);C:\Program Files (x86)\Microchip\xc8\v2.05\pic
      +                          \sources\c99\common\doprnt.c: 594: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sour
      +                          ces\c99\common\doprnt.c: 595:     int i, p, w;;C:\Program Files (x86)\Microchip\xc8\v2.0
      +                          5\pic\sources\c99\common\doprnt.c: 596:     unsigned long long n;;C:\Program Files (x86)
      +                          \Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 599:     if (!(prec < 0)) {
  4411                           
  4412                           ;incstack = 0
  4413  002BEA  0100               	movlb	0	; () banked
  4414  002BEC  AFF7               	btfss	(_prec+1)& (0+255),7,b
  4415                           
  4416                           ; BSR set to: 0
  4417                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 600:       
      +                            flags &= ~(1 << 1);
  4418  002BEE  925B               	bcf	_flags,1,c
  4419                           
  4420                           ; BSR set to: 0
  4421                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 602:     p 
      +                          = (0 < prec) ? prec : 1;
  4422  002BF0  BFF7               	btfsc	(_prec+1)& (0+255),7,b
  4423  002BF2  D005               	goto	u3660
  4424  002BF4  51F7               	movf	(_prec+1)& (0+255),w,b
  4425  002BF6  E108               	bnz	l142
  4426  002BF8  05F6               	decf	_prec& (0+255),w,b
  4427  002BFA  B0D8               	btfsc	status,0,c
  4428  002BFC  D005               	goto	l142
  4429  002BFE                     u3660:
  4430                           
  4431                           ; BSR set to: 0
  4432  002BFE  0E00               	movlw	0
  4433  002C00  6E31               	movwf	utoa@p+1,c
  4434  002C02  0E01               	movlw	1
  4435  002C04  6E30               	movwf	utoa@p,c
  4436  002C06  D004               	goto	l144
  4437  002C08                     l142:
  4438                           
  4439                           ; BSR set to: 0
  4440  002C08  C0F6  F030         	movff	_prec,utoa@p
  4441  002C0C  C0F7  F031         	movff	_prec+1,utoa@p+1
  4442  002C10                     l144:
  4443                           
  4444                           ; BSR set to: 0
  4445                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 603:     w 
      +                          = width;
  4446  002C10  C0F4  F032         	movff	_width,utoa@w
  4447  002C14  C0F5  F033         	movff	_width+1,utoa@w+1
  4448                           
  4449                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 606:     n 
      +                          = d;
  4450  002C18  C020  F034         	movff	utoa@d,utoa@n
  4451  002C1C  C021  F035         	movff	utoa@d+1,utoa@n+1
  4452  002C20  C022  F036         	movff	utoa@d+2,utoa@n+2
  4453  002C24  C023  F037         	movff	utoa@d+3,utoa@n+3
  4454  002C28  C024  F038         	movff	utoa@d+4,utoa@n+4
  4455  002C2C  C025  F039         	movff	utoa@d+5,utoa@n+5
  4456  002C30  C026  F03A         	movff	utoa@d+6,utoa@n+6
  4457  002C34  C027  F03B         	movff	utoa@d+7,utoa@n+7
  4458                           
  4459                           ; BSR set to: 0
  4460                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 607:     i 
      +                          = sizeof(dbuf) - 1;
  4461  002C38  0E00               	movlw	0
  4462  002C3A  6E3D               	movwf	utoa@i+1,c
  4463  002C3C  0E1F               	movlw	31
  4464  002C3E  6E3C               	movwf	utoa@i,c
  4465                           
  4466                           ; BSR set to: 0
  4467                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 608:     db
      +                          uf[i] = '\0';
  4468  002C40  0E00               	movlw	0
  4469  002C42  0101               	movlb	1	; () banked
  4470  002C44  6F2E               	movwf	(_dbuf+31)& (0+255),b
  4471                           
  4472                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 609:     wh
      +                          ile (i && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  4473  002C46  D076               	goto	l3639
  4474  002C48                     l3629:
  4475                           
  4476                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 610:       
      +                            --i;
  4477  002C48  063C               	decf	utoa@i,f,c
  4478  002C4A  A0D8               	btfss	status,0,c
  4479  002C4C  063D               	decf	utoa@i+1,f,c
  4480                           
  4481                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 611:       
      +                            dbuf[i] = '0' + (n % 10);
  4482  002C4E  0E0F               	movlw	low _dbuf
  4483  002C50  243C               	addwf	utoa@i,w,c
  4484  002C52  6ED9               	movwf	fsr2l,c
  4485  002C54  0E01               	movlw	high _dbuf
  4486  002C56  203D               	addwfc	utoa@i+1,w,c
  4487  002C58  6EDA               	movwf	fsr2h,c
  4488  002C5A  C034  F003         	movff	utoa@n,___lomod@dividend
  4489  002C5E  C035  F004         	movff	utoa@n+1,___lomod@dividend+1
  4490  002C62  C036  F005         	movff	utoa@n+2,___lomod@dividend+2
  4491  002C66  C037  F006         	movff	utoa@n+3,___lomod@dividend+3
  4492  002C6A  C038  F007         	movff	utoa@n+4,___lomod@dividend+4
  4493  002C6E  C039  F008         	movff	utoa@n+5,___lomod@dividend+5
  4494  002C72  C03A  F009         	movff	utoa@n+6,___lomod@dividend+6
  4495  002C76  C03B  F00A         	movff	utoa@n+7,___lomod@dividend+7
  4496  002C7A  0E0A               	movlw	10
  4497  002C7C  6E0B               	movwf	___lomod@divisor,c
  4498  002C7E  0E00               	movlw	0
  4499  002C80  6E0C               	movwf	___lomod@divisor+1,c
  4500  002C82  0E00               	movlw	0
  4501  002C84  6E0D               	movwf	___lomod@divisor+2,c
  4502  002C86  0E00               	movlw	0
  4503  002C88  6E0E               	movwf	___lomod@divisor+3,c
  4504  002C8A  0E00               	movlw	0
  4505  002C8C  6E0F               	movwf	___lomod@divisor+4,c
  4506  002C8E  0E00               	movlw	0
  4507  002C90  6E10               	movwf	___lomod@divisor+5,c
  4508  002C92  0E00               	movlw	0
  4509  002C94  6E11               	movwf	___lomod@divisor+6,c
  4510  002C96  0E00               	movlw	0
  4511  002C98  6E12               	movwf	___lomod@divisor+7,c
  4512  002C9A  EC1E  F01D         	call	___lomod	;wreg free
  4513  002C9E  C003  F028         	movff	?___lomod,??_utoa
  4514  002CA2  C004  F029         	movff	?___lomod+1,??_utoa+1
  4515  002CA6  C005  F02A         	movff	?___lomod+2,??_utoa+2
  4516  002CAA  C006  F02B         	movff	?___lomod+3,??_utoa+3
  4517  002CAE  C007  F02C         	movff	?___lomod+4,??_utoa+4
  4518  002CB2  C008  F02D         	movff	?___lomod+5,??_utoa+5
  4519  002CB6  C009  F02E         	movff	?___lomod+6,??_utoa+6
  4520  002CBA  C00A  F02F         	movff	?___lomod+7,??_utoa+7
  4521  002CBE  5028               	movf	??_utoa,w,c
  4522  002CC0  0F30               	addlw	48
  4523  002CC2  6EDF               	movwf	indf2,c
  4524                           
  4525                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 612:       
      +                            --p;
  4526  002CC4  0630               	decf	utoa@p,f,c
  4527  002CC6  A0D8               	btfss	status,0,c
  4528  002CC8  0631               	decf	utoa@p+1,f,c
  4529                           
  4530                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 613:       
      +                            --w;
  4531  002CCA  0632               	decf	utoa@w,f,c
  4532  002CCC  A0D8               	btfss	status,0,c
  4533  002CCE  0633               	decf	utoa@w+1,f,c
  4534                           
  4535                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 614:       
      +                            n = n / 10;
  4536  002CD0  C034  F003         	movff	utoa@n,___lodiv@dividend
  4537  002CD4  C035  F004         	movff	utoa@n+1,___lodiv@dividend+1
  4538  002CD8  C036  F005         	movff	utoa@n+2,___lodiv@dividend+2
  4539  002CDC  C037  F006         	movff	utoa@n+3,___lodiv@dividend+3
  4540  002CE0  C038  F007         	movff	utoa@n+4,___lodiv@dividend+4
  4541  002CE4  C039  F008         	movff	utoa@n+5,___lodiv@dividend+5
  4542  002CE8  C03A  F009         	movff	utoa@n+6,___lodiv@dividend+6
  4543  002CEC  C03B  F00A         	movff	utoa@n+7,___lodiv@dividend+7
  4544  002CF0  0E0A               	movlw	10
  4545  002CF2  6E0B               	movwf	___lodiv@divisor,c
  4546  002CF4  0E00               	movlw	0
  4547  002CF6  6E0C               	movwf	___lodiv@divisor+1,c
  4548  002CF8  0E00               	movlw	0
  4549  002CFA  6E0D               	movwf	___lodiv@divisor+2,c
  4550  002CFC  0E00               	movlw	0
  4551  002CFE  6E0E               	movwf	___lodiv@divisor+3,c
  4552  002D00  0E00               	movlw	0
  4553  002D02  6E0F               	movwf	___lodiv@divisor+4,c
  4554  002D04  0E00               	movlw	0
  4555  002D06  6E10               	movwf	___lodiv@divisor+5,c
  4556  002D08  0E00               	movlw	0
  4557  002D0A  6E11               	movwf	___lodiv@divisor+6,c
  4558  002D0C  0E00               	movlw	0
  4559  002D0E  6E12               	movwf	___lodiv@divisor+7,c
  4560  002D10  EC01  F01C         	call	___lodiv	;wreg free
  4561  002D14  C003  F034         	movff	?___lodiv,utoa@n
  4562  002D18  C004  F035         	movff	?___lodiv+1,utoa@n+1
  4563  002D1C  C005  F036         	movff	?___lodiv+2,utoa@n+2
  4564  002D20  C006  F037         	movff	?___lodiv+3,utoa@n+3
  4565  002D24  C007  F038         	movff	?___lodiv+4,utoa@n+4
  4566  002D28  C008  F039         	movff	?___lodiv+5,utoa@n+5
  4567  002D2C  C009  F03A         	movff	?___lodiv+6,utoa@n+6
  4568  002D30  C00A  F03B         	movff	?___lodiv+7,utoa@n+7
  4569  002D34                     l3639:
  4570                           
  4571                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 609:     wh
      +                          ile (i && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  4572  002D34  503C               	movf	utoa@i,w,c
  4573  002D36  103D               	iorwf	utoa@i+1,w,c
  4574  002D38  B4D8               	btfsc	status,2,c
  4575  002D3A  D01A               	goto	u3710
  4576  002D3C  5034               	movf	utoa@n,w,c
  4577  002D3E  1035               	iorwf	utoa@n+1,w,c
  4578  002D40  1036               	iorwf	utoa@n+2,w,c
  4579  002D42  1037               	iorwf	utoa@n+3,w,c
  4580  002D44  1038               	iorwf	utoa@n+4,w,c
  4581  002D46  1039               	iorwf	utoa@n+5,w,c
  4582  002D48  103A               	iorwf	utoa@n+6,w,c
  4583  002D4A  103B               	iorwf	utoa@n+7,w,c
  4584  002D4C  A4D8               	btfss	status,2,c
  4585  002D4E  D77C               	goto	l3629
  4586  002D50  BE31               	btfsc	utoa@p+1,7,c
  4587  002D52  D005               	goto	u3690
  4588  002D54  5031               	movf	utoa@p+1,w,c
  4589  002D56  E102               	bnz	u3691
  4590  002D58  0430               	decf	utoa@p,w,c
  4591  002D5A  B0D8               	btfsc	status,0,c
  4592  002D5C                     u3691:
  4593  002D5C  D775               	goto	l3629
  4594  002D5E                     u3690:
  4595  002D5E  BE33               	btfsc	utoa@w+1,7,c
  4596  002D60  D007               	goto	u3710
  4597  002D62  5033               	movf	utoa@w+1,w,c
  4598  002D64  E103               	bnz	u3700
  4599  002D66  0432               	decf	utoa@w,w,c
  4600  002D68  A0D8               	btfss	status,0,c
  4601  002D6A  D002               	goto	u3710
  4602  002D6C                     u3700:
  4603  002D6C  B25B               	btfsc	_flags,1,c
  4604  002D6E  D76C               	goto	l3629
  4605  002D70                     u3710:
  4606                           
  4607                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 618:     re
      +                          turn pad(fp, &dbuf[i], w);
  4608  002D70  C01E  F013         	movff	utoa@fp,pad@fp
  4609  002D74  C01F  F014         	movff	utoa@fp+1,pad@fp+1
  4610  002D78  0E0F               	movlw	low _dbuf
  4611  002D7A  243C               	addwf	utoa@i,w,c
  4612  002D7C  6E15               	movwf	pad@buf,c
  4613  002D7E  0E01               	movlw	high _dbuf
  4614  002D80  203D               	addwfc	utoa@i+1,w,c
  4615  002D82  6E16               	movwf	pad@buf+1,c
  4616  002D84  C032  F017         	movff	utoa@w,pad@p
  4617  002D88  C033  F018         	movff	utoa@w+1,pad@p+1
  4618  002D8C  EC1A  F01E         	call	_pad	;wreg free
  4619  002D90  C013  F01E         	movff	?_pad,?_utoa
  4620  002D94  C014  F01F         	movff	?_pad+1,?_utoa+1
  4621  002D98  0012               	return		;funcret
  4622  002D9A                     __end_of_utoa:
  4623                           	opt callstack 0
  4624                           
  4625 ;; *************** function ___lomod *****************
  4626 ;; Defined at:
  4627 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\lomod.c"
  4628 ;; Parameters:    Size  Location     Type
  4629 ;;  dividend        8    2[COMRAM] unsigned long long 
  4630 ;;  divisor         8   10[COMRAM] unsigned long long 
  4631 ;; Auto vars:     Size  Location     Type
  4632 ;;  counter         1   18[COMRAM] unsigned char 
  4633 ;; Return value:  Size  Location     Type
  4634 ;;                  8    2[COMRAM] unsigned long long 
  4635 ;; Registers used:
  4636 ;;		wreg, status,2, status,0
  4637 ;; Tracked objects:
  4638 ;;		On entry : 0/0
  4639 ;;		On exit  : 0/0
  4640 ;;		Unchanged: 0/0
  4641 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4642 ;;      Params:        16       0       0       0       0       0       0       0       0
  4643 ;;      Locals:         1       0       0       0       0       0       0       0       0
  4644 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4645 ;;      Totals:        17       0       0       0       0       0       0       0       0
  4646 ;;Total ram usage:       17 bytes
  4647 ;; Hardware stack levels used:    1
  4648 ;; Hardware stack levels required when called:    3
  4649 ;; This function calls:
  4650 ;;		Nothing
  4651 ;; This function is called by:
  4652 ;;		_utoa
  4653 ;; This function uses a non-reentrant model
  4654 ;;
  4655                           
  4656                           	psect	text13
  4657  003A3C                     __ptext13:
  4658                           	opt callstack 0
  4659  003A3C                     ___lomod:
  4660                           	opt callstack 20
  4661                           
  4662                           ;incstack = 0
  4663  003A3C  500B               	movf	___lomod@divisor,w,c
  4664  003A3E  100C               	iorwf	___lomod@divisor+1,w,c
  4665  003A40  100D               	iorwf	___lomod@divisor+2,w,c
  4666  003A42  100E               	iorwf	___lomod@divisor+3,w,c
  4667  003A44  100F               	iorwf	___lomod@divisor+4,w,c
  4668  003A46  1010               	iorwf	___lomod@divisor+5,w,c
  4669  003A48  1011               	iorwf	___lomod@divisor+6,w,c
  4670  003A4A  1012               	iorwf	___lomod@divisor+7,w,c
  4671  003A4C  B4D8               	btfsc	status,2,c
  4672  003A4E  D03C               	goto	l937
  4673  003A50  0E01               	movlw	1
  4674  003A52  6E13               	movwf	___lomod@counter,c
  4675  003A54  D00A               	goto	l3429
  4676  003A56                     l3427:
  4677  003A56  90D8               	bcf	status,0,c
  4678  003A58  360B               	rlcf	___lomod@divisor,f,c
  4679  003A5A  360C               	rlcf	___lomod@divisor+1,f,c
  4680  003A5C  360D               	rlcf	___lomod@divisor+2,f,c
  4681  003A5E  360E               	rlcf	___lomod@divisor+3,f,c
  4682  003A60  360F               	rlcf	___lomod@divisor+4,f,c
  4683  003A62  3610               	rlcf	___lomod@divisor+5,f,c
  4684  003A64  3611               	rlcf	___lomod@divisor+6,f,c
  4685  003A66  3612               	rlcf	___lomod@divisor+7,f,c
  4686  003A68  2A13               	incf	___lomod@counter,f,c
  4687  003A6A                     l3429:
  4688  003A6A  AE12               	btfss	___lomod@divisor+7,7,c
  4689  003A6C  D7F4               	goto	l3427
  4690  003A6E                     u3260:
  4691  003A6E  500B               	movf	___lomod@divisor,w,c
  4692  003A70  5C03               	subwf	___lomod@dividend,w,c
  4693  003A72  500C               	movf	___lomod@divisor+1,w,c
  4694  003A74  5804               	subwfb	___lomod@dividend+1,w,c
  4695  003A76  500D               	movf	___lomod@divisor+2,w,c
  4696  003A78  5805               	subwfb	___lomod@dividend+2,w,c
  4697  003A7A  500E               	movf	___lomod@divisor+3,w,c
  4698  003A7C  5806               	subwfb	___lomod@dividend+3,w,c
  4699  003A7E  500F               	movf	___lomod@divisor+4,w,c
  4700  003A80  5807               	subwfb	___lomod@dividend+4,w,c
  4701  003A82  5010               	movf	___lomod@divisor+5,w,c
  4702  003A84  5808               	subwfb	___lomod@dividend+5,w,c
  4703  003A86  5011               	movf	___lomod@divisor+6,w,c
  4704  003A88  5809               	subwfb	___lomod@dividend+6,w,c
  4705  003A8A  5012               	movf	___lomod@divisor+7,w,c
  4706  003A8C  580A               	subwfb	___lomod@dividend+7,w,c
  4707  003A8E  A0D8               	btfss	status,0,c
  4708  003A90  D010               	goto	l3435
  4709  003A92  500B               	movf	___lomod@divisor,w,c
  4710  003A94  5E03               	subwf	___lomod@dividend,f,c
  4711  003A96  500C               	movf	___lomod@divisor+1,w,c
  4712  003A98  5A04               	subwfb	___lomod@dividend+1,f,c
  4713  003A9A  500D               	movf	___lomod@divisor+2,w,c
  4714  003A9C  5A05               	subwfb	___lomod@dividend+2,f,c
  4715  003A9E  500E               	movf	___lomod@divisor+3,w,c
  4716  003AA0  5A06               	subwfb	___lomod@dividend+3,f,c
  4717  003AA2  500F               	movf	___lomod@divisor+4,w,c
  4718  003AA4  5A07               	subwfb	___lomod@dividend+4,f,c
  4719  003AA6  5010               	movf	___lomod@divisor+5,w,c
  4720  003AA8  5A08               	subwfb	___lomod@dividend+5,f,c
  4721  003AAA  5011               	movf	___lomod@divisor+6,w,c
  4722  003AAC  5A09               	subwfb	___lomod@dividend+6,f,c
  4723  003AAE  5012               	movf	___lomod@divisor+7,w,c
  4724  003AB0  5A0A               	subwfb	___lomod@dividend+7,f,c
  4725  003AB2                     l3435:
  4726  003AB2  90D8               	bcf	status,0,c
  4727  003AB4  3212               	rrcf	___lomod@divisor+7,f,c
  4728  003AB6  3211               	rrcf	___lomod@divisor+6,f,c
  4729  003AB8  3210               	rrcf	___lomod@divisor+5,f,c
  4730  003ABA  320F               	rrcf	___lomod@divisor+4,f,c
  4731  003ABC  320E               	rrcf	___lomod@divisor+3,f,c
  4732  003ABE  320D               	rrcf	___lomod@divisor+2,f,c
  4733  003AC0  320C               	rrcf	___lomod@divisor+1,f,c
  4734  003AC2  320B               	rrcf	___lomod@divisor,f,c
  4735  003AC4  2E13               	decfsz	___lomod@counter,f,c
  4736  003AC6  D7D3               	goto	u3260
  4737  003AC8                     l937:
  4738  003AC8  C003  F003         	movff	___lomod@dividend,?___lomod
  4739  003ACC  C004  F004         	movff	___lomod@dividend+1,?___lomod+1
  4740  003AD0  C005  F005         	movff	___lomod@dividend+2,?___lomod+2
  4741  003AD4  C006  F006         	movff	___lomod@dividend+3,?___lomod+3
  4742  003AD8  C007  F007         	movff	___lomod@dividend+4,?___lomod+4
  4743  003ADC  C008  F008         	movff	___lomod@dividend+5,?___lomod+5
  4744  003AE0  C009  F009         	movff	___lomod@dividend+6,?___lomod+6
  4745  003AE4  C00A  F00A         	movff	___lomod@dividend+7,?___lomod+7
  4746  003AE8  0012               	return		;funcret
  4747  003AEA                     __end_of___lomod:
  4748                           	opt callstack 0
  4749                           
  4750 ;; *************** function ___lodiv *****************
  4751 ;; Defined at:
  4752 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\lodiv.c"
  4753 ;; Parameters:    Size  Location     Type
  4754 ;;  dividend        8    2[COMRAM] unsigned long long 
  4755 ;;  divisor         8   10[COMRAM] unsigned long long 
  4756 ;; Auto vars:     Size  Location     Type
  4757 ;;  quotient        8   18[COMRAM] unsigned long long 
  4758 ;;  counter         1   26[COMRAM] unsigned char 
  4759 ;; Return value:  Size  Location     Type
  4760 ;;                  8    2[COMRAM] unsigned long long 
  4761 ;; Registers used:
  4762 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4763 ;; Tracked objects:
  4764 ;;		On entry : 0/0
  4765 ;;		On exit  : 0/0
  4766 ;;		Unchanged: 0/0
  4767 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4768 ;;      Params:        16       0       0       0       0       0       0       0       0
  4769 ;;      Locals:         9       0       0       0       0       0       0       0       0
  4770 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4771 ;;      Totals:        25       0       0       0       0       0       0       0       0
  4772 ;;Total ram usage:       25 bytes
  4773 ;; Hardware stack levels used:    1
  4774 ;; Hardware stack levels required when called:    3
  4775 ;; This function calls:
  4776 ;;		Nothing
  4777 ;; This function is called by:
  4778 ;;		_utoa
  4779 ;; This function uses a non-reentrant model
  4780 ;;
  4781                           
  4782                           	psect	text14
  4783  003802                     __ptext14:
  4784                           	opt callstack 0
  4785  003802                     ___lodiv:
  4786                           	opt callstack 20
  4787                           
  4788                           ;incstack = 0
  4789  003802  EE20  F013         	lfsr	2,___lodiv@quotient
  4790  003806  0E07               	movlw	7
  4791  003808                     u3211:
  4792  003808  6ADE               	clrf	postinc2,c
  4793  00380A  06E8               	decf	wreg,f,c
  4794  00380C  E2FD               	bc	u3211
  4795  00380E  500B               	movf	___lodiv@divisor,w,c
  4796  003810  100C               	iorwf	___lodiv@divisor+1,w,c
  4797  003812  100D               	iorwf	___lodiv@divisor+2,w,c
  4798  003814  100E               	iorwf	___lodiv@divisor+3,w,c
  4799  003816  100F               	iorwf	___lodiv@divisor+4,w,c
  4800  003818  1010               	iorwf	___lodiv@divisor+5,w,c
  4801  00381A  1011               	iorwf	___lodiv@divisor+6,w,c
  4802  00381C  1012               	iorwf	___lodiv@divisor+7,w,c
  4803  00381E  B4D8               	btfsc	status,2,c
  4804  003820  D046               	goto	l927
  4805  003822  0E01               	movlw	1
  4806  003824  6E1B               	movwf	___lodiv@counter,c
  4807  003826  D00A               	goto	l3409
  4808  003828                     l3407:
  4809  003828  90D8               	bcf	status,0,c
  4810  00382A  360B               	rlcf	___lodiv@divisor,f,c
  4811  00382C  360C               	rlcf	___lodiv@divisor+1,f,c
  4812  00382E  360D               	rlcf	___lodiv@divisor+2,f,c
  4813  003830  360E               	rlcf	___lodiv@divisor+3,f,c
  4814  003832  360F               	rlcf	___lodiv@divisor+4,f,c
  4815  003834  3610               	rlcf	___lodiv@divisor+5,f,c
  4816  003836  3611               	rlcf	___lodiv@divisor+6,f,c
  4817  003838  3612               	rlcf	___lodiv@divisor+7,f,c
  4818  00383A  2A1B               	incf	___lodiv@counter,f,c
  4819  00383C                     l3409:
  4820  00383C  AE12               	btfss	___lodiv@divisor+7,7,c
  4821  00383E  D7F4               	goto	l3407
  4822  003840                     u3230:
  4823  003840  90D8               	bcf	status,0,c
  4824  003842  3613               	rlcf	___lodiv@quotient,f,c
  4825  003844  3614               	rlcf	___lodiv@quotient+1,f,c
  4826  003846  3615               	rlcf	___lodiv@quotient+2,f,c
  4827  003848  3616               	rlcf	___lodiv@quotient+3,f,c
  4828  00384A  3617               	rlcf	___lodiv@quotient+4,f,c
  4829  00384C  3618               	rlcf	___lodiv@quotient+5,f,c
  4830  00384E  3619               	rlcf	___lodiv@quotient+6,f,c
  4831  003850  361A               	rlcf	___lodiv@quotient+7,f,c
  4832  003852  500B               	movf	___lodiv@divisor,w,c
  4833  003854  5C03               	subwf	___lodiv@dividend,w,c
  4834  003856  500C               	movf	___lodiv@divisor+1,w,c
  4835  003858  5804               	subwfb	___lodiv@dividend+1,w,c
  4836  00385A  500D               	movf	___lodiv@divisor+2,w,c
  4837  00385C  5805               	subwfb	___lodiv@dividend+2,w,c
  4838  00385E  500E               	movf	___lodiv@divisor+3,w,c
  4839  003860  5806               	subwfb	___lodiv@dividend+3,w,c
  4840  003862  500F               	movf	___lodiv@divisor+4,w,c
  4841  003864  5807               	subwfb	___lodiv@dividend+4,w,c
  4842  003866  5010               	movf	___lodiv@divisor+5,w,c
  4843  003868  5808               	subwfb	___lodiv@dividend+5,w,c
  4844  00386A  5011               	movf	___lodiv@divisor+6,w,c
  4845  00386C  5809               	subwfb	___lodiv@dividend+6,w,c
  4846  00386E  5012               	movf	___lodiv@divisor+7,w,c
  4847  003870  580A               	subwfb	___lodiv@dividend+7,w,c
  4848  003872  A0D8               	btfss	status,0,c
  4849  003874  D011               	goto	l3419
  4850  003876  500B               	movf	___lodiv@divisor,w,c
  4851  003878  5E03               	subwf	___lodiv@dividend,f,c
  4852  00387A  500C               	movf	___lodiv@divisor+1,w,c
  4853  00387C  5A04               	subwfb	___lodiv@dividend+1,f,c
  4854  00387E  500D               	movf	___lodiv@divisor+2,w,c
  4855  003880  5A05               	subwfb	___lodiv@dividend+2,f,c
  4856  003882  500E               	movf	___lodiv@divisor+3,w,c
  4857  003884  5A06               	subwfb	___lodiv@dividend+3,f,c
  4858  003886  500F               	movf	___lodiv@divisor+4,w,c
  4859  003888  5A07               	subwfb	___lodiv@dividend+4,f,c
  4860  00388A  5010               	movf	___lodiv@divisor+5,w,c
  4861  00388C  5A08               	subwfb	___lodiv@dividend+5,f,c
  4862  00388E  5011               	movf	___lodiv@divisor+6,w,c
  4863  003890  5A09               	subwfb	___lodiv@dividend+6,f,c
  4864  003892  5012               	movf	___lodiv@divisor+7,w,c
  4865  003894  5A0A               	subwfb	___lodiv@dividend+7,f,c
  4866  003896  8013               	bsf	___lodiv@quotient,0,c
  4867  003898                     l3419:
  4868  003898  90D8               	bcf	status,0,c
  4869  00389A  3212               	rrcf	___lodiv@divisor+7,f,c
  4870  00389C  3211               	rrcf	___lodiv@divisor+6,f,c
  4871  00389E  3210               	rrcf	___lodiv@divisor+5,f,c
  4872  0038A0  320F               	rrcf	___lodiv@divisor+4,f,c
  4873  0038A2  320E               	rrcf	___lodiv@divisor+3,f,c
  4874  0038A4  320D               	rrcf	___lodiv@divisor+2,f,c
  4875  0038A6  320C               	rrcf	___lodiv@divisor+1,f,c
  4876  0038A8  320B               	rrcf	___lodiv@divisor,f,c
  4877  0038AA  2E1B               	decfsz	___lodiv@counter,f,c
  4878  0038AC  D7C9               	goto	u3230
  4879  0038AE                     l927:
  4880  0038AE  C013  F003         	movff	___lodiv@quotient,?___lodiv
  4881  0038B2  C014  F004         	movff	___lodiv@quotient+1,?___lodiv+1
  4882  0038B6  C015  F005         	movff	___lodiv@quotient+2,?___lodiv+2
  4883  0038BA  C016  F006         	movff	___lodiv@quotient+3,?___lodiv+3
  4884  0038BE  C017  F007         	movff	___lodiv@quotient+4,?___lodiv+4
  4885  0038C2  C018  F008         	movff	___lodiv@quotient+5,?___lodiv+5
  4886  0038C6  C019  F009         	movff	___lodiv@quotient+6,?___lodiv+6
  4887  0038CA  C01A  F00A         	movff	___lodiv@quotient+7,?___lodiv+7
  4888  0038CE  0012               	return		;funcret
  4889  0038D0                     __end_of___lodiv:
  4890                           	opt callstack 0
  4891                           
  4892 ;; *************** function _strncmp *****************
  4893 ;; Defined at:
  4894 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\strncmp.c"
  4895 ;; Parameters:    Size  Location     Type
  4896 ;;  _l              2    2[COMRAM] PTR const unsigned char 
  4897 ;;		 -> STR_101(3), STR_100(3), 
  4898 ;;  _r              2    4[COMRAM] PTR const unsigned char 
  4899 ;;		 -> STR_97(3), STR_93(3), STR_88(3), STR_84(3), 
  4900 ;;		 -> STR_79(4), STR_75(4), STR_70(3), STR_65(3), 
  4901 ;;		 -> STR_60(4), STR_55(3), STR_50(3), STR_45(4), 
  4902 ;;		 -> STR_40(3), STR_35(3), STR_30(4), STR_25(3), 
  4903 ;;		 -> STR_21(3), STR_16(3), STR_12(3), STR_7(4), 
  4904 ;;		 -> STR_3(4), 
  4905 ;;  n               2    6[COMRAM] unsigned int 
  4906 ;; Auto vars:     Size  Location     Type
  4907 ;;  r               2   11[COMRAM] PTR const unsigned char 
  4908 ;;		 -> STR_97(3), STR_93(3), STR_88(3), STR_84(3), 
  4909 ;;		 -> STR_79(4), STR_75(4), STR_70(3), STR_65(3), 
  4910 ;;		 -> STR_60(4), STR_55(3), STR_50(3), STR_45(4), 
  4911 ;;		 -> STR_40(3), STR_35(3), STR_30(4), STR_25(3), 
  4912 ;;		 -> STR_21(3), STR_16(3), STR_12(3), STR_7(4), 
  4913 ;;		 -> STR_3(4), 
  4914 ;;  l               2    9[COMRAM] PTR const unsigned char 
  4915 ;;		 -> STR_101(3), STR_100(3), 
  4916 ;; Return value:  Size  Location     Type
  4917 ;;                  2    2[COMRAM] int 
  4918 ;; Registers used:
  4919 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
  4920 ;; Tracked objects:
  4921 ;;		On entry : 0/0
  4922 ;;		On exit  : 0/0
  4923 ;;		Unchanged: 0/0
  4924 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4925 ;;      Params:         6       0       0       0       0       0       0       0       0
  4926 ;;      Locals:         4       0       0       0       0       0       0       0       0
  4927 ;;      Temps:          1       0       0       0       0       0       0       0       0
  4928 ;;      Totals:        11       0       0       0       0       0       0       0       0
  4929 ;;Total ram usage:       11 bytes
  4930 ;; Hardware stack levels used:    1
  4931 ;; Hardware stack levels required when called:    3
  4932 ;; This function calls:
  4933 ;;		Nothing
  4934 ;; This function is called by:
  4935 ;;		_vfpfcnvrt
  4936 ;; This function uses a non-reentrant model
  4937 ;;
  4938                           
  4939                           	psect	text15
  4940  003AEA                     __ptext15:
  4941                           	opt callstack 0
  4942  003AEA                     _strncmp:
  4943                           	opt callstack 21
  4944                           
  4945                           ;incstack = 0
  4946  003AEA  C003  F00A         	movff	strncmp@_l,strncmp@l
  4947  003AEE  C004  F00B         	movff	strncmp@_l+1,strncmp@l+1
  4948  003AF2  C005  F00C         	movff	strncmp@_r,strncmp@r
  4949  003AF6  C006  F00D         	movff	strncmp@_r+1,strncmp@r+1
  4950  003AFA  0607               	decf	strncmp@n,f,c
  4951  003AFC  A0D8               	btfss	status,0,c
  4952  003AFE  0608               	decf	strncmp@n+1,f,c
  4953  003B00  2807               	incf	strncmp@n,w,c
  4954  003B02  E10F               	bnz	l3769
  4955  003B04  2808               	incf	strncmp@n+1,w,c
  4956  003B06  A4D8               	btfss	status,2,c
  4957  003B08  D00C               	goto	l3769
  4958  003B0A  0E00               	movlw	0
  4959  003B0C  6E04               	movwf	?_strncmp+1,c
  4960  003B0E  0E00               	movlw	0
  4961  003B10  6E03               	movwf	?_strncmp,c
  4962  003B12  0012               	return	
  4963  003B14                     l3767:
  4964  003B14  4A0A               	infsnz	strncmp@l,f,c
  4965  003B16  2A0B               	incf	strncmp@l+1,f,c
  4966  003B18  4A0C               	infsnz	strncmp@r,f,c
  4967  003B1A  2A0D               	incf	strncmp@r+1,f,c
  4968  003B1C  0607               	decf	strncmp@n,f,c
  4969  003B1E  A0D8               	btfss	status,0,c
  4970  003B20  0608               	decf	strncmp@n+1,f,c
  4971  003B22                     l3769:
  4972  003B22  C00A  FFF6         	movff	strncmp@l,tblptrl
  4973  003B26  C00B  FFF7         	movff	strncmp@l+1,tblptrh
  4974  003B2A                     	if	0	;tblptru may be non-zero
  4975  003B2A                     	endif
  4976  003B2A                     	if	0	;tblptru may be non-zero
  4977  003B2A                     	endif
  4978  003B2A  0008               	tblrd		*
  4979  003B2C  50F5               	movf	tablat,w,c
  4980  003B2E  0900               	iorlw	0
  4981  003B30  B4D8               	btfsc	status,2,c
  4982  003B32  D01D               	goto	u4000
  4983  003B34  C00C  FFF6         	movff	strncmp@r,tblptrl
  4984  003B38  C00D  FFF7         	movff	strncmp@r+1,tblptrh
  4985  003B3C                     	if	0	;tblptru may be non-zero
  4986  003B3C                     	endif
  4987  003B3C                     	if	0	;tblptru may be non-zero
  4988  003B3C                     	endif
  4989  003B3C  0008               	tblrd		*
  4990  003B3E  50F5               	movf	tablat,w,c
  4991  003B40  0900               	iorlw	0
  4992  003B42  B4D8               	btfsc	status,2,c
  4993  003B44  D014               	goto	u4000
  4994  003B46  5007               	movf	strncmp@n,w,c
  4995  003B48  1008               	iorwf	strncmp@n+1,w,c
  4996  003B4A  B4D8               	btfsc	status,2,c
  4997  003B4C  D010               	goto	u4000
  4998  003B4E  C00A  FFF6         	movff	strncmp@l,tblptrl
  4999  003B52  C00B  FFF7         	movff	strncmp@l+1,tblptrh
  5000  003B56                     	if	0	;tblptru may be non-zero
  5001  003B56                     	endif
  5002  003B56                     	if	0	;tblptru may be non-zero
  5003  003B56                     	endif
  5004  003B56  0008               	tblrd		*
  5005  003B58  CFF5 F009          	movff	tablat,??_strncmp
  5006  003B5C  C00C  FFF6         	movff	strncmp@r,tblptrl
  5007  003B60  C00D  FFF7         	movff	strncmp@r+1,tblptrh
  5008  003B64                     	if	0	;tblptru may be non-zero
  5009  003B64                     	endif
  5010  003B64                     	if	0	;tblptru may be non-zero
  5011  003B64                     	endif
  5012  003B64  0008               	tblrd		*
  5013  003B66  50F5               	movf	tablat,w,c
  5014  003B68  1809               	xorwf	??_strncmp,w,c
  5015  003B6A  B4D8               	btfsc	status,2,c
  5016  003B6C  D7D3               	goto	l3767
  5017  003B6E                     u4000:
  5018  003B6E  C00A  FFF6         	movff	strncmp@l,tblptrl
  5019  003B72  C00B  FFF7         	movff	strncmp@l+1,tblptrh
  5020  003B76                     	if	0	;tblptru may be non-zero
  5021  003B76                     	endif
  5022  003B76                     	if	0	;tblptru may be non-zero
  5023  003B76                     	endif
  5024  003B76  0008               	tblrd		*
  5025  003B78  CFF5 F009          	movff	tablat,??_strncmp
  5026  003B7C  C00C  FFF6         	movff	strncmp@r,tblptrl
  5027  003B80  C00D  FFF7         	movff	strncmp@r+1,tblptrh
  5028  003B84                     	if	0	;tblptru may be non-zero
  5029  003B84                     	endif
  5030  003B84                     	if	0	;tblptru may be non-zero
  5031  003B84                     	endif
  5032  003B84  0008               	tblrd		*
  5033  003B86  50F5               	movf	tablat,w,c
  5034  003B88  5C09               	subwf	??_strncmp,w,c
  5035  003B8A  6E03               	movwf	?_strncmp,c
  5036  003B8C  6A04               	clrf	?_strncmp+1,c
  5037  003B8E  A0D8               	btfss	status,0,c
  5038  003B90  0604               	decf	?_strncmp+1,f,c
  5039  003B92  0012               	return		;funcret
  5040  003B94                     __end_of_strncmp:
  5041                           	opt callstack 0
  5042                           
  5043 ;; *************** function _stoa *****************
  5044 ;; Defined at:
  5045 ;;		line 546 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  5046 ;; Parameters:    Size  Location     Type
  5047 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
  5048 ;;		 -> vsnprintf@f(6), 
  5049 ;;  s               2   13[COMRAM] PTR unsigned char 
  5050 ;;		 -> ?_snprintf(2), 
  5051 ;; Auto vars:     Size  Location     Type
  5052 ;;  nuls            7   16[COMRAM] unsigned char [7]
  5053 ;;  l               2   31[COMRAM] int 
  5054 ;;  p               2   29[COMRAM] int 
  5055 ;;  cp              2   27[COMRAM] PTR unsigned char 
  5056 ;;		 -> ?_snprintf(2), stoa@nuls(7), 
  5057 ;;  w               2   25[COMRAM] int 
  5058 ;;  i               2   23[COMRAM] int 
  5059 ;; Return value:  Size  Location     Type
  5060 ;;                  2   11[COMRAM] int 
  5061 ;; Registers used:
  5062 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5063 ;; Tracked objects:
  5064 ;;		On entry : 0/0
  5065 ;;		On exit  : 0/0
  5066 ;;		Unchanged: 0/0
  5067 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5068 ;;      Params:         4       0       0       0       0       0       0       0       0
  5069 ;;      Locals:        17       0       0       0       0       0       0       0       0
  5070 ;;      Temps:          1       0       0       0       0       0       0       0       0
  5071 ;;      Totals:        22       0       0       0       0       0       0       0       0
  5072 ;;Total ram usage:       22 bytes
  5073 ;; Hardware stack levels used:    1
  5074 ;; Hardware stack levels required when called:    5
  5075 ;; This function calls:
  5076 ;;		_fputc
  5077 ;;		_strlen
  5078 ;; This function is called by:
  5079 ;;		_vfpfcnvrt
  5080 ;; This function uses a non-reentrant model
  5081 ;;
  5082                           
  5083                           	psect	text16
  5084  0032E2                     __ptext16:
  5085                           	opt callstack 0
  5086  0032E2                     _stoa:
  5087                           	opt callstack 19
  5088                           
  5089                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 546: static
      +                           int stoa(FILE *fp, char *s);C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\
      +                          common\doprnt.c: 547: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\commo
      +                          n\doprnt.c: 548:     char *cp, nuls[] = "(null)";
  5090                           
  5091                           ;incstack = 0
  5092  0032E2  EE21  F036         	lfsr	2,stoa@F1152
  5093  0032E6  EE10  F011         	lfsr	1,stoa@nuls
  5094  0032EA  0E06               	movlw	6
  5095  0032EC                     u3561:
  5096  0032EC  CFDB FFE3          	movff	plusw2,plusw1
  5097  0032F0  06E8               	decf	wreg,f,c
  5098  0032F2  E2FC               	bc	u3561
  5099                           
  5100                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 549:     in
      +                          t i, l, p, w;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c
      +                          : 552:     cp = s;
  5101  0032F4  C00E  F01C         	movff	stoa@s,stoa@cp
  5102  0032F8  C00F  F01D         	movff	stoa@s+1,stoa@cp+1
  5103                           
  5104                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 553:     if
      +                           (!cp) {
  5105  0032FC  501C               	movf	stoa@cp,w,c
  5106  0032FE  101D               	iorwf	stoa@cp+1,w,c
  5107  003300  A4D8               	btfss	status,2,c
  5108  003302  D004               	goto	l3583
  5109                           
  5110                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 554:       
      +                            cp = nuls;
  5111  003304  0E11               	movlw	low stoa@nuls
  5112  003306  6E1C               	movwf	stoa@cp,c
  5113  003308  0E00               	movlw	high stoa@nuls
  5114  00330A  6E1D               	movwf	stoa@cp+1,c
  5115  00330C                     l3583:
  5116                           
  5117                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 558:     l 
      +                          = strlen(cp);
  5118  00330C  C01C  F003         	movff	stoa@cp,strlen@s
  5119  003310  C01D  F004         	movff	stoa@cp+1,strlen@s+1
  5120  003314  EC99  F020         	call	_strlen	;wreg free
  5121  003318  C003  F020         	movff	?_strlen,stoa@l
  5122  00331C  C004  F021         	movff	?_strlen+1,stoa@l+1
  5123                           
  5124                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 559:     p 
      +                          = prec;
  5125  003320  C0F6  F01E         	movff	_prec,stoa@p
  5126  003324  C0F7  F01F         	movff	_prec+1,stoa@p+1
  5127                           
  5128                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 560:     l 
      +                          = (!(p < 0) && (p < l)) ? p : l;
  5129  003328  BE1F               	btfsc	stoa@p+1,7,c
  5130  00332A  D00E               	goto	l123
  5131  00332C  5020               	movf	stoa@l,w,c
  5132  00332E  5C1E               	subwf	stoa@p,w,c
  5133  003330  501F               	movf	stoa@p+1,w,c
  5134  003332  0A80               	xorlw	128
  5135  003334  6E10               	movwf	??_stoa& (0+255),c
  5136  003336  5021               	movf	stoa@l+1,w,c
  5137  003338  0A80               	xorlw	128
  5138  00333A  5810               	subwfb	??_stoa& (0+255),w,c
  5139  00333C  B0D8               	btfsc	status,0,c
  5140  00333E  D004               	goto	l123
  5141  003340  C01E  F020         	movff	stoa@p,stoa@l
  5142  003344  C01F  F021         	movff	stoa@p+1,stoa@l+1
  5143  003348                     l123:
  5144                           
  5145                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 561:     p 
      +                          = l;
  5146  003348  C020  F01E         	movff	stoa@l,stoa@p
  5147  00334C  C021  F01F         	movff	stoa@l+1,stoa@p+1
  5148                           
  5149                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 562:     w 
      +                          = width;
  5150  003350  C0F4  F01A         	movff	_width,stoa@w
  5151  003354  C0F5  F01B         	movff	_width+1,stoa@w+1
  5152                           
  5153                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 565:     if
      +                           (!(flags & (1 << 0))) {
  5154  003358  A05B               	btfss	_flags,0,c
  5155  00335A  D00D               	goto	l3597
  5156  00335C  D016               	goto	u3610
  5157  00335E                     l3593:
  5158                           
  5159                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 567:       
      +                                fputc(' ', fp);
  5160  00335E  0E00               	movlw	0
  5161  003360  6E04               	movwf	fputc@c+1,c
  5162  003362  0E20               	movlw	32
  5163  003364  6E03               	movwf	fputc@c,c
  5164  003366  C00C  F005         	movff	stoa@fp,fputc@fp
  5165  00336A  C00D  F006         	movff	stoa@fp+1,fputc@fp+1
  5166  00336E  ECCA  F01D         	call	_fputc	;wreg free
  5167                           
  5168                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 568:       
      +                                ++l;
  5169  003372  4A20               	infsnz	stoa@l,f,c
  5170  003374  2A21               	incf	stoa@l+1,f,c
  5171  003376                     l3597:
  5172                           
  5173                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 566:       
      +                            while (l < w) {
  5174  003376  501A               	movf	stoa@w,w,c
  5175  003378  5C20               	subwf	stoa@l,w,c
  5176  00337A  5021               	movf	stoa@l+1,w,c
  5177  00337C  0A80               	xorlw	128
  5178  00337E  6E10               	movwf	??_stoa& (0+255),c
  5179  003380  501B               	movf	stoa@w+1,w,c
  5180  003382  0A80               	xorlw	128
  5181  003384  5810               	subwfb	??_stoa& (0+255),w,c
  5182  003386  A0D8               	btfss	status,0,c
  5183  003388  D7EA               	goto	l3593
  5184  00338A                     u3610:
  5185                           
  5186                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 573:     i 
      +                          = 0;
  5187  00338A  0E00               	movlw	0
  5188  00338C  6E19               	movwf	stoa@i+1,c
  5189  00338E  0E00               	movlw	0
  5190  003390  6E18               	movwf	stoa@i,c
  5191                           
  5192                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 574:     wh
      +                          ile (i < p) {
  5193  003392  D013               	goto	l3607
  5194  003394                     l3601:
  5195                           
  5196                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 575:       
      +                            fputc(*cp, fp);
  5197  003394  C01C  FFD9         	movff	stoa@cp,fsr2l
  5198  003398  C01D  FFDA         	movff	stoa@cp+1,fsr2h
  5199  00339C  50DF               	movf	indf2,w,c
  5200  00339E  6E10               	movwf	??_stoa& (0+255),c
  5201  0033A0  5010               	movf	??_stoa,w,c
  5202  0033A2  6E03               	movwf	fputc@c,c
  5203  0033A4  6A04               	clrf	fputc@c+1,c
  5204  0033A6  C00C  F005         	movff	stoa@fp,fputc@fp
  5205  0033AA  C00D  F006         	movff	stoa@fp+1,fputc@fp+1
  5206  0033AE  ECCA  F01D         	call	_fputc	;wreg free
  5207                           
  5208                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 576:       
      +                            ++cp;
  5209  0033B2  4A1C               	infsnz	stoa@cp,f,c
  5210  0033B4  2A1D               	incf	stoa@cp+1,f,c
  5211                           
  5212                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 577:       
      +                            ++i;
  5213  0033B6  4A18               	infsnz	stoa@i,f,c
  5214  0033B8  2A19               	incf	stoa@i+1,f,c
  5215  0033BA                     l3607:
  5216                           
  5217                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 574:     wh
      +                          ile (i < p) {
  5218  0033BA  501E               	movf	stoa@p,w,c
  5219  0033BC  5C18               	subwf	stoa@i,w,c
  5220  0033BE  5019               	movf	stoa@i+1,w,c
  5221  0033C0  0A80               	xorlw	128
  5222  0033C2  6E10               	movwf	??_stoa& (0+255),c
  5223  0033C4  501F               	movf	stoa@p+1,w,c
  5224  0033C6  0A80               	xorlw	128
  5225  0033C8  5810               	subwfb	??_stoa& (0+255),w,c
  5226  0033CA  A0D8               	btfss	status,0,c
  5227  0033CC  D7E3               	goto	l3601
  5228                           
  5229                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 581:     if
      +                           (flags & (1 << 0)) {
  5230  0033CE  B05B               	btfsc	_flags,0,c
  5231  0033D0  D00D               	goto	l3615
  5232  0033D2  D016               	goto	u3640
  5233  0033D4                     l3611:
  5234                           
  5235                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 583:       
      +                                fputc(' ', fp);
  5236  0033D4  0E00               	movlw	0
  5237  0033D6  6E04               	movwf	fputc@c+1,c
  5238  0033D8  0E20               	movlw	32
  5239  0033DA  6E03               	movwf	fputc@c,c
  5240  0033DC  C00C  F005         	movff	stoa@fp,fputc@fp
  5241  0033E0  C00D  F006         	movff	stoa@fp+1,fputc@fp+1
  5242  0033E4  ECCA  F01D         	call	_fputc	;wreg free
  5243                           
  5244                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 584:       
      +                                ++l;
  5245  0033E8  4A20               	infsnz	stoa@l,f,c
  5246  0033EA  2A21               	incf	stoa@l+1,f,c
  5247  0033EC                     l3615:
  5248                           
  5249                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 582:       
      +                            while (l < w) {
  5250  0033EC  501A               	movf	stoa@w,w,c
  5251  0033EE  5C20               	subwf	stoa@l,w,c
  5252  0033F0  5021               	movf	stoa@l+1,w,c
  5253  0033F2  0A80               	xorlw	128
  5254  0033F4  6E10               	movwf	??_stoa& (0+255),c
  5255  0033F6  501B               	movf	stoa@w+1,w,c
  5256  0033F8  0A80               	xorlw	128
  5257  0033FA  5810               	subwfb	??_stoa& (0+255),w,c
  5258  0033FC  A0D8               	btfss	status,0,c
  5259  0033FE  D7EA               	goto	l3611
  5260  003400                     u3640:
  5261                           
  5262                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 588:     re
      +                          turn l;
  5263                           
  5264                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 586:     }
  5265  003400  C020  F00C         	movff	stoa@l,?_stoa
  5266  003404  C021  F00D         	movff	stoa@l+1,?_stoa+1
  5267  003408  0012               	return		;funcret
  5268  00340A                     __end_of_stoa:
  5269                           	opt callstack 0
  5270                           
  5271 ;; *************** function _otoa *****************
  5272 ;; Defined at:
  5273 ;;		line 507 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  5274 ;; Parameters:    Size  Location     Type
  5275 ;;  fp              2   29[COMRAM] PTR struct _IO_FILE
  5276 ;;		 -> vsnprintf@f(6), 
  5277 ;;  d               8   31[COMRAM] unsigned long long 
  5278 ;; Auto vars:     Size  Location     Type
  5279 ;;  n               8   53[COMRAM] unsigned long long 
  5280 ;;  i               2   61[COMRAM] int 
  5281 ;;  w               2   51[COMRAM] int 
  5282 ;;  t               2   49[COMRAM] int 
  5283 ;;  p               2   47[COMRAM] int 
  5284 ;; Return value:  Size  Location     Type
  5285 ;;                  2   29[COMRAM] int 
  5286 ;; Registers used:
  5287 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5288 ;; Tracked objects:
  5289 ;;		On entry : 0/0
  5290 ;;		On exit  : 0/0
  5291 ;;		Unchanged: 0/0
  5292 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5293 ;;      Params:        10       0       0       0       0       0       0       0       0
  5294 ;;      Locals:        16       0       0       0       0       0       0       0       0
  5295 ;;      Temps:          8       0       0       0       0       0       0       0       0
  5296 ;;      Totals:        34       0       0       0       0       0       0       0       0
  5297 ;;Total ram usage:       34 bytes
  5298 ;; Hardware stack levels used:    1
  5299 ;; Hardware stack levels required when called:    7
  5300 ;; This function calls:
  5301 ;;		_pad
  5302 ;; This function is called by:
  5303 ;;		_vfpfcnvrt
  5304 ;; This function uses a non-reentrant model
  5305 ;;
  5306                           
  5307                           	psect	text17
  5308  002D9A                     __ptext17:
  5309                           	opt callstack 0
  5310  002D9A                     _otoa:
  5311                           	opt callstack 17
  5312                           
  5313                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 507: static
      +                           int otoa(FILE *fp, unsigned long long d);C:\Program Files (x86)\Microchip\xc8\v2.05\pic
      +                          \sources\c99\common\doprnt.c: 508: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sour
      +                          ces\c99\common\doprnt.c: 509:     int i, p, t, w;;C:\Program Files (x86)\Microchip\xc8\v
      +                          2.05\pic\sources\c99\common\doprnt.c: 510:     unsigned long long n;;C:\Program Files (x
      +                          86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 513:     if (!(prec < 0)) {
  5314                           
  5315                           ;incstack = 0
  5316  002D9A  0100               	movlb	0	; () banked
  5317  002D9C  AFF7               	btfss	(_prec+1)& (0+255),7,b
  5318                           
  5319                           ; BSR set to: 0
  5320                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 514:       
      +                            flags &= ~(1 << 1);
  5321  002D9E  925B               	bcf	_flags,1,c
  5322                           
  5323                           ; BSR set to: 0
  5324                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 516:     p 
      +                          = (0 < prec) ? prec : 1;
  5325  002DA0  BFF7               	btfsc	(_prec+1)& (0+255),7,b
  5326  002DA2  D005               	goto	u3470
  5327  002DA4  51F7               	movf	(_prec+1)& (0+255),w,b
  5328  002DA6  E108               	bnz	l103
  5329  002DA8  05F6               	decf	_prec& (0+255),w,b
  5330  002DAA  B0D8               	btfsc	status,0,c
  5331  002DAC  D005               	goto	l103
  5332  002DAE                     u3470:
  5333                           
  5334                           ; BSR set to: 0
  5335  002DAE  0E00               	movlw	0
  5336  002DB0  6E31               	movwf	otoa@p+1,c
  5337  002DB2  0E01               	movlw	1
  5338  002DB4  6E30               	movwf	otoa@p,c
  5339  002DB6  D004               	goto	l105
  5340  002DB8                     l103:
  5341                           
  5342                           ; BSR set to: 0
  5343  002DB8  C0F6  F030         	movff	_prec,otoa@p
  5344  002DBC  C0F7  F031         	movff	_prec+1,otoa@p+1
  5345  002DC0                     l105:
  5346                           
  5347                           ; BSR set to: 0
  5348                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 517:     w 
      +                          = width;
  5349  002DC0  C0F4  F034         	movff	_width,otoa@w
  5350  002DC4  C0F5  F035         	movff	_width+1,otoa@w+1
  5351                           
  5352                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 520:     n 
      +                          = d;
  5353  002DC8  C020  F036         	movff	otoa@d,otoa@n
  5354  002DCC  C021  F037         	movff	otoa@d+1,otoa@n+1
  5355  002DD0  C022  F038         	movff	otoa@d+2,otoa@n+2
  5356  002DD4  C023  F039         	movff	otoa@d+3,otoa@n+3
  5357  002DD8  C024  F03A         	movff	otoa@d+4,otoa@n+4
  5358  002DDC  C025  F03B         	movff	otoa@d+5,otoa@n+5
  5359  002DE0  C026  F03C         	movff	otoa@d+6,otoa@n+6
  5360  002DE4  C027  F03D         	movff	otoa@d+7,otoa@n+7
  5361                           
  5362                           ; BSR set to: 0
  5363                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 521:     i 
      +                          = sizeof(dbuf) - 1;
  5364  002DE8  0E00               	movlw	0
  5365  002DEA  6E3F               	movwf	otoa@i+1,c
  5366  002DEC  0E1F               	movlw	31
  5367  002DEE  6E3E               	movwf	otoa@i,c
  5368                           
  5369                           ; BSR set to: 0
  5370                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 522:     db
      +                          uf[i] = '\0';
  5371  002DF0  0E00               	movlw	0
  5372  002DF2  0101               	movlb	1	; () banked
  5373  002DF4  6F2E               	movwf	(_dbuf+31)& (0+255),b
  5374                           
  5375                           ; BSR set to: 1
  5376                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 523:     t 
      +                          = 0;
  5377  002DF6  0E00               	movlw	0
  5378  002DF8  6E33               	movwf	otoa@t+1,c
  5379  002DFA  0E00               	movlw	0
  5380  002DFC  6E32               	movwf	otoa@t,c
  5381                           
  5382                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 524:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  5383  002DFE  D043               	goto	l3553
  5384  002E00                     l3541:
  5385                           
  5386                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 525:       
      +                            --i;
  5387  002E00  063E               	decf	otoa@i,f,c
  5388  002E02  A0D8               	btfss	status,0,c
  5389  002E04  063F               	decf	otoa@i+1,f,c
  5390                           
  5391                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 526:       
      +                            t = n & 07;
  5392  002E06  0E07               	movlw	7
  5393  002E08  1436               	andwf	otoa@n,w,c
  5394  002E0A  6E32               	movwf	otoa@t,c
  5395  002E0C  6A33               	clrf	otoa@t+1,c
  5396                           
  5397                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 527:       
      +                            dbuf[i] = '0' + t;
  5398  002E0E  0E0F               	movlw	low _dbuf
  5399  002E10  243E               	addwf	otoa@i,w,c
  5400  002E12  6ED9               	movwf	fsr2l,c
  5401  002E14  0E01               	movlw	high _dbuf
  5402  002E16  203F               	addwfc	otoa@i+1,w,c
  5403  002E18  6EDA               	movwf	fsr2h,c
  5404  002E1A  5032               	movf	otoa@t,w,c
  5405  002E1C  0F30               	addlw	48
  5406  002E1E  6EDF               	movwf	indf2,c
  5407                           
  5408                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 528:       
      +                            --p;
  5409  002E20  0630               	decf	otoa@p,f,c
  5410  002E22  A0D8               	btfss	status,0,c
  5411  002E24  0631               	decf	otoa@p+1,f,c
  5412                           
  5413                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 529:       
      +                            --w;
  5414  002E26  0634               	decf	otoa@w,f,c
  5415  002E28  A0D8               	btfss	status,0,c
  5416  002E2A  0635               	decf	otoa@w+1,f,c
  5417                           
  5418                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 530:       
      +                            n = n >> 3;
  5419  002E2C  C036  F028         	movff	otoa@n,??_otoa
  5420  002E30  C037  F029         	movff	otoa@n+1,??_otoa+1
  5421  002E34  C038  F02A         	movff	otoa@n+2,??_otoa+2
  5422  002E38  C039  F02B         	movff	otoa@n+3,??_otoa+3
  5423  002E3C  C03A  F02C         	movff	otoa@n+4,??_otoa+4
  5424  002E40  C03B  F02D         	movff	otoa@n+5,??_otoa+5
  5425  002E44  C03C  F02E         	movff	otoa@n+6,??_otoa+6
  5426  002E48  C03D  F02F         	movff	otoa@n+7,??_otoa+7
  5427  002E4C  0E04               	movlw	4
  5428  002E4E  D009               	goto	u3480
  5429  002E50                     u3485:
  5430  002E50  90D8               	bcf	status,0,c
  5431  002E52  322F               	rrcf	??_otoa+7,f,c
  5432  002E54  322E               	rrcf	??_otoa+6,f,c
  5433  002E56  322D               	rrcf	??_otoa+5,f,c
  5434  002E58  322C               	rrcf	??_otoa+4,f,c
  5435  002E5A  322B               	rrcf	??_otoa+3,f,c
  5436  002E5C  322A               	rrcf	??_otoa+2,f,c
  5437  002E5E  3229               	rrcf	??_otoa+1,f,c
  5438  002E60  3228               	rrcf	??_otoa,f,c
  5439  002E62                     u3480:
  5440  002E62  2EE8               	decfsz	wreg,f,c
  5441  002E64  D7F5               	goto	u3485
  5442  002E66  C028  F036         	movff	??_otoa,otoa@n
  5443  002E6A  C029  F037         	movff	??_otoa+1,otoa@n+1
  5444  002E6E  C02A  F038         	movff	??_otoa+2,otoa@n+2
  5445  002E72  C02B  F039         	movff	??_otoa+3,otoa@n+3
  5446  002E76  C02C  F03A         	movff	??_otoa+4,otoa@n+4
  5447  002E7A  C02D  F03B         	movff	??_otoa+5,otoa@n+5
  5448  002E7E  C02E  F03C         	movff	??_otoa+6,otoa@n+6
  5449  002E82  C02F  F03D         	movff	??_otoa+7,otoa@n+7
  5450  002E86                     l3553:
  5451                           
  5452                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 524:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  5453  002E86  BE3F               	btfsc	otoa@i+1,7,c
  5454  002E88  D01F               	goto	u3530
  5455  002E8A  503F               	movf	otoa@i+1,w,c
  5456  002E8C  E103               	bnz	u3490
  5457  002E8E  043E               	decf	otoa@i,w,c
  5458  002E90  A0D8               	btfss	status,0,c
  5459  002E92  D01A               	goto	u3530
  5460  002E94                     u3490:
  5461  002E94  5036               	movf	otoa@n,w,c
  5462  002E96  1037               	iorwf	otoa@n+1,w,c
  5463  002E98  1038               	iorwf	otoa@n+2,w,c
  5464  002E9A  1039               	iorwf	otoa@n+3,w,c
  5465  002E9C  103A               	iorwf	otoa@n+4,w,c
  5466  002E9E  103B               	iorwf	otoa@n+5,w,c
  5467  002EA0  103C               	iorwf	otoa@n+6,w,c
  5468  002EA2  103D               	iorwf	otoa@n+7,w,c
  5469  002EA4  A4D8               	btfss	status,2,c
  5470  002EA6  D7AC               	goto	l3541
  5471  002EA8  BE31               	btfsc	otoa@p+1,7,c
  5472  002EAA  D005               	goto	u3510
  5473  002EAC  5031               	movf	otoa@p+1,w,c
  5474  002EAE  E1A8               	bnz	l3541
  5475  002EB0  0430               	decf	otoa@p,w,c
  5476  002EB2  B0D8               	btfsc	status,0,c
  5477  002EB4  D7A5               	goto	l3541
  5478  002EB6                     u3510:
  5479  002EB6  BE35               	btfsc	otoa@w+1,7,c
  5480  002EB8  D007               	goto	u3530
  5481  002EBA  5035               	movf	otoa@w+1,w,c
  5482  002EBC  E103               	bnz	u3520
  5483  002EBE  0434               	decf	otoa@w,w,c
  5484  002EC0  A0D8               	btfss	status,0,c
  5485  002EC2  D002               	goto	u3530
  5486  002EC4                     u3520:
  5487  002EC4  B25B               	btfsc	_flags,1,c
  5488  002EC6  D79C               	goto	l3541
  5489  002EC8                     u3530:
  5490                           
  5491                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 534:     if
      +                           ((flags & (1 << 4)) && t) {
  5492  002EC8  A85B               	btfss	_flags,4,c
  5493  002ECA  D012               	goto	l3571
  5494  002ECC  5032               	movf	otoa@t,w,c
  5495  002ECE  1033               	iorwf	otoa@t+1,w,c
  5496  002ED0  B4D8               	btfsc	status,2,c
  5497  002ED2  D00E               	goto	l3571
  5498                           
  5499                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 535:       
      +                            --i;
  5500  002ED4  063E               	decf	otoa@i,f,c
  5501  002ED6  A0D8               	btfss	status,0,c
  5502  002ED8  063F               	decf	otoa@i+1,f,c
  5503                           
  5504                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 536:       
      +                            dbuf[i] = '0';
  5505  002EDA  0E0F               	movlw	low _dbuf
  5506  002EDC  243E               	addwf	otoa@i,w,c
  5507  002EDE  6ED9               	movwf	fsr2l,c
  5508  002EE0  0E01               	movlw	high _dbuf
  5509  002EE2  203F               	addwfc	otoa@i+1,w,c
  5510  002EE4  6EDA               	movwf	fsr2h,c
  5511  002EE6  0E30               	movlw	48
  5512  002EE8  6EDF               	movwf	indf2,c
  5513                           
  5514                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 537:       
      +                            --w;
  5515  002EEA  0634               	decf	otoa@w,f,c
  5516  002EEC  A0D8               	btfss	status,0,c
  5517  002EEE  0635               	decf	otoa@w+1,f,c
  5518  002EF0                     l3571:
  5519                           
  5520                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 541:     re
      +                          turn pad(fp, &dbuf[i], w);
  5521  002EF0  C01E  F013         	movff	otoa@fp,pad@fp
  5522  002EF4  C01F  F014         	movff	otoa@fp+1,pad@fp+1
  5523  002EF8  0E0F               	movlw	low _dbuf
  5524  002EFA  243E               	addwf	otoa@i,w,c
  5525  002EFC  6E15               	movwf	pad@buf,c
  5526  002EFE  0E01               	movlw	high _dbuf
  5527  002F00  203F               	addwfc	otoa@i+1,w,c
  5528  002F02  6E16               	movwf	pad@buf+1,c
  5529  002F04  C034  F017         	movff	otoa@w,pad@p
  5530  002F08  C035  F018         	movff	otoa@w+1,pad@p+1
  5531  002F0C  EC1A  F01E         	call	_pad	;wreg free
  5532  002F10  C013  F01E         	movff	?_pad,?_otoa
  5533  002F14  C014  F01F         	movff	?_pad+1,?_otoa+1
  5534  002F18  0012               	return		;funcret
  5535  002F1A                     __end_of_otoa:
  5536                           	opt callstack 0
  5537                           
  5538 ;; *************** function _dtoa *****************
  5539 ;; Defined at:
  5540 ;;		line 274 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  5541 ;; Parameters:    Size  Location     Type
  5542 ;;  fp              2   29[COMRAM] PTR struct _IO_FILE
  5543 ;;		 -> vsnprintf@f(6), 
  5544 ;;  d               8   31[COMRAM] long long 
  5545 ;; Auto vars:     Size  Location     Type
  5546 ;;  n               8   55[COMRAM] long long 
  5547 ;;  i               2   63[COMRAM] int 
  5548 ;;  s               2   53[COMRAM] int 
  5549 ;;  w               2   51[COMRAM] int 
  5550 ;;  p               2   49[COMRAM] int 
  5551 ;; Return value:  Size  Location     Type
  5552 ;;                  2   29[COMRAM] int 
  5553 ;; Registers used:
  5554 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5555 ;; Tracked objects:
  5556 ;;		On entry : 0/0
  5557 ;;		On exit  : 0/0
  5558 ;;		Unchanged: 0/0
  5559 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5560 ;;      Params:        10       0       0       0       0       0       0       0       0
  5561 ;;      Locals:        18       0       0       0       0       0       0       0       0
  5562 ;;      Temps:          8       0       0       0       0       0       0       0       0
  5563 ;;      Totals:        36       0       0       0       0       0       0       0       0
  5564 ;;Total ram usage:       36 bytes
  5565 ;; Hardware stack levels used:    1
  5566 ;; Hardware stack levels required when called:    7
  5567 ;; This function calls:
  5568 ;;		___aodiv
  5569 ;;		___aomod
  5570 ;;		_abs
  5571 ;;		_pad
  5572 ;; This function is called by:
  5573 ;;		_vfpfcnvrt
  5574 ;; This function uses a non-reentrant model
  5575 ;;
  5576                           
  5577                           	psect	text18
  5578  0025B8                     __ptext18:
  5579                           	opt callstack 0
  5580  0025B8                     _dtoa:
  5581                           	opt callstack 17
  5582                           
  5583                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 274: static
      +                           int dtoa(FILE *fp, long long d);C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\
      +                          c99\common\doprnt.c: 275: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\c
      +                          ommon\doprnt.c: 276:     int i, p, s, w;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\
      +                          sources\c99\common\doprnt.c: 277:     long long n;;C:\Program Files (x86)\Microchip\xc8\
      +                          v2.05\pic\sources\c99\common\doprnt.c: 280:     n = d;
  5584                           
  5585                           ;incstack = 0
  5586  0025B8  C020  F038         	movff	dtoa@d,dtoa@n
  5587  0025BC  C021  F039         	movff	dtoa@d+1,dtoa@n+1
  5588  0025C0  C022  F03A         	movff	dtoa@d+2,dtoa@n+2
  5589  0025C4  C023  F03B         	movff	dtoa@d+3,dtoa@n+3
  5590  0025C8  C024  F03C         	movff	dtoa@d+4,dtoa@n+4
  5591  0025CC  C025  F03D         	movff	dtoa@d+5,dtoa@n+5
  5592  0025D0  C026  F03E         	movff	dtoa@d+6,dtoa@n+6
  5593  0025D4  C027  F03F         	movff	dtoa@d+7,dtoa@n+7
  5594                           
  5595                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 281:     s 
      +                          = n < 0 ? 1 : 0;
  5596  0025D8  AE3F               	btfss	dtoa@n+7,7,c
  5597  0025DA  D002               	goto	u3310
  5598  0025DC  0E01               	movlw	1
  5599  0025DE  D001               	goto	u3320
  5600  0025E0                     u3310:
  5601  0025E0  0E00               	movlw	0
  5602  0025E2                     u3320:
  5603  0025E2  6E36               	movwf	dtoa@s,c
  5604  0025E4  6A37               	clrf	dtoa@s+1,c
  5605                           
  5606                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 282:     if
      +                           (s) {
  5607  0025E6  5036               	movf	dtoa@s,w,c
  5608  0025E8  1037               	iorwf	dtoa@s+1,w,c
  5609  0025EA  B4D8               	btfsc	status,2,c
  5610  0025EC  D010               	goto	l3471
  5611                           
  5612                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 283:       
      +                            n = -n;
  5613  0025EE  1E3F               	comf	dtoa@n+7,f,c
  5614  0025F0  1E3E               	comf	dtoa@n+6,f,c
  5615  0025F2  1E3D               	comf	dtoa@n+5,f,c
  5616  0025F4  1E3C               	comf	dtoa@n+4,f,c
  5617  0025F6  1E3B               	comf	dtoa@n+3,f,c
  5618  0025F8  1E3A               	comf	dtoa@n+2,f,c
  5619  0025FA  1E39               	comf	dtoa@n+1,f,c
  5620  0025FC  6C38               	negf	dtoa@n,c
  5621  0025FE  0E00               	movlw	0
  5622  002600  2239               	addwfc	dtoa@n+1,f,c
  5623  002602  223A               	addwfc	dtoa@n+2,f,c
  5624  002604  223B               	addwfc	dtoa@n+3,f,c
  5625  002606  223C               	addwfc	dtoa@n+4,f,c
  5626  002608  223D               	addwfc	dtoa@n+5,f,c
  5627  00260A  223E               	addwfc	dtoa@n+6,f,c
  5628  00260C  223F               	addwfc	dtoa@n+7,f,c
  5629  00260E                     l3471:
  5630                           
  5631                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 287:     if
      +                           (!(prec < 0)) {
  5632  00260E  0100               	movlb	0	; () banked
  5633  002610  AFF7               	btfss	(_prec+1)& (0+255),7,b
  5634                           
  5635                           ; BSR set to: 0
  5636                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 288:       
      +                            flags &= ~(1 << 1);
  5637  002612  925B               	bcf	_flags,1,c
  5638                           
  5639                           ; BSR set to: 0
  5640                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 290:     p 
      +                          = (0 < prec) ? prec : 1;
  5641  002614  BFF7               	btfsc	(_prec+1)& (0+255),7,b
  5642  002616  D005               	goto	u3350
  5643  002618  51F7               	movf	(_prec+1)& (0+255),w,b
  5644  00261A  E108               	bnz	l78
  5645  00261C  05F6               	decf	_prec& (0+255),w,b
  5646  00261E  B0D8               	btfsc	status,0,c
  5647  002620  D005               	goto	l78
  5648  002622                     u3350:
  5649                           
  5650                           ; BSR set to: 0
  5651  002622  0E00               	movlw	0
  5652  002624  6E33               	movwf	dtoa@p+1,c
  5653  002626  0E01               	movlw	1
  5654  002628  6E32               	movwf	dtoa@p,c
  5655  00262A  D004               	goto	l80
  5656  00262C                     l78:
  5657                           
  5658                           ; BSR set to: 0
  5659  00262C  C0F6  F032         	movff	_prec,dtoa@p
  5660  002630  C0F7  F033         	movff	_prec+1,dtoa@p+1
  5661  002634                     l80:
  5662                           
  5663                           ; BSR set to: 0
  5664                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 291:     w 
      +                          = width;
  5665  002634  C0F4  F034         	movff	_width,dtoa@w
  5666  002638  C0F5  F035         	movff	_width+1,dtoa@w+1
  5667                           
  5668                           ; BSR set to: 0
  5669                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 292:     if
      +                           (s || (flags & (1 << 2))) {
  5670  00263C  5036               	movf	dtoa@s,w,c
  5671  00263E  1037               	iorwf	dtoa@s+1,w,c
  5672  002640  A4D8               	btfss	status,2,c
  5673  002642  D002               	goto	u3370
  5674                           
  5675                           ; BSR set to: 0
  5676  002644  A45B               	btfss	_flags,2,c
  5677  002646  D003               	goto	l3485
  5678  002648                     u3370:
  5679                           
  5680                           ; BSR set to: 0
  5681                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 293:       
      +                            --w;
  5682  002648  0634               	decf	dtoa@w,f,c
  5683  00264A  A0D8               	btfss	status,0,c
  5684  00264C  0635               	decf	dtoa@w+1,f,c
  5685  00264E                     l3485:
  5686                           
  5687                           ; BSR set to: 0
  5688                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 297:     i 
      +                          = sizeof(dbuf) - 1;
  5689  00264E  0E00               	movlw	0
  5690  002650  6E41               	movwf	dtoa@i+1,c
  5691  002652  0E1F               	movlw	31
  5692  002654  6E40               	movwf	dtoa@i,c
  5693                           
  5694                           ; BSR set to: 0
  5695                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 298:     db
      +                          uf[i] = '\0';
  5696  002656  0E00               	movlw	0
  5697  002658  0101               	movlb	1	; () banked
  5698  00265A  6F2E               	movwf	(_dbuf+31)& (0+255),b
  5699                           
  5700                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  5701  00265C  D07C               	goto	l3499
  5702  00265E                     l3489:
  5703                           
  5704                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 300:       
      +                            --i;
  5705  00265E  0640               	decf	dtoa@i,f,c
  5706  002660  A0D8               	btfss	status,0,c
  5707  002662  0641               	decf	dtoa@i+1,f,c
  5708                           
  5709                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 301:       
      +                            dbuf[i] = '0' + abs(n % 10);
  5710  002664  0E0F               	movlw	low _dbuf
  5711  002666  2440               	addwf	dtoa@i,w,c
  5712  002668  6ED9               	movwf	fsr2l,c
  5713  00266A  0E01               	movlw	high _dbuf
  5714  00266C  2041               	addwfc	dtoa@i+1,w,c
  5715  00266E  6EDA               	movwf	fsr2h,c
  5716  002670  C038  F003         	movff	dtoa@n,___aomod@dividend
  5717  002674  C039  F004         	movff	dtoa@n+1,___aomod@dividend+1
  5718  002678  C03A  F005         	movff	dtoa@n+2,___aomod@dividend+2
  5719  00267C  C03B  F006         	movff	dtoa@n+3,___aomod@dividend+3
  5720  002680  C03C  F007         	movff	dtoa@n+4,___aomod@dividend+4
  5721  002684  C03D  F008         	movff	dtoa@n+5,___aomod@dividend+5
  5722  002688  C03E  F009         	movff	dtoa@n+6,___aomod@dividend+6
  5723  00268C  C03F  F00A         	movff	dtoa@n+7,___aomod@dividend+7
  5724  002690  0E0A               	movlw	10
  5725  002692  6E0B               	movwf	___aomod@divisor,c
  5726  002694  0E00               	movlw	0
  5727  002696  6E0C               	movwf	___aomod@divisor+1,c
  5728  002698  0E00               	movlw	0
  5729  00269A  6E0D               	movwf	___aomod@divisor+2,c
  5730  00269C  0E00               	movlw	0
  5731  00269E  6E0E               	movwf	___aomod@divisor+3,c
  5732  0026A0  0E00               	movlw	0
  5733  0026A2  6E0F               	movwf	___aomod@divisor+4,c
  5734  0026A4  0E00               	movlw	0
  5735  0026A6  6E10               	movwf	___aomod@divisor+5,c
  5736  0026A8  0E00               	movlw	0
  5737  0026AA  6E11               	movwf	___aomod@divisor+6,c
  5738  0026AC  0E00               	movlw	0
  5739  0026AE  6E12               	movwf	___aomod@divisor+7,c
  5740  0026B0  EC05  F01A         	call	___aomod	;wreg free
  5741  0026B4  C003  F028         	movff	?___aomod,??_dtoa
  5742  0026B8  C004  F029         	movff	?___aomod+1,??_dtoa+1
  5743  0026BC  C005  F02A         	movff	?___aomod+2,??_dtoa+2
  5744  0026C0  C006  F02B         	movff	?___aomod+3,??_dtoa+3
  5745  0026C4  C007  F02C         	movff	?___aomod+4,??_dtoa+4
  5746  0026C8  C008  F02D         	movff	?___aomod+5,??_dtoa+5
  5747  0026CC  C009  F02E         	movff	?___aomod+6,??_dtoa+6
  5748  0026D0  C00A  F02F         	movff	?___aomod+7,??_dtoa+7
  5749  0026D4  C028  F015         	movff	??_dtoa,abs@a
  5750  0026D8  C02A  F016         	movff	??_dtoa+2,abs@a+1
  5751  0026DC  EC08  F020         	call	_abs	;wreg free
  5752  0026E0  5015               	movf	?_abs,w,c
  5753  0026E2  0F30               	addlw	48
  5754  0026E4  6EDF               	movwf	indf2,c
  5755                           
  5756                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 302:       
      +                            --p;
  5757  0026E6  0632               	decf	dtoa@p,f,c
  5758  0026E8  A0D8               	btfss	status,0,c
  5759  0026EA  0633               	decf	dtoa@p+1,f,c
  5760                           
  5761                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 303:       
      +                            --w;
  5762  0026EC  0634               	decf	dtoa@w,f,c
  5763  0026EE  A0D8               	btfss	status,0,c
  5764  0026F0  0635               	decf	dtoa@w+1,f,c
  5765                           
  5766                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 304:       
      +                            n = n / 10;
  5767  0026F2  C038  F003         	movff	dtoa@n,___aodiv@dividend
  5768  0026F6  C039  F004         	movff	dtoa@n+1,___aodiv@dividend+1
  5769  0026FA  C03A  F005         	movff	dtoa@n+2,___aodiv@dividend+2
  5770  0026FE  C03B  F006         	movff	dtoa@n+3,___aodiv@dividend+3
  5771  002702  C03C  F007         	movff	dtoa@n+4,___aodiv@dividend+4
  5772  002706  C03D  F008         	movff	dtoa@n+5,___aodiv@dividend+5
  5773  00270A  C03E  F009         	movff	dtoa@n+6,___aodiv@dividend+6
  5774  00270E  C03F  F00A         	movff	dtoa@n+7,___aodiv@dividend+7
  5775  002712  0E0A               	movlw	10
  5776  002714  6E0B               	movwf	___aodiv@divisor,c
  5777  002716  0E00               	movlw	0
  5778  002718  6E0C               	movwf	___aodiv@divisor+1,c
  5779  00271A  0E00               	movlw	0
  5780  00271C  6E0D               	movwf	___aodiv@divisor+2,c
  5781  00271E  0E00               	movlw	0
  5782  002720  6E0E               	movwf	___aodiv@divisor+3,c
  5783  002722  0E00               	movlw	0
  5784  002724  6E0F               	movwf	___aodiv@divisor+4,c
  5785  002726  0E00               	movlw	0
  5786  002728  6E10               	movwf	___aodiv@divisor+5,c
  5787  00272A  0E00               	movlw	0
  5788  00272C  6E11               	movwf	___aodiv@divisor+6,c
  5789  00272E  0E00               	movlw	0
  5790  002730  6E12               	movwf	___aodiv@divisor+7,c
  5791  002732  EC8D  F017         	call	___aodiv	;wreg free
  5792  002736  C003  F038         	movff	?___aodiv,dtoa@n
  5793  00273A  C004  F039         	movff	?___aodiv+1,dtoa@n+1
  5794  00273E  C005  F03A         	movff	?___aodiv+2,dtoa@n+2
  5795  002742  C006  F03B         	movff	?___aodiv+3,dtoa@n+3
  5796  002746  C007  F03C         	movff	?___aodiv+4,dtoa@n+4
  5797  00274A  C008  F03D         	movff	?___aodiv+5,dtoa@n+5
  5798  00274E  C009  F03E         	movff	?___aodiv+6,dtoa@n+6
  5799  002752  C00A  F03F         	movff	?___aodiv+7,dtoa@n+7
  5800  002756                     l3499:
  5801                           
  5802                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  5803  002756  BE41               	btfsc	dtoa@i+1,7,c
  5804  002758  D01F               	goto	u3420
  5805  00275A  5041               	movf	dtoa@i+1,w,c
  5806  00275C  E103               	bnz	u3380
  5807  00275E  0440               	decf	dtoa@i,w,c
  5808  002760  A0D8               	btfss	status,0,c
  5809  002762  D01A               	goto	u3420
  5810  002764                     u3380:
  5811  002764  5038               	movf	dtoa@n,w,c
  5812  002766  1039               	iorwf	dtoa@n+1,w,c
  5813  002768  103A               	iorwf	dtoa@n+2,w,c
  5814  00276A  103B               	iorwf	dtoa@n+3,w,c
  5815  00276C  103C               	iorwf	dtoa@n+4,w,c
  5816  00276E  103D               	iorwf	dtoa@n+5,w,c
  5817  002770  103E               	iorwf	dtoa@n+6,w,c
  5818  002772  103F               	iorwf	dtoa@n+7,w,c
  5819  002774  A4D8               	btfss	status,2,c
  5820  002776  D773               	goto	l3489
  5821  002778  BE33               	btfsc	dtoa@p+1,7,c
  5822  00277A  D005               	goto	u3400
  5823  00277C  5033               	movf	dtoa@p+1,w,c
  5824  00277E  E102               	bnz	u3401
  5825  002780  0432               	decf	dtoa@p,w,c
  5826  002782  B0D8               	btfsc	status,0,c
  5827  002784                     u3401:
  5828  002784  D76C               	goto	l3489
  5829  002786                     u3400:
  5830  002786  BE35               	btfsc	dtoa@w+1,7,c
  5831  002788  D007               	goto	u3420
  5832  00278A  5035               	movf	dtoa@w+1,w,c
  5833  00278C  E103               	bnz	u3410
  5834  00278E  0434               	decf	dtoa@w,w,c
  5835  002790  A0D8               	btfss	status,0,c
  5836  002792  D002               	goto	u3420
  5837  002794                     u3410:
  5838  002794  B25B               	btfsc	_flags,1,c
  5839  002796  D763               	goto	l3489
  5840  002798                     u3420:
  5841                           
  5842                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 308:     if
      +                           (s || (flags & (1 << 2))) {
  5843  002798  5036               	movf	dtoa@s,w,c
  5844  00279A  1037               	iorwf	dtoa@s+1,w,c
  5845  00279C  A4D8               	btfss	status,2,c
  5846  00279E  D002               	goto	u3440
  5847  0027A0  A45B               	btfss	_flags,2,c
  5848  0027A2  D017               	goto	l3523
  5849  0027A4                     u3440:
  5850                           
  5851                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 309:       
      +                            --i;
  5852  0027A4  0640               	decf	dtoa@i,f,c
  5853  0027A6  A0D8               	btfss	status,0,c
  5854  0027A8  0641               	decf	dtoa@i+1,f,c
  5855                           
  5856                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 310:       
      +                            dbuf[i] = s ? '-' : '+';
  5857  0027AA  5036               	movf	dtoa@s,w,c
  5858  0027AC  1037               	iorwf	dtoa@s+1,w,c
  5859  0027AE  A4D8               	btfss	status,2,c
  5860  0027B0  D004               	goto	l3519
  5861  0027B2  0E00               	movlw	0
  5862  0027B4  6E31               	movwf	_dtoa$147+1,c
  5863  0027B6  0E2B               	movlw	43
  5864  0027B8  D003               	goto	L17
  5865  0027BA                     l3519:
  5866  0027BA  0E00               	movlw	0
  5867  0027BC  6E31               	movwf	_dtoa$147+1,c
  5868  0027BE  0E2D               	movlw	45
  5869  0027C0                     L17:
  5870  0027C0  6E30               	movwf	_dtoa$147,c
  5871  0027C2  0E0F               	movlw	low _dbuf
  5872  0027C4  2440               	addwf	dtoa@i,w,c
  5873  0027C6  6ED9               	movwf	fsr2l,c
  5874  0027C8  0E01               	movlw	high _dbuf
  5875  0027CA  2041               	addwfc	dtoa@i+1,w,c
  5876  0027CC  6EDA               	movwf	fsr2h,c
  5877  0027CE  C030  FFDF         	movff	_dtoa$147,indf2
  5878  0027D2                     l3523:
  5879                           
  5880                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 314:     re
      +                          turn pad(fp, &dbuf[i], w);
  5881  0027D2  C01E  F013         	movff	dtoa@fp,pad@fp
  5882  0027D6  C01F  F014         	movff	dtoa@fp+1,pad@fp+1
  5883  0027DA  0E0F               	movlw	low _dbuf
  5884  0027DC  2440               	addwf	dtoa@i,w,c
  5885  0027DE  6E15               	movwf	pad@buf,c
  5886  0027E0  0E01               	movlw	high _dbuf
  5887  0027E2  2041               	addwfc	dtoa@i+1,w,c
  5888  0027E4  6E16               	movwf	pad@buf+1,c
  5889  0027E6  C034  F017         	movff	dtoa@w,pad@p
  5890  0027EA  C035  F018         	movff	dtoa@w+1,pad@p+1
  5891  0027EE  EC1A  F01E         	call	_pad	;wreg free
  5892  0027F2  C013  F01E         	movff	?_pad,?_dtoa
  5893  0027F6  C014  F01F         	movff	?_pad+1,?_dtoa+1
  5894  0027FA  0012               	return		;funcret
  5895  0027FC                     __end_of_dtoa:
  5896                           	opt callstack 0
  5897                           
  5898 ;; *************** function _abs *****************
  5899 ;; Defined at:
  5900 ;;		line 1 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\abs.c"
  5901 ;; Parameters:    Size  Location     Type
  5902 ;;  a               2   20[COMRAM] int 
  5903 ;; Auto vars:     Size  Location     Type
  5904 ;;		None
  5905 ;; Return value:  Size  Location     Type
  5906 ;;                  2   20[COMRAM] int 
  5907 ;; Registers used:
  5908 ;;		wreg, status,2, status,0
  5909 ;; Tracked objects:
  5910 ;;		On entry : 0/0
  5911 ;;		On exit  : 0/0
  5912 ;;		Unchanged: 0/0
  5913 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5914 ;;      Params:         2       0       0       0       0       0       0       0       0
  5915 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5916 ;;      Temps:          2       0       0       0       0       0       0       0       0
  5917 ;;      Totals:         4       0       0       0       0       0       0       0       0
  5918 ;;Total ram usage:        4 bytes
  5919 ;; Hardware stack levels used:    1
  5920 ;; Hardware stack levels required when called:    3
  5921 ;; This function calls:
  5922 ;;		Nothing
  5923 ;; This function is called by:
  5924 ;;		_dtoa
  5925 ;; This function uses a non-reentrant model
  5926 ;;
  5927                           
  5928                           	psect	text19
  5929  004010                     __ptext19:
  5930                           	opt callstack 0
  5931  004010                     _abs:
  5932                           	opt callstack 20
  5933                           
  5934                           ;incstack = 0
  5935  004010  BE16               	btfsc	abs@a+1,7,c
  5936  004012  D005               	goto	u2980
  5937  004014  5016               	movf	abs@a+1,w,c
  5938  004016  E110               	bnz	l1164
  5939  004018  0415               	decf	abs@a,w,c
  5940  00401A  B0D8               	btfsc	status,0,c
  5941  00401C  D00D               	goto	l1164
  5942  00401E                     u2980:
  5943  00401E  C015  F017         	movff	abs@a,??_abs
  5944  004022  C016  F018         	movff	abs@a+1,??_abs+1
  5945  004026  1E17               	comf	??_abs,f,c
  5946  004028  1E18               	comf	??_abs+1,f,c
  5947  00402A  4A17               	infsnz	??_abs,f,c
  5948  00402C  2A18               	incf	??_abs+1,f,c
  5949  00402E  C017  F015         	movff	??_abs,?_abs
  5950  004032  C018  F016         	movff	??_abs+1,?_abs+1
  5951  004036  0012               	return	
  5952  004038                     l1164:
  5953  004038  C015  F015         	movff	abs@a,?_abs
  5954  00403C  C016  F016         	movff	abs@a+1,?_abs+1
  5955  004040  0012               	return		;funcret
  5956  004042                     __end_of_abs:
  5957                           	opt callstack 0
  5958                           
  5959 ;; *************** function ___aomod *****************
  5960 ;; Defined at:
  5961 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\aomod.c"
  5962 ;; Parameters:    Size  Location     Type
  5963 ;;  dividend        8    2[COMRAM] long long 
  5964 ;;  divisor         8   10[COMRAM] long long 
  5965 ;; Auto vars:     Size  Location     Type
  5966 ;;  sign            1   19[COMRAM] unsigned char 
  5967 ;;  counter         1   18[COMRAM] unsigned char 
  5968 ;; Return value:  Size  Location     Type
  5969 ;;                  8    2[COMRAM] long long 
  5970 ;; Registers used:
  5971 ;;		wreg, status,2, status,0
  5972 ;; Tracked objects:
  5973 ;;		On entry : 0/0
  5974 ;;		On exit  : 0/0
  5975 ;;		Unchanged: 0/0
  5976 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5977 ;;      Params:        16       0       0       0       0       0       0       0       0
  5978 ;;      Locals:         2       0       0       0       0       0       0       0       0
  5979 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5980 ;;      Totals:        18       0       0       0       0       0       0       0       0
  5981 ;;Total ram usage:       18 bytes
  5982 ;; Hardware stack levels used:    1
  5983 ;; Hardware stack levels required when called:    3
  5984 ;; This function calls:
  5985 ;;		Nothing
  5986 ;; This function is called by:
  5987 ;;		_dtoa
  5988 ;; This function uses a non-reentrant model
  5989 ;;
  5990                           
  5991                           	psect	text20
  5992  00340A                     __ptext20:
  5993                           	opt callstack 0
  5994  00340A                     ___aomod:
  5995                           	opt callstack 20
  5996                           
  5997                           ;incstack = 0
  5998  00340A  0E00               	movlw	0
  5999  00340C  6E14               	movwf	___aomod@sign,c
  6000  00340E  AE0A               	btfss	___aomod@dividend+7,7,c
  6001  003410  D012               	goto	l3373
  6002  003412  1E0A               	comf	___aomod@dividend+7,f,c
  6003  003414  1E09               	comf	___aomod@dividend+6,f,c
  6004  003416  1E08               	comf	___aomod@dividend+5,f,c
  6005  003418  1E07               	comf	___aomod@dividend+4,f,c
  6006  00341A  1E06               	comf	___aomod@dividend+3,f,c
  6007  00341C  1E05               	comf	___aomod@dividend+2,f,c
  6008  00341E  1E04               	comf	___aomod@dividend+1,f,c
  6009  003420  6C03               	negf	___aomod@dividend,c
  6010  003422  0E00               	movlw	0
  6011  003424  2204               	addwfc	___aomod@dividend+1,f,c
  6012  003426  2205               	addwfc	___aomod@dividend+2,f,c
  6013  003428  2206               	addwfc	___aomod@dividend+3,f,c
  6014  00342A  2207               	addwfc	___aomod@dividend+4,f,c
  6015  00342C  2208               	addwfc	___aomod@dividend+5,f,c
  6016  00342E  2209               	addwfc	___aomod@dividend+6,f,c
  6017  003430  220A               	addwfc	___aomod@dividend+7,f,c
  6018  003432  0E01               	movlw	1
  6019  003434  6E14               	movwf	___aomod@sign,c
  6020  003436                     l3373:
  6021  003436  AE12               	btfss	___aomod@divisor+7,7,c
  6022  003438  D010               	goto	l3377
  6023  00343A  1E12               	comf	___aomod@divisor+7,f,c
  6024  00343C  1E11               	comf	___aomod@divisor+6,f,c
  6025  00343E  1E10               	comf	___aomod@divisor+5,f,c
  6026  003440  1E0F               	comf	___aomod@divisor+4,f,c
  6027  003442  1E0E               	comf	___aomod@divisor+3,f,c
  6028  003444  1E0D               	comf	___aomod@divisor+2,f,c
  6029  003446  1E0C               	comf	___aomod@divisor+1,f,c
  6030  003448  6C0B               	negf	___aomod@divisor,c
  6031  00344A  0E00               	movlw	0
  6032  00344C  220C               	addwfc	___aomod@divisor+1,f,c
  6033  00344E  220D               	addwfc	___aomod@divisor+2,f,c
  6034  003450  220E               	addwfc	___aomod@divisor+3,f,c
  6035  003452  220F               	addwfc	___aomod@divisor+4,f,c
  6036  003454  2210               	addwfc	___aomod@divisor+5,f,c
  6037  003456  2211               	addwfc	___aomod@divisor+6,f,c
  6038  003458  2212               	addwfc	___aomod@divisor+7,f,c
  6039  00345A                     l3377:
  6040  00345A  500B               	movf	___aomod@divisor,w,c
  6041  00345C  100C               	iorwf	___aomod@divisor+1,w,c
  6042  00345E  100D               	iorwf	___aomod@divisor+2,w,c
  6043  003460  100E               	iorwf	___aomod@divisor+3,w,c
  6044  003462  100F               	iorwf	___aomod@divisor+4,w,c
  6045  003464  1010               	iorwf	___aomod@divisor+5,w,c
  6046  003466  1011               	iorwf	___aomod@divisor+6,w,c
  6047  003468  1012               	iorwf	___aomod@divisor+7,w,c
  6048  00346A  B4D8               	btfsc	status,2,c
  6049  00346C  D03C               	goto	l3393
  6050  00346E  0E01               	movlw	1
  6051  003470  6E13               	movwf	___aomod@counter,c
  6052  003472  D00A               	goto	l3383
  6053  003474                     l3381:
  6054  003474  90D8               	bcf	status,0,c
  6055  003476  360B               	rlcf	___aomod@divisor,f,c
  6056  003478  360C               	rlcf	___aomod@divisor+1,f,c
  6057  00347A  360D               	rlcf	___aomod@divisor+2,f,c
  6058  00347C  360E               	rlcf	___aomod@divisor+3,f,c
  6059  00347E  360F               	rlcf	___aomod@divisor+4,f,c
  6060  003480  3610               	rlcf	___aomod@divisor+5,f,c
  6061  003482  3611               	rlcf	___aomod@divisor+6,f,c
  6062  003484  3612               	rlcf	___aomod@divisor+7,f,c
  6063  003486  2A13               	incf	___aomod@counter,f,c
  6064  003488                     l3383:
  6065  003488  AE12               	btfss	___aomod@divisor+7,7,c
  6066  00348A  D7F4               	goto	l3381
  6067  00348C                     u3180:
  6068  00348C  500B               	movf	___aomod@divisor,w,c
  6069  00348E  5C03               	subwf	___aomod@dividend,w,c
  6070  003490  500C               	movf	___aomod@divisor+1,w,c
  6071  003492  5804               	subwfb	___aomod@dividend+1,w,c
  6072  003494  500D               	movf	___aomod@divisor+2,w,c
  6073  003496  5805               	subwfb	___aomod@dividend+2,w,c
  6074  003498  500E               	movf	___aomod@divisor+3,w,c
  6075  00349A  5806               	subwfb	___aomod@dividend+3,w,c
  6076  00349C  500F               	movf	___aomod@divisor+4,w,c
  6077  00349E  5807               	subwfb	___aomod@dividend+4,w,c
  6078  0034A0  5010               	movf	___aomod@divisor+5,w,c
  6079  0034A2  5808               	subwfb	___aomod@dividend+5,w,c
  6080  0034A4  5011               	movf	___aomod@divisor+6,w,c
  6081  0034A6  5809               	subwfb	___aomod@dividend+6,w,c
  6082  0034A8  5012               	movf	___aomod@divisor+7,w,c
  6083  0034AA  580A               	subwfb	___aomod@dividend+7,w,c
  6084  0034AC  A0D8               	btfss	status,0,c
  6085  0034AE  D010               	goto	l3389
  6086  0034B0  500B               	movf	___aomod@divisor,w,c
  6087  0034B2  5E03               	subwf	___aomod@dividend,f,c
  6088  0034B4  500C               	movf	___aomod@divisor+1,w,c
  6089  0034B6  5A04               	subwfb	___aomod@dividend+1,f,c
  6090  0034B8  500D               	movf	___aomod@divisor+2,w,c
  6091  0034BA  5A05               	subwfb	___aomod@dividend+2,f,c
  6092  0034BC  500E               	movf	___aomod@divisor+3,w,c
  6093  0034BE  5A06               	subwfb	___aomod@dividend+3,f,c
  6094  0034C0  500F               	movf	___aomod@divisor+4,w,c
  6095  0034C2  5A07               	subwfb	___aomod@dividend+4,f,c
  6096  0034C4  5010               	movf	___aomod@divisor+5,w,c
  6097  0034C6  5A08               	subwfb	___aomod@dividend+5,f,c
  6098  0034C8  5011               	movf	___aomod@divisor+6,w,c
  6099  0034CA  5A09               	subwfb	___aomod@dividend+6,f,c
  6100  0034CC  5012               	movf	___aomod@divisor+7,w,c
  6101  0034CE  5A0A               	subwfb	___aomod@dividend+7,f,c
  6102  0034D0                     l3389:
  6103  0034D0  90D8               	bcf	status,0,c
  6104  0034D2  3212               	rrcf	___aomod@divisor+7,f,c
  6105  0034D4  3211               	rrcf	___aomod@divisor+6,f,c
  6106  0034D6  3210               	rrcf	___aomod@divisor+5,f,c
  6107  0034D8  320F               	rrcf	___aomod@divisor+4,f,c
  6108  0034DA  320E               	rrcf	___aomod@divisor+3,f,c
  6109  0034DC  320D               	rrcf	___aomod@divisor+2,f,c
  6110  0034DE  320C               	rrcf	___aomod@divisor+1,f,c
  6111  0034E0  320B               	rrcf	___aomod@divisor,f,c
  6112  0034E2  2E13               	decfsz	___aomod@counter,f,c
  6113  0034E4  D7D3               	goto	u3180
  6114  0034E6                     l3393:
  6115  0034E6  5014               	movf	___aomod@sign,w,c
  6116  0034E8  B4D8               	btfsc	status,2,c
  6117  0034EA  D010               	goto	l3397
  6118  0034EC  1E0A               	comf	___aomod@dividend+7,f,c
  6119  0034EE  1E09               	comf	___aomod@dividend+6,f,c
  6120  0034F0  1E08               	comf	___aomod@dividend+5,f,c
  6121  0034F2  1E07               	comf	___aomod@dividend+4,f,c
  6122  0034F4  1E06               	comf	___aomod@dividend+3,f,c
  6123  0034F6  1E05               	comf	___aomod@dividend+2,f,c
  6124  0034F8  1E04               	comf	___aomod@dividend+1,f,c
  6125  0034FA  6C03               	negf	___aomod@dividend,c
  6126  0034FC  0E00               	movlw	0
  6127  0034FE  2204               	addwfc	___aomod@dividend+1,f,c
  6128  003500  2205               	addwfc	___aomod@dividend+2,f,c
  6129  003502  2206               	addwfc	___aomod@dividend+3,f,c
  6130  003504  2207               	addwfc	___aomod@dividend+4,f,c
  6131  003506  2208               	addwfc	___aomod@dividend+5,f,c
  6132  003508  2209               	addwfc	___aomod@dividend+6,f,c
  6133  00350A  220A               	addwfc	___aomod@dividend+7,f,c
  6134  00350C                     l3397:
  6135  00350C  C003  F003         	movff	___aomod@dividend,?___aomod
  6136  003510  C004  F004         	movff	___aomod@dividend+1,?___aomod+1
  6137  003514  C005  F005         	movff	___aomod@dividend+2,?___aomod+2
  6138  003518  C006  F006         	movff	___aomod@dividend+3,?___aomod+3
  6139  00351C  C007  F007         	movff	___aomod@dividend+4,?___aomod+4
  6140  003520  C008  F008         	movff	___aomod@dividend+5,?___aomod+5
  6141  003524  C009  F009         	movff	___aomod@dividend+6,?___aomod+6
  6142  003528  C00A  F00A         	movff	___aomod@dividend+7,?___aomod+7
  6143  00352C  0012               	return		;funcret
  6144  00352E                     __end_of___aomod:
  6145                           	opt callstack 0
  6146                           
  6147 ;; *************** function ___aodiv *****************
  6148 ;; Defined at:
  6149 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\aodiv.c"
  6150 ;; Parameters:    Size  Location     Type
  6151 ;;  dividend        8    2[COMRAM] long long 
  6152 ;;  divisor         8   10[COMRAM] long long 
  6153 ;; Auto vars:     Size  Location     Type
  6154 ;;  quotient        8   20[COMRAM] long long 
  6155 ;;  sign            1   19[COMRAM] unsigned char 
  6156 ;;  counter         1   18[COMRAM] unsigned char 
  6157 ;; Return value:  Size  Location     Type
  6158 ;;                  8    2[COMRAM] long long 
  6159 ;; Registers used:
  6160 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6161 ;; Tracked objects:
  6162 ;;		On entry : 0/0
  6163 ;;		On exit  : 0/0
  6164 ;;		Unchanged: 0/0
  6165 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6166 ;;      Params:        16       0       0       0       0       0       0       0       0
  6167 ;;      Locals:        10       0       0       0       0       0       0       0       0
  6168 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6169 ;;      Totals:        26       0       0       0       0       0       0       0       0
  6170 ;;Total ram usage:       26 bytes
  6171 ;; Hardware stack levels used:    1
  6172 ;; Hardware stack levels required when called:    3
  6173 ;; This function calls:
  6174 ;;		Nothing
  6175 ;; This function is called by:
  6176 ;;		_dtoa
  6177 ;; This function uses a non-reentrant model
  6178 ;;
  6179                           
  6180                           	psect	text21
  6181  002F1A                     __ptext21:
  6182                           	opt callstack 0
  6183  002F1A                     ___aodiv:
  6184                           	opt callstack 20
  6185                           
  6186                           ;incstack = 0
  6187  002F1A  0E00               	movlw	0
  6188  002F1C  6E14               	movwf	___aodiv@sign,c
  6189  002F1E  AE12               	btfss	___aodiv@divisor+7,7,c
  6190  002F20  D012               	goto	l3329
  6191  002F22  1E12               	comf	___aodiv@divisor+7,f,c
  6192  002F24  1E11               	comf	___aodiv@divisor+6,f,c
  6193  002F26  1E10               	comf	___aodiv@divisor+5,f,c
  6194  002F28  1E0F               	comf	___aodiv@divisor+4,f,c
  6195  002F2A  1E0E               	comf	___aodiv@divisor+3,f,c
  6196  002F2C  1E0D               	comf	___aodiv@divisor+2,f,c
  6197  002F2E  1E0C               	comf	___aodiv@divisor+1,f,c
  6198  002F30  6C0B               	negf	___aodiv@divisor,c
  6199  002F32  0E00               	movlw	0
  6200  002F34  220C               	addwfc	___aodiv@divisor+1,f,c
  6201  002F36  220D               	addwfc	___aodiv@divisor+2,f,c
  6202  002F38  220E               	addwfc	___aodiv@divisor+3,f,c
  6203  002F3A  220F               	addwfc	___aodiv@divisor+4,f,c
  6204  002F3C  2210               	addwfc	___aodiv@divisor+5,f,c
  6205  002F3E  2211               	addwfc	___aodiv@divisor+6,f,c
  6206  002F40  2212               	addwfc	___aodiv@divisor+7,f,c
  6207  002F42  0E01               	movlw	1
  6208  002F44  6E14               	movwf	___aodiv@sign,c
  6209  002F46                     l3329:
  6210  002F46  AE0A               	btfss	___aodiv@dividend+7,7,c
  6211  002F48  D012               	goto	l3335
  6212  002F4A  1E0A               	comf	___aodiv@dividend+7,f,c
  6213  002F4C  1E09               	comf	___aodiv@dividend+6,f,c
  6214  002F4E  1E08               	comf	___aodiv@dividend+5,f,c
  6215  002F50  1E07               	comf	___aodiv@dividend+4,f,c
  6216  002F52  1E06               	comf	___aodiv@dividend+3,f,c
  6217  002F54  1E05               	comf	___aodiv@dividend+2,f,c
  6218  002F56  1E04               	comf	___aodiv@dividend+1,f,c
  6219  002F58  6C03               	negf	___aodiv@dividend,c
  6220  002F5A  0E00               	movlw	0
  6221  002F5C  2204               	addwfc	___aodiv@dividend+1,f,c
  6222  002F5E  2205               	addwfc	___aodiv@dividend+2,f,c
  6223  002F60  2206               	addwfc	___aodiv@dividend+3,f,c
  6224  002F62  2207               	addwfc	___aodiv@dividend+4,f,c
  6225  002F64  2208               	addwfc	___aodiv@dividend+5,f,c
  6226  002F66  2209               	addwfc	___aodiv@dividend+6,f,c
  6227  002F68  220A               	addwfc	___aodiv@dividend+7,f,c
  6228  002F6A  0E01               	movlw	1
  6229  002F6C  1A14               	xorwf	___aodiv@sign,f,c
  6230  002F6E                     l3335:
  6231  002F6E  EE20  F015         	lfsr	2,___aodiv@quotient
  6232  002F72  0E07               	movlw	7
  6233  002F74                     u3101:
  6234  002F74  6ADE               	clrf	postinc2,c
  6235  002F76  06E8               	decf	wreg,f,c
  6236  002F78  E2FD               	bc	u3101
  6237  002F7A  500B               	movf	___aodiv@divisor,w,c
  6238  002F7C  100C               	iorwf	___aodiv@divisor+1,w,c
  6239  002F7E  100D               	iorwf	___aodiv@divisor+2,w,c
  6240  002F80  100E               	iorwf	___aodiv@divisor+3,w,c
  6241  002F82  100F               	iorwf	___aodiv@divisor+4,w,c
  6242  002F84  1010               	iorwf	___aodiv@divisor+5,w,c
  6243  002F86  1011               	iorwf	___aodiv@divisor+6,w,c
  6244  002F88  1012               	iorwf	___aodiv@divisor+7,w,c
  6245  002F8A  B4D8               	btfsc	status,2,c
  6246  002F8C  D046               	goto	l3357
  6247  002F8E  0E01               	movlw	1
  6248  002F90  6E13               	movwf	___aodiv@counter,c
  6249  002F92  D00A               	goto	l3343
  6250  002F94                     l3341:
  6251  002F94  90D8               	bcf	status,0,c
  6252  002F96  360B               	rlcf	___aodiv@divisor,f,c
  6253  002F98  360C               	rlcf	___aodiv@divisor+1,f,c
  6254  002F9A  360D               	rlcf	___aodiv@divisor+2,f,c
  6255  002F9C  360E               	rlcf	___aodiv@divisor+3,f,c
  6256  002F9E  360F               	rlcf	___aodiv@divisor+4,f,c
  6257  002FA0  3610               	rlcf	___aodiv@divisor+5,f,c
  6258  002FA2  3611               	rlcf	___aodiv@divisor+6,f,c
  6259  002FA4  3612               	rlcf	___aodiv@divisor+7,f,c
  6260  002FA6  2A13               	incf	___aodiv@counter,f,c
  6261  002FA8                     l3343:
  6262  002FA8  AE12               	btfss	___aodiv@divisor+7,7,c
  6263  002FAA  D7F4               	goto	l3341
  6264  002FAC                     u3120:
  6265  002FAC  90D8               	bcf	status,0,c
  6266  002FAE  3615               	rlcf	___aodiv@quotient,f,c
  6267  002FB0  3616               	rlcf	___aodiv@quotient+1,f,c
  6268  002FB2  3617               	rlcf	___aodiv@quotient+2,f,c
  6269  002FB4  3618               	rlcf	___aodiv@quotient+3,f,c
  6270  002FB6  3619               	rlcf	___aodiv@quotient+4,f,c
  6271  002FB8  361A               	rlcf	___aodiv@quotient+5,f,c
  6272  002FBA  361B               	rlcf	___aodiv@quotient+6,f,c
  6273  002FBC  361C               	rlcf	___aodiv@quotient+7,f,c
  6274  002FBE  500B               	movf	___aodiv@divisor,w,c
  6275  002FC0  5C03               	subwf	___aodiv@dividend,w,c
  6276  002FC2  500C               	movf	___aodiv@divisor+1,w,c
  6277  002FC4  5804               	subwfb	___aodiv@dividend+1,w,c
  6278  002FC6  500D               	movf	___aodiv@divisor+2,w,c
  6279  002FC8  5805               	subwfb	___aodiv@dividend+2,w,c
  6280  002FCA  500E               	movf	___aodiv@divisor+3,w,c
  6281  002FCC  5806               	subwfb	___aodiv@dividend+3,w,c
  6282  002FCE  500F               	movf	___aodiv@divisor+4,w,c
  6283  002FD0  5807               	subwfb	___aodiv@dividend+4,w,c
  6284  002FD2  5010               	movf	___aodiv@divisor+5,w,c
  6285  002FD4  5808               	subwfb	___aodiv@dividend+5,w,c
  6286  002FD6  5011               	movf	___aodiv@divisor+6,w,c
  6287  002FD8  5809               	subwfb	___aodiv@dividend+6,w,c
  6288  002FDA  5012               	movf	___aodiv@divisor+7,w,c
  6289  002FDC  580A               	subwfb	___aodiv@dividend+7,w,c
  6290  002FDE  A0D8               	btfss	status,0,c
  6291  002FE0  D011               	goto	l3353
  6292  002FE2  500B               	movf	___aodiv@divisor,w,c
  6293  002FE4  5E03               	subwf	___aodiv@dividend,f,c
  6294  002FE6  500C               	movf	___aodiv@divisor+1,w,c
  6295  002FE8  5A04               	subwfb	___aodiv@dividend+1,f,c
  6296  002FEA  500D               	movf	___aodiv@divisor+2,w,c
  6297  002FEC  5A05               	subwfb	___aodiv@dividend+2,f,c
  6298  002FEE  500E               	movf	___aodiv@divisor+3,w,c
  6299  002FF0  5A06               	subwfb	___aodiv@dividend+3,f,c
  6300  002FF2  500F               	movf	___aodiv@divisor+4,w,c
  6301  002FF4  5A07               	subwfb	___aodiv@dividend+4,f,c
  6302  002FF6  5010               	movf	___aodiv@divisor+5,w,c
  6303  002FF8  5A08               	subwfb	___aodiv@dividend+5,f,c
  6304  002FFA  5011               	movf	___aodiv@divisor+6,w,c
  6305  002FFC  5A09               	subwfb	___aodiv@dividend+6,f,c
  6306  002FFE  5012               	movf	___aodiv@divisor+7,w,c
  6307  003000  5A0A               	subwfb	___aodiv@dividend+7,f,c
  6308  003002  8015               	bsf	___aodiv@quotient,0,c
  6309  003004                     l3353:
  6310  003004  90D8               	bcf	status,0,c
  6311  003006  3212               	rrcf	___aodiv@divisor+7,f,c
  6312  003008  3211               	rrcf	___aodiv@divisor+6,f,c
  6313  00300A  3210               	rrcf	___aodiv@divisor+5,f,c
  6314  00300C  320F               	rrcf	___aodiv@divisor+4,f,c
  6315  00300E  320E               	rrcf	___aodiv@divisor+3,f,c
  6316  003010  320D               	rrcf	___aodiv@divisor+2,f,c
  6317  003012  320C               	rrcf	___aodiv@divisor+1,f,c
  6318  003014  320B               	rrcf	___aodiv@divisor,f,c
  6319  003016  2E13               	decfsz	___aodiv@counter,f,c
  6320  003018  D7C9               	goto	u3120
  6321  00301A                     l3357:
  6322  00301A  5014               	movf	___aodiv@sign,w,c
  6323  00301C  B4D8               	btfsc	status,2,c
  6324  00301E  D010               	goto	l3361
  6325  003020  1E1C               	comf	___aodiv@quotient+7,f,c
  6326  003022  1E1B               	comf	___aodiv@quotient+6,f,c
  6327  003024  1E1A               	comf	___aodiv@quotient+5,f,c
  6328  003026  1E19               	comf	___aodiv@quotient+4,f,c
  6329  003028  1E18               	comf	___aodiv@quotient+3,f,c
  6330  00302A  1E17               	comf	___aodiv@quotient+2,f,c
  6331  00302C  1E16               	comf	___aodiv@quotient+1,f,c
  6332  00302E  6C15               	negf	___aodiv@quotient,c
  6333  003030  0E00               	movlw	0
  6334  003032  2216               	addwfc	___aodiv@quotient+1,f,c
  6335  003034  2217               	addwfc	___aodiv@quotient+2,f,c
  6336  003036  2218               	addwfc	___aodiv@quotient+3,f,c
  6337  003038  2219               	addwfc	___aodiv@quotient+4,f,c
  6338  00303A  221A               	addwfc	___aodiv@quotient+5,f,c
  6339  00303C  221B               	addwfc	___aodiv@quotient+6,f,c
  6340  00303E  221C               	addwfc	___aodiv@quotient+7,f,c
  6341  003040                     l3361:
  6342  003040  C015  F003         	movff	___aodiv@quotient,?___aodiv
  6343  003044  C016  F004         	movff	___aodiv@quotient+1,?___aodiv+1
  6344  003048  C017  F005         	movff	___aodiv@quotient+2,?___aodiv+2
  6345  00304C  C018  F006         	movff	___aodiv@quotient+3,?___aodiv+3
  6346  003050  C019  F007         	movff	___aodiv@quotient+4,?___aodiv+4
  6347  003054  C01A  F008         	movff	___aodiv@quotient+5,?___aodiv+5
  6348  003058  C01B  F009         	movff	___aodiv@quotient+6,?___aodiv+6
  6349  00305C  C01C  F00A         	movff	___aodiv@quotient+7,?___aodiv+7
  6350  003060  0012               	return		;funcret
  6351  003062                     __end_of___aodiv:
  6352                           	opt callstack 0
  6353                           
  6354 ;; *************** function _ctoa *****************
  6355 ;; Defined at:
  6356 ;;		line 259 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  6357 ;; Parameters:    Size  Location     Type
  6358 ;;  fp              2   29[COMRAM] PTR struct _IO_FILE
  6359 ;;		 -> vsnprintf@f(6), 
  6360 ;;  c               1   31[COMRAM] unsigned char 
  6361 ;; Auto vars:     Size  Location     Type
  6362 ;;  w               2   32[COMRAM] int 
  6363 ;;  l               2    0        int 
  6364 ;; Return value:  Size  Location     Type
  6365 ;;                  2   29[COMRAM] int 
  6366 ;; Registers used:
  6367 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6368 ;; Tracked objects:
  6369 ;;		On entry : 0/0
  6370 ;;		On exit  : 0/0
  6371 ;;		Unchanged: 0/0
  6372 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6373 ;;      Params:         3       0       0       0       0       0       0       0       0
  6374 ;;      Locals:         2       0       0       0       0       0       0       0       0
  6375 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6376 ;;      Totals:         5       0       0       0       0       0       0       0       0
  6377 ;;Total ram usage:        5 bytes
  6378 ;; Hardware stack levels used:    1
  6379 ;; Hardware stack levels required when called:    7
  6380 ;; This function calls:
  6381 ;;		_pad
  6382 ;; This function is called by:
  6383 ;;		_vfpfcnvrt
  6384 ;; This function uses a non-reentrant model
  6385 ;;
  6386                           
  6387                           	psect	text22
  6388  003D88                     __ptext22:
  6389                           	opt callstack 0
  6390  003D88                     _ctoa:
  6391                           	opt callstack 17
  6392                           
  6393                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 259: static
      +                           int ctoa(FILE *fp, char c);C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\c
      +                          ommon\doprnt.c: 260: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common
      +                          \doprnt.c: 261:     int l, w;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99
      +                          \common\doprnt.c: 264:     w = width ? width - 1 : width;
  6394                           
  6395                           ;incstack = 0
  6396  003D88  0100               	movlb	0	; () banked
  6397  003D8A  51F4               	movf	_width& (0+255),w,b
  6398  003D8C  11F5               	iorwf	(_width+1)& (0+255),w,b
  6399  003D8E  A4D8               	btfss	status,2,c
  6400  003D90  D005               	goto	l3455
  6401                           
  6402                           ; BSR set to: 0
  6403  003D92  C0F4  F021         	movff	_width,ctoa@w
  6404  003D96  C0F5  F022         	movff	_width+1,ctoa@w+1
  6405  003D9A  D006               	goto	l3457
  6406  003D9C                     l3455:
  6407                           
  6408                           ; BSR set to: 0
  6409  003D9C  0EFF               	movlw	255
  6410  003D9E  25F4               	addwf	_width& (0+255),w,b
  6411  003DA0  6E21               	movwf	ctoa@w,c
  6412  003DA2  0EFF               	movlw	255
  6413  003DA4  21F5               	addwfc	(_width+1)& (0+255),w,b
  6414  003DA6  6E22               	movwf	ctoa@w+1,c
  6415  003DA8                     l3457:
  6416                           
  6417                           ; BSR set to: 0
  6418                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 267:     db
      +                          uf[0] = c;
  6419  003DA8  C020  F10F         	movff	ctoa@c,_dbuf
  6420                           
  6421                           ; BSR set to: 0
  6422                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 268:     db
      +                          uf[1] = '\0';
  6423  003DAC  0E00               	movlw	0
  6424  003DAE  0101               	movlb	1	; () banked
  6425  003DB0  6F10               	movwf	(_dbuf+1)& (0+255),b
  6426                           
  6427                           ; BSR set to: 1
  6428                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 269:     re
      +                          turn pad(fp, &dbuf[0], w);
  6429  003DB2  C01E  F013         	movff	ctoa@fp,pad@fp
  6430  003DB6  C01F  F014         	movff	ctoa@fp+1,pad@fp+1
  6431  003DBA  0E0F               	movlw	low _dbuf
  6432  003DBC  6E15               	movwf	pad@buf,c
  6433  003DBE  0E01               	movlw	high _dbuf
  6434  003DC0  6E16               	movwf	pad@buf+1,c
  6435  003DC2  C021  F017         	movff	ctoa@w,pad@p
  6436  003DC6  C022  F018         	movff	ctoa@w+1,pad@p+1
  6437  003DCA  EC1A  F01E         	call	_pad	;wreg free
  6438  003DCE  C013  F01E         	movff	?_pad,?_ctoa
  6439  003DD2  C014  F01F         	movff	?_pad+1,?_ctoa+1
  6440  003DD6  0012               	return		;funcret
  6441  003DD8                     __end_of_ctoa:
  6442                           	opt callstack 0
  6443                           
  6444 ;; *************** function _pad *****************
  6445 ;; Defined at:
  6446 ;;		line 72 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  6447 ;; Parameters:    Size  Location     Type
  6448 ;;  fp              2   18[COMRAM] PTR struct _IO_FILE
  6449 ;;		 -> vsnprintf@f(6), 
  6450 ;;  buf             2   20[COMRAM] PTR unsigned char 
  6451 ;;		 -> dbuf(32), 
  6452 ;;  p               2   22[COMRAM] int 
  6453 ;; Auto vars:     Size  Location     Type
  6454 ;;  w               2   27[COMRAM] int 
  6455 ;;  i               2   25[COMRAM] int 
  6456 ;; Return value:  Size  Location     Type
  6457 ;;                  2   18[COMRAM] int 
  6458 ;; Registers used:
  6459 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6460 ;; Tracked objects:
  6461 ;;		On entry : 0/0
  6462 ;;		On exit  : 0/0
  6463 ;;		Unchanged: 0/0
  6464 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6465 ;;      Params:         6       0       0       0       0       0       0       0       0
  6466 ;;      Locals:         4       0       0       0       0       0       0       0       0
  6467 ;;      Temps:          1       0       0       0       0       0       0       0       0
  6468 ;;      Totals:        11       0       0       0       0       0       0       0       0
  6469 ;;Total ram usage:       11 bytes
  6470 ;; Hardware stack levels used:    1
  6471 ;; Hardware stack levels required when called:    6
  6472 ;; This function calls:
  6473 ;;		_fputc
  6474 ;;		_fputs
  6475 ;;		_strlen
  6476 ;; This function is called by:
  6477 ;;		_ctoa
  6478 ;;		_dtoa
  6479 ;;		_otoa
  6480 ;;		_utoa
  6481 ;;		_xtoa
  6482 ;; This function uses a non-reentrant model
  6483 ;;
  6484                           
  6485                           	psect	text23
  6486  003C34                     __ptext23:
  6487                           	opt callstack 0
  6488  003C34                     _pad:
  6489                           	opt callstack 17
  6490                           
  6491                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 72: static 
      +                          int pad(FILE *fp, char *buf, int p);C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sourc
      +                          es\c99\common\doprnt.c: 73: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99
      +                          \common\doprnt.c: 74:     int i, w;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sourc
      +                          es\c99\common\doprnt.c: 77:     if (flags & (1 << 0)) {
  6492                           
  6493                           ;incstack = 0
  6494  003C34  A05B               	btfss	_flags,0,c
  6495  003C36  D00A               	goto	l3271
  6496                           
  6497                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 78:        
      +                           fputs((const char *)buf, fp);
  6498  003C38  C015  F00C         	movff	pad@buf,fputs@s
  6499  003C3C  C016  F00D         	movff	pad@buf+1,fputs@s+1
  6500  003C40  C013  F00E         	movff	pad@fp,fputs@fp
  6501  003C44  C014  F00F         	movff	pad@fp+1,fputs@fp+1
  6502  003C48  ECB8  F01F         	call	_fputs	;wreg free
  6503  003C4C                     l3271:
  6504                           
  6505                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 82:     w =
      +                           (p < 0) ? 0 : p;
  6506  003C4C  BE18               	btfsc	pad@p+1,7,c
  6507  003C4E  D005               	goto	l3275
  6508  003C50  C017  F01C         	movff	pad@p,pad@w
  6509  003C54  C018  F01D         	movff	pad@p+1,pad@w+1
  6510  003C58  D004               	goto	l60
  6511  003C5A                     l3275:
  6512  003C5A  0E00               	movlw	0
  6513  003C5C  6E1D               	movwf	pad@w+1,c
  6514  003C5E  0E00               	movlw	0
  6515  003C60  6E1C               	movwf	pad@w,c
  6516  003C62                     l60:
  6517                           
  6518                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 83:     i =
      +                           0;
  6519  003C62  0E00               	movlw	0
  6520  003C64  6E1B               	movwf	pad@i+1,c
  6521  003C66  0E00               	movlw	0
  6522  003C68  6E1A               	movwf	pad@i,c
  6523                           
  6524                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
  6525  003C6A  D00C               	goto	l3281
  6526  003C6C                     l3277:
  6527                           
  6528                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 85:        
      +                           fputc(' ', fp);
  6529  003C6C  0E00               	movlw	0
  6530  003C6E  6E04               	movwf	fputc@c+1,c
  6531  003C70  0E20               	movlw	32
  6532  003C72  6E03               	movwf	fputc@c,c
  6533  003C74  C013  F005         	movff	pad@fp,fputc@fp
  6534  003C78  C014  F006         	movff	pad@fp+1,fputc@fp+1
  6535  003C7C  ECCA  F01D         	call	_fputc	;wreg free
  6536                           
  6537                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 86:        
      +                           ++i;
  6538  003C80  4A1A               	infsnz	pad@i,f,c
  6539  003C82  2A1B               	incf	pad@i+1,f,c
  6540  003C84                     l3281:
  6541                           
  6542                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
  6543  003C84  501C               	movf	pad@w,w,c
  6544  003C86  5C1A               	subwf	pad@i,w,c
  6545  003C88  501B               	movf	pad@i+1,w,c
  6546  003C8A  0A80               	xorlw	128
  6547  003C8C  6E19               	movwf	??_pad& (0+255),c
  6548  003C8E  501D               	movf	pad@w+1,w,c
  6549  003C90  0A80               	xorlw	128
  6550  003C92  5819               	subwfb	??_pad& (0+255),w,c
  6551  003C94  A0D8               	btfss	status,0,c
  6552  003C96  D7EA               	goto	l3277
  6553                           
  6554                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 90:     if 
      +                          (!(flags & (1 << 0))) {
  6555  003C98  B05B               	btfsc	_flags,0,c
  6556  003C9A  D00A               	goto	l3285
  6557                           
  6558                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 91:        
      +                           fputs((const char *)buf, fp);
  6559  003C9C  C015  F00C         	movff	pad@buf,fputs@s
  6560  003CA0  C016  F00D         	movff	pad@buf+1,fputs@s+1
  6561  003CA4  C013  F00E         	movff	pad@fp,fputs@fp
  6562  003CA8  C014  F00F         	movff	pad@fp+1,fputs@fp+1
  6563  003CAC  ECB8  F01F         	call	_fputs	;wreg free
  6564  003CB0                     l3285:
  6565                           
  6566                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 94:     ret
      +                          urn strlen(buf) + w;
  6567  003CB0  C015  F003         	movff	pad@buf,strlen@s
  6568  003CB4  C016  F004         	movff	pad@buf+1,strlen@s+1
  6569  003CB8  EC99  F020         	call	_strlen	;wreg free
  6570  003CBC  501C               	movf	pad@w,w,c
  6571  003CBE  2403               	addwf	?_strlen,w,c
  6572  003CC0  6E13               	movwf	?_pad,c
  6573  003CC2  501D               	movf	pad@w+1,w,c
  6574  003CC4  2004               	addwfc	?_strlen+1,w,c
  6575  003CC6  6E14               	movwf	?_pad+1,c
  6576  003CC8  0012               	return		;funcret
  6577  003CCA                     __end_of_pad:
  6578                           	opt callstack 0
  6579                           
  6580 ;; *************** function _fputs *****************
  6581 ;; Defined at:
  6582 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\nf_fputs.c"
  6583 ;; Parameters:    Size  Location     Type
  6584 ;;  s               2   11[COMRAM] PTR const unsigned char 
  6585 ;;		 -> dbuf(32), 
  6586 ;;  fp              2   13[COMRAM] PTR struct _IO_FILE
  6587 ;;		 -> vsnprintf@f(6), 
  6588 ;; Auto vars:     Size  Location     Type
  6589 ;;  i               2   16[COMRAM] int 
  6590 ;;  c               1   15[COMRAM] unsigned char 
  6591 ;; Return value:  Size  Location     Type
  6592 ;;                  2   11[COMRAM] int 
  6593 ;; Registers used:
  6594 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6595 ;; Tracked objects:
  6596 ;;		On entry : 0/0
  6597 ;;		On exit  : 0/0
  6598 ;;		Unchanged: 0/0
  6599 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6600 ;;      Params:         4       0       0       0       0       0       0       0       0
  6601 ;;      Locals:         3       0       0       0       0       0       0       0       0
  6602 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6603 ;;      Totals:         7       0       0       0       0       0       0       0       0
  6604 ;;Total ram usage:        7 bytes
  6605 ;; Hardware stack levels used:    1
  6606 ;; Hardware stack levels required when called:    5
  6607 ;; This function calls:
  6608 ;;		_fputc
  6609 ;; This function is called by:
  6610 ;;		_pad
  6611 ;; This function uses a non-reentrant model
  6612 ;;
  6613                           
  6614                           	psect	text24
  6615  003F70                     __ptext24:
  6616                           	opt callstack 0
  6617  003F70                     _fputs:
  6618                           	opt callstack 17
  6619                           
  6620                           ;incstack = 0
  6621  003F70  0E00               	movlw	0
  6622  003F72  6E12               	movwf	fputs@i+1,c
  6623  003F74  0E00               	movlw	0
  6624  003F76  6E11               	movwf	fputs@i,c
  6625  003F78  D00B               	goto	l3251
  6626  003F7A                     l3247:
  6627  003F7A  C010  F003         	movff	fputs@c,fputc@c
  6628  003F7E  6A04               	clrf	fputc@c+1,c
  6629  003F80  C00E  F005         	movff	fputs@fp,fputc@fp
  6630  003F84  C00F  F006         	movff	fputs@fp+1,fputc@fp+1
  6631  003F88  ECCA  F01D         	call	_fputc	;wreg free
  6632  003F8C  4A11               	infsnz	fputs@i,f,c
  6633  003F8E  2A12               	incf	fputs@i+1,f,c
  6634  003F90                     l3251:
  6635  003F90  5011               	movf	fputs@i,w,c
  6636  003F92  240C               	addwf	fputs@s,w,c
  6637  003F94  6ED9               	movwf	fsr2l,c
  6638  003F96  5012               	movf	fputs@i+1,w,c
  6639  003F98  200D               	addwfc	fputs@s+1,w,c
  6640  003F9A  6EDA               	movwf	fsr2h,c
  6641  003F9C  50DF               	movf	indf2,w,c
  6642  003F9E  6E10               	movwf	fputs@c,c
  6643  003FA0  5010               	movf	fputs@c,w,c
  6644  003FA2  B4D8               	btfsc	status,2,c
  6645  003FA4  0012               	return	
  6646  003FA6  D7E9               	goto	l3247
  6647  003FA8                     __end_of_fputs:
  6648                           	opt callstack 0
  6649                           
  6650 ;; *************** function _fputc *****************
  6651 ;; Defined at:
  6652 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\nf_fputc.c"
  6653 ;; Parameters:    Size  Location     Type
  6654 ;;  c               2    2[COMRAM] int 
  6655 ;;  fp              2    4[COMRAM] PTR struct _IO_FILE
  6656 ;;		 -> vsnprintf@f(6), 
  6657 ;; Auto vars:     Size  Location     Type
  6658 ;;		None
  6659 ;; Return value:  Size  Location     Type
  6660 ;;                  2    2[COMRAM] int 
  6661 ;; Registers used:
  6662 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6663 ;; Tracked objects:
  6664 ;;		On entry : 0/0
  6665 ;;		On exit  : 0/0
  6666 ;;		Unchanged: 0/0
  6667 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6668 ;;      Params:         4       0       0       0       0       0       0       0       0
  6669 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6670 ;;      Temps:          5       0       0       0       0       0       0       0       0
  6671 ;;      Totals:         9       0       0       0       0       0       0       0       0
  6672 ;;Total ram usage:        9 bytes
  6673 ;; Hardware stack levels used:    1
  6674 ;; Hardware stack levels required when called:    4
  6675 ;; This function calls:
  6676 ;;		_putch
  6677 ;; This function is called by:
  6678 ;;		_pad
  6679 ;;		_stoa
  6680 ;;		_vfpfcnvrt
  6681 ;;		_fputs
  6682 ;; This function uses a non-reentrant model
  6683 ;;
  6684                           
  6685                           	psect	text25
  6686  003B94                     __ptext25:
  6687                           	opt callstack 0
  6688  003B94                     _fputc:
  6689                           	opt callstack 17
  6690                           
  6691                           ;incstack = 0
  6692  003B94  5005               	movf	fputc@fp,w,c
  6693  003B96  1006               	iorwf	fputc@fp+1,w,c
  6694  003B98  B4D8               	btfsc	status,2,c
  6695  003B9A  D004               	goto	u2870
  6696  003B9C  5005               	movf	fputc@fp,w,c
  6697  003B9E  1006               	iorwf	fputc@fp+1,w,c
  6698  003BA0  A4D8               	btfss	status,2,c
  6699  003BA2  D004               	goto	l3237
  6700  003BA4                     u2870:
  6701  003BA4  5003               	movf	fputc@c,w,c
  6702  003BA6  EC29  F021         	call	_putch
  6703  003BAA  0012               	return	
  6704  003BAC                     l3237:
  6705  003BAC  EE20 F004          	lfsr	2,4
  6706  003BB0  5005               	movf	fputc@fp,w,c
  6707  003BB2  26D9               	addwf	fsr2l,f,c
  6708  003BB4  5006               	movf	fputc@fp+1,w,c
  6709  003BB6  22DA               	addwfc	fsr2h,f,c
  6710  003BB8  50DE               	movf	postinc2,w,c
  6711  003BBA  10DE               	iorwf	postinc2,w,c
  6712  003BBC  B4D8               	btfsc	status,2,c
  6713  003BBE  D016               	goto	u2890
  6714  003BC0  EE20 F004          	lfsr	2,4
  6715  003BC4  5005               	movf	fputc@fp,w,c
  6716  003BC6  26D9               	addwf	fsr2l,f,c
  6717  003BC8  5006               	movf	fputc@fp+1,w,c
  6718  003BCA  22DA               	addwfc	fsr2h,f,c
  6719  003BCC  EE10 F002          	lfsr	1,2
  6720  003BD0  5005               	movf	fputc@fp,w,c
  6721  003BD2  26E1               	addwf	fsr1l,f,c
  6722  003BD4  5006               	movf	fputc@fp+1,w,c
  6723  003BD6  22E2               	addwfc	fsr1h,f,c
  6724  003BD8  50DE               	movf	postinc2,w,c
  6725  003BDA  5CE6               	subwf	postinc1,w,c
  6726  003BDC  50E6               	movf	postinc1,w,c
  6727  003BDE  0A80               	xorlw	128
  6728  003BE0  6E0B               	movwf	(??_fputc+4)& (0+255),c
  6729  003BE2  50DE               	movf	postinc2,w,c
  6730  003BE4  0A80               	xorlw	128
  6731  003BE6  580B               	subwfb	(??_fputc+4)& (0+255),w,c
  6732  003BE8  B0D8               	btfsc	status,0,c
  6733  003BEA  0012               	return	
  6734  003BEC                     u2890:
  6735  003BEC  EE20 F002          	lfsr	2,2
  6736  003BF0  5005               	movf	fputc@fp,w,c
  6737  003BF2  26D9               	addwf	fsr2l,f,c
  6738  003BF4  5006               	movf	fputc@fp+1,w,c
  6739  003BF6  22DA               	addwfc	fsr2h,f,c
  6740  003BF8  CFDE F007          	movff	postinc2,??_fputc
  6741  003BFC  CFDD F008          	movff	postdec2,??_fputc+1
  6742  003C00  C005  FFD9         	movff	fputc@fp,fsr2l
  6743  003C04  C006  FFDA         	movff	fputc@fp+1,fsr2h
  6744  003C08  CFDE F009          	movff	postinc2,??_fputc+2
  6745  003C0C  CFDD F00A          	movff	postdec2,??_fputc+3
  6746  003C10  5007               	movf	??_fputc,w,c
  6747  003C12  2409               	addwf	??_fputc+2,w,c
  6748  003C14  6ED9               	movwf	fsr2l,c
  6749  003C16  5008               	movf	??_fputc+1,w,c
  6750  003C18  200A               	addwfc	??_fputc+3,w,c
  6751  003C1A  6EDA               	movwf	fsr2h,c
  6752  003C1C  C003  FFDF         	movff	fputc@c,indf2
  6753  003C20  EE20 F002          	lfsr	2,2
  6754  003C24  5005               	movf	fputc@fp,w,c
  6755  003C26  26D9               	addwf	fsr2l,f,c
  6756  003C28  5006               	movf	fputc@fp+1,w,c
  6757  003C2A  22DA               	addwfc	fsr2h,f,c
  6758  003C2C  2ADE               	incf	postinc2,f,c
  6759  003C2E  0E00               	movlw	0
  6760  003C30  22DD               	addwfc	postdec2,f,c
  6761  003C32  0012               	return		;funcret
  6762  003C34                     __end_of_fputc:
  6763                           	opt callstack 0
  6764                           
  6765 ;; *************** function _putch *****************
  6766 ;; Defined at:
  6767 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\putch.c"
  6768 ;; Parameters:    Size  Location     Type
  6769 ;;  c               1    wreg     unsigned char 
  6770 ;; Auto vars:     Size  Location     Type
  6771 ;;  c               1    0[COMRAM] unsigned char 
  6772 ;; Return value:  Size  Location     Type
  6773 ;;                  1    wreg      void 
  6774 ;; Registers used:
  6775 ;;		wreg
  6776 ;; Tracked objects:
  6777 ;;		On entry : 0/0
  6778 ;;		On exit  : 0/0
  6779 ;;		Unchanged: 0/0
  6780 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6781 ;;      Params:         0       0       0       0       0       0       0       0       0
  6782 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6783 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6784 ;;      Totals:         0       0       0       0       0       0       0       0       0
  6785 ;;Total ram usage:        0 bytes
  6786 ;; Hardware stack levels used:    1
  6787 ;; Hardware stack levels required when called:    3
  6788 ;; This function calls:
  6789 ;;		Nothing
  6790 ;; This function is called by:
  6791 ;;		_fputc
  6792 ;; This function uses a non-reentrant model
  6793 ;;
  6794                           
  6795                           	psect	text26
  6796  004252                     __ptext26:
  6797                           	opt callstack 0
  6798  004252                     _putch:
  6799                           	opt callstack 17
  6800                           
  6801                           ;incstack = 0
  6802  004252  0012               	return		;funcret
  6803  004254                     __end_of_putch:
  6804                           	opt callstack 0
  6805                           
  6806 ;; *************** function _atoi *****************
  6807 ;; Defined at:
  6808 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\atoi.c"
  6809 ;; Parameters:    Size  Location     Type
  6810 ;;  s               2    9[COMRAM] PTR const unsigned char 
  6811 ;;		 -> STR_101(3), STR_100(3), 
  6812 ;; Auto vars:     Size  Location     Type
  6813 ;;  n               2   22[COMRAM] int 
  6814 ;;  neg             2   15[COMRAM] int 
  6815 ;; Return value:  Size  Location     Type
  6816 ;;                  2    9[COMRAM] int 
  6817 ;; Registers used:
  6818 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6819 ;; Tracked objects:
  6820 ;;		On entry : 0/0
  6821 ;;		On exit  : 0/0
  6822 ;;		Unchanged: 0/0
  6823 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6824 ;;      Params:         2       0       0       0       0       0       0       0       0
  6825 ;;      Locals:         9       0       0       0       0       0       0       0       0
  6826 ;;      Temps:          4       0       0       0       0       0       0       0       0
  6827 ;;      Totals:        15       0       0       0       0       0       0       0       0
  6828 ;;Total ram usage:       15 bytes
  6829 ;; Hardware stack levels used:    1
  6830 ;; Hardware stack levels required when called:    4
  6831 ;; This function calls:
  6832 ;;		___wmul
  6833 ;;		_isdigit
  6834 ;;		_isspace
  6835 ;; This function is called by:
  6836 ;;		_vfpfcnvrt
  6837 ;; This function uses a non-reentrant model
  6838 ;;
  6839                           
  6840                           	psect	text27
  6841  003062                     __ptext27:
  6842                           	opt callstack 0
  6843  003062                     _atoi:
  6844                           	opt callstack 20
  6845                           
  6846                           ;incstack = 0
  6847  003062  0E00               	movlw	0
  6848  003064  6E18               	movwf	atoi@n+1,c
  6849  003066  0E00               	movlw	0
  6850  003068  6E17               	movwf	atoi@n,c
  6851  00306A  0E00               	movlw	0
  6852  00306C  6E11               	movwf	atoi@neg+1,c
  6853  00306E  0E00               	movlw	0
  6854  003070  6E10               	movwf	atoi@neg,c
  6855  003072  D002               	goto	l3723
  6856  003074                     l3721:
  6857  003074  4A0A               	infsnz	atoi@s,f,c
  6858  003076  2A0B               	incf	atoi@s+1,f,c
  6859  003078                     l3723:
  6860  003078  0E01               	movlw	1
  6861  00307A  6E16               	movwf	_atoi$1354,c
  6862  00307C  C00A  FFF6         	movff	atoi@s,tblptrl
  6863  003080  C00B  FFF7         	movff	atoi@s+1,tblptrh
  6864  003084                     	if	0	;tblptru may be non-zero
  6865  003084                     	endif
  6866  003084                     	if	0	;tblptru may be non-zero
  6867  003084                     	endif
  6868  003084  0008               	tblrd		*
  6869  003086  50F5               	movf	tablat,w,c
  6870  003088  0A20               	xorlw	32
  6871  00308A  B4D8               	btfsc	status,2,c
  6872  00308C  D018               	goto	l3731
  6873  00308E  0EF7               	movlw	247
  6874  003090  6E0C               	movwf	??_atoi& (0+255),c
  6875  003092  0EFF               	movlw	255
  6876  003094  6E0D               	movwf	(??_atoi+1)& (0+255),c
  6877  003096  C00A  FFF6         	movff	atoi@s,tblptrl
  6878  00309A  C00B  FFF7         	movff	atoi@s+1,tblptrh
  6879  00309E                     	if	0	;tblptru may be non-zero
  6880  00309E                     	endif
  6881  00309E                     	if	0	;tblptru may be non-zero
  6882  00309E                     	endif
  6883  00309E  0008               	tblrd		*
  6884  0030A0  50F5               	movf	tablat,w,c
  6885  0030A2  6E0E               	movwf	(??_atoi+2)& (0+255),c
  6886  0030A4  6A0F               	clrf	(??_atoi+3)& (0+255),c
  6887  0030A6  500C               	movf	??_atoi,w,c
  6888  0030A8  260E               	addwf	??_atoi+2,f,c
  6889  0030AA  500D               	movf	??_atoi+1,w,c
  6890  0030AC  220F               	addwfc	??_atoi+3,f,c
  6891  0030AE  500F               	movf	??_atoi+3,w,c
  6892  0030B0  E104               	bnz	u3900
  6893  0030B2  0E05               	movlw	5
  6894  0030B4  5C0E               	subwf	??_atoi+2,w,c
  6895  0030B6  A0D8               	btfss	status,0,c
  6896  0030B8  D002               	goto	l3731
  6897  0030BA                     u3900:
  6898  0030BA  0E00               	movlw	0
  6899  0030BC  6E16               	movwf	_atoi$1354,c
  6900  0030BE                     l3731:
  6901  0030BE  C016  F012         	movff	_atoi$1354,_atoi$1353
  6902  0030C2  6A13               	clrf	_atoi$1353+1,c
  6903  0030C4  5012               	movf	_atoi$1353,w,c
  6904  0030C6  1013               	iorwf	_atoi$1353+1,w,c
  6905  0030C8  B4D8               	btfsc	status,2,c
  6906  0030CA  D008               	goto	l3741
  6907  0030CC  D7D3               	goto	l3721
  6908  0030CE                     l3737:
  6909  0030CE  0E00               	movlw	0
  6910  0030D0  6E11               	movwf	atoi@neg+1,c
  6911  0030D2  0E01               	movlw	1
  6912  0030D4  6E10               	movwf	atoi@neg,c
  6913  0030D6                     l3739:
  6914  0030D6  4A0A               	infsnz	atoi@s,f,c
  6915  0030D8  2A0B               	incf	atoi@s+1,f,c
  6916  0030DA  D02E               	goto	l3747
  6917  0030DC                     l3741:
  6918  0030DC  C00A  FFF6         	movff	atoi@s,tblptrl
  6919  0030E0  C00B  FFF7         	movff	atoi@s+1,tblptrh
  6920  0030E4                     	if	0	;tblptru may be non-zero
  6921  0030E4                     	endif
  6922  0030E4                     	if	0	;tblptru may be non-zero
  6923  0030E4                     	endif
  6924  0030E4  0008               	tblrd		*
  6925  0030E6  50F5               	movf	tablat,w,c
  6926  0030E8  6E0C               	movwf	??_atoi& (0+255),c
  6927  0030EA  6A0D               	clrf	(??_atoi+1)& (0+255),c
  6928                           
  6929                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6930                           ; Switch size 1, requested type "simple"
  6931                           ; Number of cases is 1, Range of values is 0 to 0
  6932                           ; switch strategies available:
  6933                           ; Name         Instructions Cycles
  6934                           ; simple_byte            4     3 (average)
  6935                           ;	Chosen strategy is simple_byte
  6936  0030EC  500D               	movf	??_atoi+1,w,c
  6937  0030EE  0A00               	xorlw	0	; case 0
  6938  0030F0  A4D8               	btfss	status,2,c
  6939  0030F2  D022               	goto	l3747
  6940                           
  6941                           ; Switch size 1, requested type "simple"
  6942                           ; Number of cases is 2, Range of values is 43 to 45
  6943                           ; switch strategies available:
  6944                           ; Name         Instructions Cycles
  6945                           ; simple_byte            7     4 (average)
  6946                           ;	Chosen strategy is simple_byte
  6947  0030F4  500C               	movf	??_atoi,w,c
  6948  0030F6  0A2B               	xorlw	43	; case 43
  6949  0030F8  B4D8               	btfsc	status,2,c
  6950  0030FA  D7ED               	goto	l3739
  6951  0030FC  0A06               	xorlw	6	; case 45
  6952  0030FE  B4D8               	btfsc	status,2,c
  6953  003100  D7E6               	goto	l3737
  6954  003102  D01A               	goto	l3747
  6955  003104                     l3743:
  6956  003104  C017  F003         	movff	atoi@n,___wmul@multiplier
  6957  003108  C018  F004         	movff	atoi@n+1,___wmul@multiplier+1
  6958  00310C  0E00               	movlw	0
  6959  00310E  6E06               	movwf	___wmul@multiplicand+1,c
  6960  003110  0E0A               	movlw	10
  6961  003112  6E05               	movwf	___wmul@multiplicand,c
  6962  003114  ECD6  F020         	call	___wmul	;wreg free
  6963  003118  C00A  FFF6         	movff	atoi@s,tblptrl
  6964  00311C  C00B  FFF7         	movff	atoi@s+1,tblptrh
  6965  003120                     	if	0	;tblptru may be non-zero
  6966  003120                     	endif
  6967  003120                     	if	0	;tblptru may be non-zero
  6968  003120                     	endif
  6969  003120  0008               	tblrd		*
  6970  003122  50F5               	movf	tablat,w,c
  6971  003124  5E03               	subwf	?___wmul,f,c
  6972  003126  0E00               	movlw	0
  6973  003128  5A04               	subwfb	?___wmul+1,f,c
  6974  00312A  0E30               	movlw	48
  6975  00312C  2403               	addwf	?___wmul,w,c
  6976  00312E  6E17               	movwf	atoi@n,c
  6977  003130  0E00               	movlw	0
  6978  003132  2004               	addwfc	?___wmul+1,w,c
  6979  003134  6E18               	movwf	atoi@n+1,c
  6980  003136  D7CF               	goto	l3739
  6981  003138                     l3747:
  6982  003138  0ED0               	movlw	208
  6983  00313A  6E0C               	movwf	??_atoi& (0+255),c
  6984  00313C  0EFF               	movlw	255
  6985  00313E  6E0D               	movwf	(??_atoi+1)& (0+255),c
  6986  003140  C00A  FFF6         	movff	atoi@s,tblptrl
  6987  003144  C00B  FFF7         	movff	atoi@s+1,tblptrh
  6988  003148                     	if	0	;tblptru may be non-zero
  6989  003148                     	endif
  6990  003148                     	if	0	;tblptru may be non-zero
  6991  003148                     	endif
  6992  003148  0008               	tblrd		*
  6993  00314A  50F5               	movf	tablat,w,c
  6994  00314C  6E0E               	movwf	(??_atoi+2)& (0+255),c
  6995  00314E  6A0F               	clrf	(??_atoi+3)& (0+255),c
  6996  003150  500C               	movf	??_atoi,w,c
  6997  003152  260E               	addwf	??_atoi+2,f,c
  6998  003154  500D               	movf	??_atoi+1,w,c
  6999  003156  220F               	addwfc	??_atoi+3,f,c
  7000  003158  500F               	movf	??_atoi+3,w,c
  7001  00315A  E106               	bnz	u3920
  7002  00315C  0E0A               	movlw	10
  7003  00315E  5C0E               	subwf	??_atoi+2,w,c
  7004  003160  B0D8               	btfsc	status,0,c
  7005  003162  D002               	goto	u3920
  7006  003164  0E01               	movlw	1
  7007  003166  D001               	goto	u3930
  7008  003168                     u3920:
  7009  003168  0E00               	movlw	0
  7010  00316A                     u3930:
  7011  00316A  6E14               	movwf	_atoi$1355,c
  7012  00316C  6A15               	clrf	_atoi$1355+1,c
  7013  00316E  5014               	movf	_atoi$1355,w,c
  7014  003170  1015               	iorwf	_atoi$1355+1,w,c
  7015  003172  A4D8               	btfss	status,2,c
  7016  003174  D7C7               	goto	l3743
  7017  003176  5010               	movf	atoi@neg,w,c
  7018  003178  1011               	iorwf	atoi@neg+1,w,c
  7019  00317A  A4D8               	btfss	status,2,c
  7020  00317C  D00D               	goto	l1195
  7021  00317E  C017  F00C         	movff	atoi@n,??_atoi
  7022  003182  C018  F00D         	movff	atoi@n+1,??_atoi+1
  7023  003186  1E0C               	comf	??_atoi,f,c
  7024  003188  1E0D               	comf	??_atoi+1,f,c
  7025  00318A  4A0C               	infsnz	??_atoi,f,c
  7026  00318C  2A0D               	incf	??_atoi+1,f,c
  7027  00318E  C00C  F00A         	movff	??_atoi,?_atoi
  7028  003192  C00D  F00B         	movff	??_atoi+1,?_atoi+1
  7029  003196  0012               	return	
  7030  003198                     l1195:
  7031  003198  C017  F00A         	movff	atoi@n,?_atoi
  7032  00319C  C018  F00B         	movff	atoi@n+1,?_atoi+1
  7033  0031A0  0012               	return		;funcret
  7034  0031A2                     __end_of_atoi:
  7035                           	opt callstack 0
  7036                           
  7037 ;; *************** function _isspace *****************
  7038 ;; Defined at:
  7039 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\isspace.c"
  7040 ;; Parameters:    Size  Location     Type
  7041 ;;  c               2    2[COMRAM] int 
  7042 ;; Auto vars:     Size  Location     Type
  7043 ;;		None
  7044 ;; Return value:  Size  Location     Type
  7045 ;;                  2    2[COMRAM] int 
  7046 ;; Registers used:
  7047 ;;		wreg, status,2, status,0
  7048 ;; Tracked objects:
  7049 ;;		On entry : 0/0
  7050 ;;		On exit  : 0/0
  7051 ;;		Unchanged: 0/0
  7052 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7053 ;;      Params:         2       0       0       0       0       0       0       0       0
  7054 ;;      Locals:         1       0       0       0       0       0       0       0       0
  7055 ;;      Temps:          4       0       0       0       0       0       0       0       0
  7056 ;;      Totals:         7       0       0       0       0       0       0       0       0
  7057 ;;Total ram usage:        7 bytes
  7058 ;; Hardware stack levels used:    1
  7059 ;; Hardware stack levels required when called:    3
  7060 ;; This function calls:
  7061 ;;		Nothing
  7062 ;; This function is called by:
  7063 ;;		_atoi
  7064 ;; This function uses a non-reentrant model
  7065 ;;
  7066                           
  7067                           	psect	text28
  7068  003F32                     __ptext28:
  7069                           	opt callstack 0
  7070  003F32                     _isspace:
  7071                           	opt callstack 20
  7072                           
  7073                           ;incstack = 0
  7074  003F32  0E01               	movlw	1
  7075  003F34  6E09               	movwf	_isspace$1380,c
  7076  003F36  0E20               	movlw	32
  7077  003F38  1803               	xorwf	isspace@c,w,c
  7078  003F3A  1004               	iorwf	isspace@c+1,w,c
  7079  003F3C  B4D8               	btfsc	status,2,c
  7080  003F3E  D014               	goto	l3447
  7081  003F40  0EF7               	movlw	247
  7082  003F42  6E05               	movwf	??_isspace& (0+255),c
  7083  003F44  0EFF               	movlw	255
  7084  003F46  6E06               	movwf	(??_isspace+1)& (0+255),c
  7085  003F48  C003  F007         	movff	isspace@c,??_isspace+2
  7086  003F4C  C004  F008         	movff	isspace@c+1,??_isspace+3
  7087  003F50  5005               	movf	??_isspace,w,c
  7088  003F52  2607               	addwf	??_isspace+2,f,c
  7089  003F54  5006               	movf	??_isspace+1,w,c
  7090  003F56  2208               	addwfc	??_isspace+3,f,c
  7091  003F58  5008               	movf	??_isspace+3,w,c
  7092  003F5A  E104               	bnz	u3290
  7093  003F5C  0E05               	movlw	5
  7094  003F5E  5C07               	subwf	??_isspace+2,w,c
  7095  003F60  A0D8               	btfss	status,0,c
  7096  003F62  D002               	goto	l3447
  7097  003F64                     u3290:
  7098  003F64  0E00               	movlw	0
  7099  003F66  6E09               	movwf	_isspace$1380,c
  7100  003F68                     l3447:
  7101  003F68  C009  F003         	movff	_isspace$1380,?_isspace
  7102  003F6C  6A04               	clrf	?_isspace+1,c
  7103  003F6E  0012               	return		;funcret
  7104  003F70                     __end_of_isspace:
  7105                           	opt callstack 0
  7106                           
  7107 ;; *************** function _isdigit *****************
  7108 ;; Defined at:
  7109 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\isdigit.c"
  7110 ;; Parameters:    Size  Location     Type
  7111 ;;  c               2    2[COMRAM] int 
  7112 ;; Auto vars:     Size  Location     Type
  7113 ;;		None
  7114 ;; Return value:  Size  Location     Type
  7115 ;;                  2    2[COMRAM] int 
  7116 ;; Registers used:
  7117 ;;		wreg, status,2, status,0
  7118 ;; Tracked objects:
  7119 ;;		On entry : 0/0
  7120 ;;		On exit  : 0/0
  7121 ;;		Unchanged: 0/0
  7122 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7123 ;;      Params:         2       0       0       0       0       0       0       0       0
  7124 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7125 ;;      Temps:          4       0       0       0       0       0       0       0       0
  7126 ;;      Totals:         6       0       0       0       0       0       0       0       0
  7127 ;;Total ram usage:        6 bytes
  7128 ;; Hardware stack levels used:    1
  7129 ;; Hardware stack levels required when called:    3
  7130 ;; This function calls:
  7131 ;;		Nothing
  7132 ;; This function is called by:
  7133 ;;		_vfpfcnvrt
  7134 ;;		_atoi
  7135 ;; This function uses a non-reentrant model
  7136 ;;
  7137                           
  7138                           	psect	text29
  7139  0040D2                     __ptext29:
  7140                           	opt callstack 0
  7141  0040D2                     _isdigit:
  7142                           	opt callstack 21
  7143                           
  7144                           ;incstack = 0
  7145  0040D2  0ED0               	movlw	208
  7146  0040D4  6E05               	movwf	??_isdigit& (0+255),c
  7147  0040D6  0EFF               	movlw	255
  7148  0040D8  6E06               	movwf	(??_isdigit+1)& (0+255),c
  7149  0040DA  C003  F007         	movff	isdigit@c,??_isdigit+2
  7150  0040DE  C004  F008         	movff	isdigit@c+1,??_isdigit+3
  7151  0040E2  5005               	movf	??_isdigit,w,c
  7152  0040E4  2607               	addwf	??_isdigit+2,f,c
  7153  0040E6  5006               	movf	??_isdigit+1,w,c
  7154  0040E8  2208               	addwfc	??_isdigit+3,f,c
  7155  0040EA  5008               	movf	??_isdigit+3,w,c
  7156  0040EC  E106               	bnz	u3060
  7157  0040EE  0E0A               	movlw	10
  7158  0040F0  5C07               	subwf	??_isdigit+2,w,c
  7159  0040F2  B0D8               	btfsc	status,0,c
  7160  0040F4  D002               	goto	u3060
  7161  0040F6  0E01               	movlw	1
  7162  0040F8  D001               	goto	u3070
  7163  0040FA                     u3060:
  7164  0040FA  0E00               	movlw	0
  7165  0040FC                     u3070:
  7166  0040FC  6E03               	movwf	?_isdigit,c
  7167  0040FE  6A04               	clrf	?_isdigit+1,c
  7168  004100  0012               	return		;funcret
  7169  004102                     __end_of_isdigit:
  7170                           	opt callstack 0
  7171                           
  7172 ;; *************** function ___wmul *****************
  7173 ;; Defined at:
  7174 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\Umul16.c"
  7175 ;; Parameters:    Size  Location     Type
  7176 ;;  multiplier      2    2[COMRAM] unsigned int 
  7177 ;;  multiplicand    2    4[COMRAM] unsigned int 
  7178 ;; Auto vars:     Size  Location     Type
  7179 ;;  product         2    6[COMRAM] unsigned int 
  7180 ;; Return value:  Size  Location     Type
  7181 ;;                  2    2[COMRAM] unsigned int 
  7182 ;; Registers used:
  7183 ;;		wreg, status,2, status,0, prodl, prodh
  7184 ;; Tracked objects:
  7185 ;;		On entry : 0/0
  7186 ;;		On exit  : 0/0
  7187 ;;		Unchanged: 0/0
  7188 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7189 ;;      Params:         4       0       0       0       0       0       0       0       0
  7190 ;;      Locals:         2       0       0       0       0       0       0       0       0
  7191 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7192 ;;      Totals:         6       0       0       0       0       0       0       0       0
  7193 ;;Total ram usage:        6 bytes
  7194 ;; Hardware stack levels used:    1
  7195 ;; Hardware stack levels required when called:    3
  7196 ;; This function calls:
  7197 ;;		Nothing
  7198 ;; This function is called by:
  7199 ;;		_atoi
  7200 ;; This function uses a non-reentrant model
  7201 ;;
  7202                           
  7203                           	psect	text30
  7204  0041AC                     __ptext30:
  7205                           	opt callstack 0
  7206  0041AC                     ___wmul:
  7207                           	opt callstack 20
  7208                           
  7209                           ;incstack = 0
  7210  0041AC  5003               	movf	___wmul@multiplier,w,c
  7211  0041AE  0205               	mulwf	___wmul@multiplicand,c
  7212  0041B0  CFF3 F007          	movff	prodl,___wmul@product
  7213  0041B4  CFF4 F008          	movff	prodh,___wmul@product+1
  7214  0041B8  5003               	movf	___wmul@multiplier,w,c
  7215  0041BA  0206               	mulwf	___wmul@multiplicand+1,c
  7216  0041BC  50F3               	movf	prodl,w,c
  7217  0041BE  2608               	addwf	___wmul@product+1,f,c
  7218  0041C0  5004               	movf	___wmul@multiplier+1,w,c
  7219  0041C2  0205               	mulwf	___wmul@multiplicand,c
  7220  0041C4  50F3               	movf	prodl,w,c
  7221  0041C6  2608               	addwf	___wmul@product+1,f,c
  7222  0041C8  C007  F003         	movff	___wmul@product,?___wmul
  7223  0041CC  C008  F004         	movff	___wmul@product+1,?___wmul+1
  7224  0041D0  0012               	return		;funcret
  7225  0041D2                     __end_of___wmul:
  7226                           	opt callstack 0
  7227                           
  7228 ;; *************** function _Ohm2C *****************
  7229 ;; Defined at:
  7230 ;;		line 86 in file "source/temperatureSensor.c"
  7231 ;; Parameters:    Size  Location     Type
  7232 ;;  x               2   76[BANK0 ] const unsigned int 
  7233 ;; Auto vars:     Size  Location     Type
  7234 ;;  logR            4   98[BANK0 ] float 
  7235 ;; Return value:  Size  Location     Type
  7236 ;;                  1    wreg      unsigned char 
  7237 ;; Registers used:
  7238 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  7239 ;; Tracked objects:
  7240 ;;		On entry : 0/0
  7241 ;;		On exit  : 0/0
  7242 ;;		Unchanged: 0/0
  7243 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7244 ;;      Params:         0       2       0       0       0       0       0       0       0
  7245 ;;      Locals:         0      24       0       0       0       0       0       0       0
  7246 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7247 ;;      Totals:         0      26       0       0       0       0       0       0       0
  7248 ;;Total ram usage:       26 bytes
  7249 ;; Hardware stack levels used:    1
  7250 ;; Hardware stack levels required when called:    6
  7251 ;; This function calls:
  7252 ;;		___fladd
  7253 ;;		___fldiv
  7254 ;;		___flmul
  7255 ;;		___fltol
  7256 ;;		___xxtofl
  7257 ;;		_logf
  7258 ;; This function is called by:
  7259 ;;		_update_ADC_results
  7260 ;; This function uses a non-reentrant model
  7261 ;;
  7262                           
  7263                           	psect	text31
  7264  002A2A                     __ptext31:
  7265                           	opt callstack 0
  7266  002A2A                     _Ohm2C:
  7267                           	opt callstack 22
  7268                           
  7269                           ;source/temperatureSensor.c: 89:     float logR=logf(x);
  7270                           
  7271                           ;incstack = 0
  7272  002A2A  C0AC  F003         	movff	Ohm2C@x,___xxtofl@val
  7273  002A2E  C0AD  F004         	movff	Ohm2C@x+1,___xxtofl@val+1
  7274  002A32  6A05               	clrf	___xxtofl@val+2,c
  7275  002A34  6A06               	clrf	___xxtofl@val+3,c
  7276  002A36  0E00               	movlw	0
  7277  002A38  ECD1  F018         	call	___xxtofl
  7278  002A3C  C003  F0AE         	movff	?___xxtofl,_Ohm2C$1777
  7279  002A40  C004  F0AF         	movff	?___xxtofl+1,_Ohm2C$1777+1
  7280  002A44  C005  F0B0         	movff	?___xxtofl+2,_Ohm2C$1777+2
  7281  002A48  C006  F0B1         	movff	?___xxtofl+3,_Ohm2C$1777+3
  7282                           
  7283                           ;source/temperatureSensor.c: 89:     float logR=logf(x);
  7284  002A4C  C0AE  F060         	movff	_Ohm2C$1777,logf@x
  7285  002A50  C0AF  F061         	movff	_Ohm2C$1777+1,logf@x+1
  7286  002A54  C0B0  F062         	movff	_Ohm2C$1777+2,logf@x+2
  7287  002A58  C0B1  F063         	movff	_Ohm2C$1777+3,logf@x+3
  7288  002A5C  ECF0  F00A         	call	_logf	;wreg free
  7289  002A60  C060  F0C2         	movff	?_logf,Ohm2C@logR
  7290  002A64  C061  F0C3         	movff	?_logf+1,Ohm2C@logR+1
  7291  002A68  C062  F0C4         	movff	?_logf+2,Ohm2C@logR+2
  7292  002A6C  C063  F0C5         	movff	?_logf+3,Ohm2C@logR+3
  7293                           
  7294                           ;source/temperatureSensor.c: 90:     return 1.0f/(
  7295  002A70  C0C2  F015         	movff	Ohm2C@logR,___flmul@a
  7296  002A74  C0C3  F016         	movff	Ohm2C@logR+1,___flmul@a+1
  7297  002A78  C0C4  F017         	movff	Ohm2C@logR+2,___flmul@a+2
  7298  002A7C  C0C5  F018         	movff	Ohm2C@logR+3,___flmul@a+3
  7299  002A80  C108  F011         	movff	_thermistor+8,___flmul@b
  7300  002A84  C109  F012         	movff	_thermistor+9,___flmul@b+1
  7301  002A88  C10A  F013         	movff	_thermistor+10,___flmul@b+2
  7302  002A8C  C10B  F014         	movff	_thermistor+11,___flmul@b+3
  7303  002A90  EC69  F00E         	call	___flmul	;wreg free
  7304  002A94  C011  F0B2         	movff	?___flmul,_Ohm2C$1778
  7305  002A98  C012  F0B3         	movff	?___flmul+1,_Ohm2C$1778+1
  7306  002A9C  C013  F0B4         	movff	?___flmul+2,_Ohm2C$1778+2
  7307  002AA0  C014  F0B5         	movff	?___flmul+3,_Ohm2C$1778+3
  7308                           
  7309                           ;source/temperatureSensor.c: 90:     return 1.0f/(
  7310  002AA4  C0C2  F015         	movff	Ohm2C@logR,___flmul@a
  7311  002AA8  C0C3  F016         	movff	Ohm2C@logR+1,___flmul@a+1
  7312  002AAC  C0C4  F017         	movff	Ohm2C@logR+2,___flmul@a+2
  7313  002AB0  C0C5  F018         	movff	Ohm2C@logR+3,___flmul@a+3
  7314  002AB4  C0B2  F011         	movff	_Ohm2C$1778,___flmul@b
  7315  002AB8  C0B3  F012         	movff	_Ohm2C$1778+1,___flmul@b+1
  7316  002ABC  C0B4  F013         	movff	_Ohm2C$1778+2,___flmul@b+2
  7317  002AC0  C0B5  F014         	movff	_Ohm2C$1778+3,___flmul@b+3
  7318  002AC4  EC69  F00E         	call	___flmul	;wreg free
  7319  002AC8  C011  F0B6         	movff	?___flmul,_Ohm2C$1779
  7320  002ACC  C012  F0B7         	movff	?___flmul+1,_Ohm2C$1779+1
  7321  002AD0  C013  F0B8         	movff	?___flmul+2,_Ohm2C$1779+2
  7322  002AD4  C014  F0B9         	movff	?___flmul+3,_Ohm2C$1779+3
  7323                           
  7324                           ;source/temperatureSensor.c: 90:     return 1.0f/(
  7325  002AD8  C100  F02E         	movff	_thermistor,___fladd@a
  7326  002ADC  C101  F02F         	movff	_thermistor+1,___fladd@a+1
  7327  002AE0  C102  F030         	movff	_thermistor+2,___fladd@a+2
  7328  002AE4  C103  F031         	movff	_thermistor+3,___fladd@a+3
  7329  002AE8  C0C2  F015         	movff	Ohm2C@logR,___flmul@a
  7330  002AEC  C0C3  F016         	movff	Ohm2C@logR+1,___flmul@a+1
  7331  002AF0  C0C4  F017         	movff	Ohm2C@logR+2,___flmul@a+2
  7332  002AF4  C0C5  F018         	movff	Ohm2C@logR+3,___flmul@a+3
  7333  002AF8  C104  F011         	movff	_thermistor+4,___flmul@b
  7334  002AFC  C105  F012         	movff	_thermistor+5,___flmul@b+1
  7335  002B00  C106  F013         	movff	_thermistor+6,___flmul@b+2
  7336  002B04  C107  F014         	movff	_thermistor+7,___flmul@b+3
  7337  002B08  EC69  F00E         	call	___flmul	;wreg free
  7338  002B0C  C011  F02A         	movff	?___flmul,___fladd@b
  7339  002B10  C012  F02B         	movff	?___flmul+1,___fladd@b+1
  7340  002B14  C013  F02C         	movff	?___flmul+2,___fladd@b+2
  7341  002B18  C014  F02D         	movff	?___flmul+3,___fladd@b+3
  7342  002B1C  EC12  F010         	call	___fladd	;wreg free
  7343  002B20  C02A  F0BA         	movff	?___fladd,_Ohm2C$1780
  7344  002B24  C02B  F0BB         	movff	?___fladd+1,_Ohm2C$1780+1
  7345  002B28  C02C  F0BC         	movff	?___fladd+2,_Ohm2C$1780+2
  7346  002B2C  C02D  F0BD         	movff	?___fladd+3,_Ohm2C$1780+3
  7347                           
  7348                           ;source/temperatureSensor.c: 90:     return 1.0f/(
  7349  002B30  C0C2  F015         	movff	Ohm2C@logR,___flmul@a
  7350  002B34  C0C3  F016         	movff	Ohm2C@logR+1,___flmul@a+1
  7351  002B38  C0C4  F017         	movff	Ohm2C@logR+2,___flmul@a+2
  7352  002B3C  C0C5  F018         	movff	Ohm2C@logR+3,___flmul@a+3
  7353  002B40  C0B6  F011         	movff	_Ohm2C$1779,___flmul@b
  7354  002B44  C0B7  F012         	movff	_Ohm2C$1779+1,___flmul@b+1
  7355  002B48  C0B8  F013         	movff	_Ohm2C$1779+2,___flmul@b+2
  7356  002B4C  C0B9  F014         	movff	_Ohm2C$1779+3,___flmul@b+3
  7357  002B50  EC69  F00E         	call	___flmul	;wreg free
  7358  002B54  C011  F02E         	movff	?___flmul,___fladd@a
  7359  002B58  C012  F02F         	movff	?___flmul+1,___fladd@a+1
  7360  002B5C  C013  F030         	movff	?___flmul+2,___fladd@a+2
  7361  002B60  C014  F031         	movff	?___flmul+3,___fladd@a+3
  7362  002B64  C0BA  F02A         	movff	_Ohm2C$1780,___fladd@b
  7363  002B68  C0BB  F02B         	movff	_Ohm2C$1780+1,___fladd@b+1
  7364  002B6C  C0BC  F02C         	movff	_Ohm2C$1780+2,___fladd@b+2
  7365  002B70  C0BD  F02D         	movff	_Ohm2C$1780+3,___fladd@b+3
  7366  002B74  EC12  F010         	call	___fladd	;wreg free
  7367  002B78  C02A  F046         	movff	?___fladd,___fldiv@a
  7368  002B7C  C02B  F047         	movff	?___fladd+1,___fldiv@a+1
  7369  002B80  C02C  F048         	movff	?___fladd+2,___fldiv@a+2
  7370  002B84  C02D  F049         	movff	?___fladd+3,___fldiv@a+3
  7371  002B88  0E00               	movlw	0
  7372  002B8A  6E42               	movwf	___fldiv@b,c
  7373  002B8C  0E00               	movlw	0
  7374  002B8E  6E43               	movwf	___fldiv@b+1,c
  7375  002B90  0E80               	movlw	128
  7376  002B92  6E44               	movwf	___fldiv@b+2,c
  7377  002B94  0E3F               	movlw	63
  7378  002B96  6E45               	movwf	___fldiv@b+3,c
  7379  002B98  EC98  F011         	call	___fldiv	;wreg free
  7380  002B9C  C042  F0BE         	movff	?___fldiv,_Ohm2C$1781
  7381  002BA0  C043  F0BF         	movff	?___fldiv+1,_Ohm2C$1781+1
  7382  002BA4  C044  F0C0         	movff	?___fldiv+2,_Ohm2C$1781+2
  7383  002BA8  C045  F0C1         	movff	?___fldiv+3,_Ohm2C$1781+3
  7384                           
  7385                           ;source/temperatureSensor.c: 90:     return 1.0f/(
  7386  002BAC  0E33               	movlw	51
  7387  002BAE  6E2E               	movwf	___fladd@a,c
  7388  002BB0  0E93               	movlw	147
  7389  002BB2  6E2F               	movwf	___fladd@a+1,c
  7390  002BB4  0E88               	movlw	136
  7391  002BB6  6E30               	movwf	___fladd@a+2,c
  7392  002BB8  0EC3               	movlw	195
  7393  002BBA  6E31               	movwf	___fladd@a+3,c
  7394  002BBC  C0BE  F02A         	movff	_Ohm2C$1781,___fladd@b
  7395  002BC0  C0BF  F02B         	movff	_Ohm2C$1781+1,___fladd@b+1
  7396  002BC4  C0C0  F02C         	movff	_Ohm2C$1781+2,___fladd@b+2
  7397  002BC8  C0C1  F02D         	movff	_Ohm2C$1781+3,___fladd@b+3
  7398  002BCC  EC12  F010         	call	___fladd	;wreg free
  7399  002BD0  C02A  F060         	movff	?___fladd,___fltol@f1
  7400  002BD4  C02B  F061         	movff	?___fladd+1,___fltol@f1+1
  7401  002BD8  C02C  F062         	movff	?___fladd+2,___fltol@f1+2
  7402  002BDC  C02D  F063         	movff	?___fladd+3,___fltol@f1+3
  7403  002BE0  EC68  F01C         	call	___fltol	;wreg free
  7404  002BE4  0100               	movlb	0	; () banked
  7405  002BE6  5160               	movf	?___fltol& (0+255),w,b
  7406                           
  7407                           ; BSR set to: 0
  7408  002BE8  0012               	return		;funcret
  7409  002BEA                     __end_of_Ohm2C:
  7410                           	opt callstack 0
  7411                           
  7412 ;; *************** function _logf *****************
  7413 ;; Defined at:
  7414 ;;		line 28 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\logf.c"
  7415 ;; Parameters:    Size  Location     Type
  7416 ;;  x               4    0[BANK0 ] float 
  7417 ;; Auto vars:     Size  Location     Type
  7418 ;;  ix              4   72[BANK0 ] unsigned long 
  7419 ;;  f               4   68[BANK0 ] float 
  7420 ;;  u               4   64[BANK0 ] struct .
  7421 ;;  w               4   56[BANK0 ] float 
  7422 ;;  z               4   52[BANK0 ] float 
  7423 ;;  s               4   48[BANK0 ] float 
  7424 ;;  dk              4   44[BANK0 ] float 
  7425 ;;  hfsq            4   40[BANK0 ] float 
  7426 ;;  t2              4   18[BANK0 ] float 
  7427 ;;  t1              4   14[BANK0 ] float 
  7428 ;;  R               4   10[BANK0 ] float 
  7429 ;;  k               2   38[BANK0 ] int 
  7430 ;; Return value:  Size  Location     Type
  7431 ;;                  4    0[BANK0 ] float 
  7432 ;; Registers used:
  7433 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  7434 ;; Tracked objects:
  7435 ;;		On entry : 0/0
  7436 ;;		On exit  : 0/0
  7437 ;;		Unchanged: 0/0
  7438 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7439 ;;      Params:         0       4       0       0       0       0       0       0       0
  7440 ;;      Locals:         0      66       0       0       0       0       0       0       0
  7441 ;;      Temps:          0       6       0       0       0       0       0       0       0
  7442 ;;      Totals:         0      76       0       0       0       0       0       0       0
  7443 ;;Total ram usage:       76 bytes
  7444 ;; Hardware stack levels used:    1
  7445 ;; Hardware stack levels required when called:    5
  7446 ;; This function calls:
  7447 ;;		___fladd
  7448 ;;		___fldiv
  7449 ;;		___flmul
  7450 ;;		___flsub
  7451 ;;		___xxtofl
  7452 ;; This function is called by:
  7453 ;;		_Ohm2C
  7454 ;; This function uses a non-reentrant model
  7455 ;;
  7456                           
  7457                           	psect	text32
  7458  0015E0                     __ptext32:
  7459                           	opt callstack 0
  7460  0015E0                     _logf:
  7461                           	opt callstack 22
  7462                           
  7463                           ; BSR set to: 0
  7464                           ;incstack = 0
  7465  0015E0  C0EA  F0A0         	movff	logf@F469,logf@u
  7466  0015E4  C0EB  F0A1         	movff	logf@F469+1,logf@u+1
  7467  0015E8  C0EC  F0A2         	movff	logf@F469+2,logf@u+2
  7468  0015EC  C0ED  F0A3         	movff	logf@F469+3,logf@u+3
  7469  0015F0  C060  F0A0         	movff	logf@x,logf@u
  7470  0015F4  C061  F0A1         	movff	logf@x+1,logf@u+1
  7471  0015F8  C062  F0A2         	movff	logf@x+2,logf@u+2
  7472  0015FC  C063  F0A3         	movff	logf@x+3,logf@u+3
  7473  001600  C0A0  F0A8         	movff	logf@u,logf@ix
  7474  001604  C0A1  F0A9         	movff	logf@u+1,logf@ix+1
  7475  001608  C0A2  F0AA         	movff	logf@u+2,logf@ix+2
  7476  00160C  C0A3  F0AB         	movff	logf@u+3,logf@ix+3
  7477  001610  0E00               	movlw	0
  7478  001612  0100               	movlb	0	; () banked
  7479  001614  6F87               	movwf	(logf@k+1)& (0+255),b
  7480  001616  0E00               	movlw	0
  7481  001618  6F86               	movwf	logf@k& (0+255),b
  7482                           
  7483                           ; BSR set to: 0
  7484  00161A  51AB               	movf	(logf@ix+3)& (0+255),w,b
  7485  00161C  E104               	bnz	u5380
  7486  00161E  0E80               	movlw	128
  7487  001620  5DAA               	subwf	(logf@ix+2)& (0+255),w,b
  7488  001622  A0D8               	btfss	status,0,c
  7489  001624  D017               	goto	u5400
  7490  001626                     u5380:
  7491                           
  7492                           ; BSR set to: 0
  7493  001626  C0A8  F064         	movff	logf@ix,??_logf
  7494  00162A  C0A9  F065         	movff	logf@ix+1,??_logf+1
  7495  00162E  C0AA  F066         	movff	logf@ix+2,??_logf+2
  7496  001632  C0AB  F067         	movff	logf@ix+3,??_logf+3
  7497  001636  0E20               	movlw	32
  7498  001638  D005               	goto	u5390
  7499  00163A                     u5395:
  7500  00163A  90D8               	bcf	status,0,c
  7501  00163C  3367               	rrcf	(??_logf+3)& (0+255),f,b
  7502  00163E  3366               	rrcf	(??_logf+2)& (0+255),f,b
  7503  001640  3365               	rrcf	(??_logf+1)& (0+255),f,b
  7504  001642  3364               	rrcf	??_logf& (0+255),f,b
  7505  001644                     u5390:
  7506  001644  2EE8               	decfsz	wreg,f,c
  7507  001646  D7F9               	goto	u5395
  7508  001648  5164               	movf	??_logf& (0+255),w,b
  7509  00164A  1165               	iorwf	(??_logf+1)& (0+255),w,b
  7510  00164C  1166               	iorwf	(??_logf+2)& (0+255),w,b
  7511  00164E  1167               	iorwf	(??_logf+3)& (0+255),w,b
  7512  001650  B4D8               	btfsc	status,2,c
  7513  001652  D0AF               	goto	l4675
  7514  001654                     u5400:
  7515                           
  7516                           ; BSR set to: 0
  7517  001654  90D8               	bcf	status,0,c
  7518  001656  35A8               	rlcf	logf@ix& (0+255),w,b
  7519  001658  6F64               	movwf	??_logf& (0+255),b
  7520  00165A  35A9               	rlcf	(logf@ix+1)& (0+255),w,b
  7521  00165C  6F65               	movwf	(??_logf+1)& (0+255),b
  7522  00165E  35AA               	rlcf	(logf@ix+2)& (0+255),w,b
  7523  001660  6F66               	movwf	(??_logf+2)& (0+255),b
  7524  001662  35AB               	rlcf	(logf@ix+3)& (0+255),w,b
  7525  001664  6F67               	movwf	(??_logf+3)& (0+255),b
  7526  001666  5164               	movf	??_logf& (0+255),w,b
  7527  001668  1165               	iorwf	(??_logf+1)& (0+255),w,b
  7528  00166A  1166               	iorwf	(??_logf+2)& (0+255),w,b
  7529  00166C  1167               	iorwf	(??_logf+3)& (0+255),w,b
  7530  00166E  A4D8               	btfss	status,2,c
  7531  001670  D02D               	goto	l4661
  7532                           
  7533                           ; BSR set to: 0
  7534  001672  0E00               	movlw	0
  7535  001674  6E42               	movwf	___fldiv@b,c
  7536  001676  0E00               	movlw	0
  7537  001678  6E43               	movwf	___fldiv@b+1,c
  7538  00167A  0E80               	movlw	128
  7539  00167C  6E44               	movwf	___fldiv@b+2,c
  7540  00167E  0EBF               	movlw	191
  7541  001680  6E45               	movwf	___fldiv@b+3,c
  7542  001682  C060  F015         	movff	logf@x,___flmul@a
  7543  001686  C061  F016         	movff	logf@x+1,___flmul@a+1
  7544  00168A  C062  F017         	movff	logf@x+2,___flmul@a+2
  7545  00168E  C063  F018         	movff	logf@x+3,___flmul@a+3
  7546  001692  C060  F011         	movff	logf@x,___flmul@b
  7547  001696  C061  F012         	movff	logf@x+1,___flmul@b+1
  7548  00169A  C062  F013         	movff	logf@x+2,___flmul@b+2
  7549  00169E  C063  F014         	movff	logf@x+3,___flmul@b+3
  7550  0016A2  EC69  F00E         	call	___flmul	;wreg free
  7551  0016A6  C011  F046         	movff	?___flmul,___fldiv@a
  7552  0016AA  C012  F047         	movff	?___flmul+1,___fldiv@a+1
  7553  0016AE  C013  F048         	movff	?___flmul+2,___fldiv@a+2
  7554  0016B2  C014  F049         	movff	?___flmul+3,___fldiv@a+3
  7555  0016B6  EC98  F011         	call	___fldiv	;wreg free
  7556  0016BA  C042  F060         	movff	?___fldiv,?_logf
  7557  0016BE  C043  F061         	movff	?___fldiv+1,?_logf+1
  7558  0016C2  C044  F062         	movff	?___fldiv+2,?_logf+2
  7559  0016C6  C045  F063         	movff	?___fldiv+3,?_logf+3
  7560  0016CA  0012               	return	
  7561  0016CC                     l4661:
  7562                           
  7563                           ; BSR set to: 0
  7564  0016CC  C0A8  F064         	movff	logf@ix,??_logf
  7565  0016D0  C0A9  F065         	movff	logf@ix+1,??_logf+1
  7566  0016D4  C0AA  F066         	movff	logf@ix+2,??_logf+2
  7567  0016D8  C0AB  F067         	movff	logf@ix+3,??_logf+3
  7568  0016DC  0E20               	movlw	32
  7569  0016DE  D005               	goto	u5420
  7570  0016E0                     u5425:
  7571  0016E0  90D8               	bcf	status,0,c
  7572  0016E2  3367               	rrcf	(??_logf+3)& (0+255),f,b
  7573  0016E4  3366               	rrcf	(??_logf+2)& (0+255),f,b
  7574  0016E6  3365               	rrcf	(??_logf+1)& (0+255),f,b
  7575  0016E8  3364               	rrcf	??_logf& (0+255),f,b
  7576  0016EA                     u5420:
  7577  0016EA  2EE8               	decfsz	wreg,f,c
  7578  0016EC  D7F9               	goto	u5425
  7579  0016EE  5164               	movf	??_logf& (0+255),w,b
  7580  0016F0  1165               	iorwf	(??_logf+1)& (0+255),w,b
  7581  0016F2  1166               	iorwf	(??_logf+2)& (0+255),w,b
  7582  0016F4  1167               	iorwf	(??_logf+3)& (0+255),w,b
  7583  0016F6  B4D8               	btfsc	status,2,c
  7584  0016F8  D02D               	goto	l4667
  7585                           
  7586                           ; BSR set to: 0
  7587  0016FA  C060  F03E         	movff	logf@x,___flsub@a
  7588  0016FE  C061  F03F         	movff	logf@x+1,___flsub@a+1
  7589  001702  C062  F040         	movff	logf@x+2,___flsub@a+2
  7590  001706  C063  F041         	movff	logf@x+3,___flsub@a+3
  7591  00170A  C060  F03A         	movff	logf@x,___flsub@b
  7592  00170E  C061  F03B         	movff	logf@x+1,___flsub@b+1
  7593  001712  C062  F03C         	movff	logf@x+2,___flsub@b+2
  7594  001716  C063  F03D         	movff	logf@x+3,___flsub@b+3
  7595  00171A  EC11  F01F         	call	___flsub	;wreg free
  7596  00171E  C03A  F042         	movff	?___flsub,___fldiv@b
  7597  001722  C03B  F043         	movff	?___flsub+1,___fldiv@b+1
  7598  001726  C03C  F044         	movff	?___flsub+2,___fldiv@b+2
  7599  00172A  C03D  F045         	movff	?___flsub+3,___fldiv@b+3
  7600  00172E  0E00               	movlw	0
  7601  001730  6E46               	movwf	___fldiv@a,c
  7602  001732  0E00               	movlw	0
  7603  001734  6E47               	movwf	___fldiv@a+1,c
  7604  001736  0E00               	movlw	0
  7605  001738  6E48               	movwf	___fldiv@a+2,c
  7606  00173A  0E00               	movlw	0
  7607  00173C  6E49               	movwf	___fldiv@a+3,c
  7608  00173E  EC98  F011         	call	___fldiv	;wreg free
  7609  001742  C042  F060         	movff	?___fldiv,?_logf
  7610  001746  C043  F061         	movff	?___fldiv+1,?_logf+1
  7611  00174A  C044  F062         	movff	?___fldiv+2,?_logf+2
  7612  00174E  C045  F063         	movff	?___fldiv+3,?_logf+3
  7613  001752  0012               	return	
  7614  001754                     l4667:
  7615                           
  7616                           ; BSR set to: 0
  7617  001754  0EE7               	movlw	231
  7618  001756  2786               	addwf	logf@k& (0+255),f,b
  7619  001758  0EFF               	movlw	255
  7620  00175A  2387               	addwfc	(logf@k+1)& (0+255),f,b
  7621                           
  7622                           ; BSR set to: 0
  7623  00175C  C060  F011         	movff	logf@x,___flmul@b
  7624  001760  C061  F012         	movff	logf@x+1,___flmul@b+1
  7625  001764  C062  F013         	movff	logf@x+2,___flmul@b+2
  7626  001768  C063  F014         	movff	logf@x+3,___flmul@b+3
  7627  00176C  0E00               	movlw	0
  7628  00176E  6E15               	movwf	___flmul@a,c
  7629  001770  0E00               	movlw	0
  7630  001772  6E16               	movwf	___flmul@a+1,c
  7631  001774  0E00               	movlw	0
  7632  001776  6E17               	movwf	___flmul@a+2,c
  7633  001778  0E4C               	movlw	76
  7634  00177A  6E18               	movwf	___flmul@a+3,c
  7635  00177C  EC69  F00E         	call	___flmul	;wreg free
  7636  001780  C011  F060         	movff	?___flmul,logf@x
  7637  001784  C012  F061         	movff	?___flmul+1,logf@x+1
  7638  001788  C013  F062         	movff	?___flmul+2,logf@x+2
  7639  00178C  C014  F063         	movff	?___flmul+3,logf@x+3
  7640  001790  C060  F0A0         	movff	logf@x,logf@u
  7641  001794  C061  F0A1         	movff	logf@x+1,logf@u+1
  7642  001798  C062  F0A2         	movff	logf@x+2,logf@u+2
  7643  00179C  C063  F0A3         	movff	logf@x+3,logf@u+3
  7644  0017A0  C0A0  F0A8         	movff	logf@u,logf@ix
  7645  0017A4  C0A1  F0A9         	movff	logf@u+1,logf@ix+1
  7646  0017A8  C0A2  F0AA         	movff	logf@u+2,logf@ix+2
  7647  0017AC  C0A3  F0AB         	movff	logf@u+3,logf@ix+3
  7648  0017B0  D021               	goto	l4687
  7649  0017B2                     l4675:
  7650                           
  7651                           ; BSR set to: 0
  7652  0017B2  0E80               	movlw	128
  7653  0017B4  5DAA               	subwf	(logf@ix+2)& (0+255),w,b
  7654  0017B6  0E7F               	movlw	127
  7655  0017B8  59AB               	subwfb	(logf@ix+3)& (0+255),w,b
  7656  0017BA  A0D8               	btfss	status,0,c
  7657  0017BC  D009               	goto	l4681
  7658                           
  7659                           ; BSR set to: 0
  7660  0017BE  C060  F060         	movff	logf@x,?_logf
  7661  0017C2  C061  F061         	movff	logf@x+1,?_logf+1
  7662  0017C6  C062  F062         	movff	logf@x+2,?_logf+2
  7663  0017CA  C063  F063         	movff	logf@x+3,?_logf+3
  7664  0017CE  0012               	return	
  7665  0017D0                     l4681:
  7666                           
  7667                           ; BSR set to: 0
  7668  0017D0  0E80               	movlw	128
  7669  0017D2  19AA               	xorwf	(logf@ix+2)& (0+255),w,b
  7670  0017D4  E10F               	bnz	l4687
  7671  0017D6  0E3F               	movlw	63
  7672  0017D8  19AB               	xorwf	(logf@ix+3)& (0+255),w,b
  7673  0017DA  11A8               	iorwf	logf@ix& (0+255),w,b
  7674  0017DC  11A9               	iorwf	(logf@ix+1)& (0+255),w,b
  7675  0017DE  A4D8               	btfss	status,2,c
  7676  0017E0  D009               	goto	l4687
  7677                           
  7678                           ; BSR set to: 0
  7679  0017E2  0E00               	movlw	0
  7680  0017E4  6F60               	movwf	?_logf& (0+255),b
  7681  0017E6  0E00               	movlw	0
  7682  0017E8  6F61               	movwf	(?_logf+1)& (0+255),b
  7683  0017EA  0E00               	movlw	0
  7684  0017EC  6F62               	movwf	(?_logf+2)& (0+255),b
  7685  0017EE  0E00               	movlw	0
  7686  0017F0  6F63               	movwf	(?_logf+3)& (0+255),b
  7687  0017F2  0012               	return	
  7688  0017F4                     l4687:
  7689  0017F4  0E0D               	movlw	13
  7690  0017F6  0100               	movlb	0	; () banked
  7691  0017F8  27A8               	addwf	logf@ix& (0+255),f,b
  7692  0017FA  0EFB               	movlw	251
  7693  0017FC  23A9               	addwfc	(logf@ix+1)& (0+255),f,b
  7694  0017FE  0E4A               	movlw	74
  7695  001800  23AA               	addwfc	(logf@ix+2)& (0+255),f,b
  7696  001802  0E00               	movlw	0
  7697  001804  23AB               	addwfc	(logf@ix+3)& (0+255),f,b
  7698  001806  0E81               	movlw	129
  7699  001808  6F64               	movwf	??_logf& (0+255),b
  7700  00180A  0EFF               	movlw	255
  7701  00180C  6F65               	movwf	(??_logf+1)& (0+255),b
  7702  00180E  C0A8  F066         	movff	logf@ix,??_logf+2
  7703  001812  C0A9  F067         	movff	logf@ix+1,??_logf+3
  7704  001816  C0AA  F068         	movff	logf@ix+2,??_logf+4
  7705  00181A  C0AB  F069         	movff	logf@ix+3,??_logf+5
  7706  00181E  0E18               	movlw	24
  7707  001820  D005               	goto	u5460
  7708  001822                     u5465:
  7709  001822  90D8               	bcf	status,0,c
  7710  001824  3369               	rrcf	(??_logf+5)& (0+255),f,b
  7711  001826  3368               	rrcf	(??_logf+4)& (0+255),f,b
  7712  001828  3367               	rrcf	(??_logf+3)& (0+255),f,b
  7713  00182A  3366               	rrcf	(??_logf+2)& (0+255),f,b
  7714  00182C                     u5460:
  7715  00182C  2EE8               	decfsz	wreg,f,c
  7716  00182E  D7F9               	goto	u5465
  7717  001830  5164               	movf	??_logf& (0+255),w,b
  7718  001832  2766               	addwf	(??_logf+2)& (0+255),f,b
  7719  001834  5165               	movf	(??_logf+1)& (0+255),w,b
  7720  001836  2367               	addwfc	(??_logf+3)& (0+255),f,b
  7721  001838  5166               	movf	(??_logf+2)& (0+255),w,b
  7722  00183A  2786               	addwf	logf@k& (0+255),f,b
  7723  00183C  5167               	movf	(??_logf+3)& (0+255),w,b
  7724  00183E  2387               	addwfc	(logf@k+1)& (0+255),f,b
  7725  001840  0EFF               	movlw	255
  7726  001842  15A8               	andwf	logf@ix& (0+255),w,b
  7727  001844  6F64               	movwf	??_logf& (0+255),b
  7728  001846  0EFF               	movlw	255
  7729  001848  15A9               	andwf	(logf@ix+1)& (0+255),w,b
  7730  00184A  6F65               	movwf	(??_logf+1)& (0+255),b
  7731  00184C  0E7F               	movlw	127
  7732  00184E  15AA               	andwf	(logf@ix+2)& (0+255),w,b
  7733  001850  6F66               	movwf	(??_logf+2)& (0+255),b
  7734  001852  0E00               	movlw	0
  7735  001854  15AB               	andwf	(logf@ix+3)& (0+255),w,b
  7736  001856  6F67               	movwf	(??_logf+3)& (0+255),b
  7737  001858  0EF3               	movlw	243
  7738  00185A  2564               	addwf	??_logf& (0+255),w,b
  7739  00185C  6FA8               	movwf	logf@ix& (0+255),b
  7740  00185E  0E04               	movlw	4
  7741  001860  2165               	addwfc	(??_logf+1)& (0+255),w,b
  7742  001862  6FA9               	movwf	(logf@ix+1)& (0+255),b
  7743  001864  0E35               	movlw	53
  7744  001866  2166               	addwfc	(??_logf+2)& (0+255),w,b
  7745  001868  6FAA               	movwf	(logf@ix+2)& (0+255),b
  7746  00186A  0E3F               	movlw	63
  7747  00186C  2167               	addwfc	(??_logf+3)& (0+255),w,b
  7748  00186E  6FAB               	movwf	(logf@ix+3)& (0+255),b
  7749                           
  7750                           ; BSR set to: 0
  7751  001870  C0A8  F0A0         	movff	logf@ix,logf@u
  7752  001874  C0A9  F0A1         	movff	logf@ix+1,logf@u+1
  7753  001878  C0AA  F0A2         	movff	logf@ix+2,logf@u+2
  7754  00187C  C0AB  F0A3         	movff	logf@ix+3,logf@u+3
  7755                           
  7756                           ; BSR set to: 0
  7757  001880  C0A0  F060         	movff	logf@u,logf@x
  7758  001884  C0A1  F061         	movff	logf@u+1,logf@x+1
  7759  001888  C0A2  F062         	movff	logf@u+2,logf@x+2
  7760  00188C  C0A3  F063         	movff	logf@u+3,logf@x+3
  7761                           
  7762                           ; BSR set to: 0
  7763  001890  C060  F02A         	movff	logf@x,___fladd@b
  7764  001894  C061  F02B         	movff	logf@x+1,___fladd@b+1
  7765  001898  C062  F02C         	movff	logf@x+2,___fladd@b+2
  7766  00189C  C063  F02D         	movff	logf@x+3,___fladd@b+3
  7767  0018A0  0E00               	movlw	0
  7768  0018A2  6E2E               	movwf	___fladd@a,c
  7769  0018A4  0E00               	movlw	0
  7770  0018A6  6E2F               	movwf	___fladd@a+1,c
  7771  0018A8  0E80               	movlw	128
  7772  0018AA  6E30               	movwf	___fladd@a+2,c
  7773  0018AC  0EBF               	movlw	191
  7774  0018AE  6E31               	movwf	___fladd@a+3,c
  7775  0018B0  EC12  F010         	call	___fladd	;wreg free
  7776  0018B4  C02A  F0A4         	movff	?___fladd,logf@f
  7777  0018B8  C02B  F0A5         	movff	?___fladd+1,logf@f+1
  7778  0018BC  C02C  F0A6         	movff	?___fladd+2,logf@f+2
  7779  0018C0  C02D  F0A7         	movff	?___fladd+3,logf@f+3
  7780  0018C4  C0A4  F042         	movff	logf@f,___fldiv@b
  7781  0018C8  C0A5  F043         	movff	logf@f+1,___fldiv@b+1
  7782  0018CC  C0A6  F044         	movff	logf@f+2,___fldiv@b+2
  7783  0018D0  C0A7  F045         	movff	logf@f+3,___fldiv@b+3
  7784  0018D4  0E00               	movlw	0
  7785  0018D6  6E2E               	movwf	___fladd@a,c
  7786  0018D8  0E00               	movlw	0
  7787  0018DA  6E2F               	movwf	___fladd@a+1,c
  7788  0018DC  0E00               	movlw	0
  7789  0018DE  6E30               	movwf	___fladd@a+2,c
  7790  0018E0  0E40               	movlw	64
  7791  0018E2  6E31               	movwf	___fladd@a+3,c
  7792  0018E4  C0A4  F02A         	movff	logf@f,___fladd@b
  7793  0018E8  C0A5  F02B         	movff	logf@f+1,___fladd@b+1
  7794  0018EC  C0A6  F02C         	movff	logf@f+2,___fladd@b+2
  7795  0018F0  C0A7  F02D         	movff	logf@f+3,___fladd@b+3
  7796  0018F4  EC12  F010         	call	___fladd	;wreg free
  7797  0018F8  C02A  F046         	movff	?___fladd,___fldiv@a
  7798  0018FC  C02B  F047         	movff	?___fladd+1,___fldiv@a+1
  7799  001900  C02C  F048         	movff	?___fladd+2,___fldiv@a+2
  7800  001904  C02D  F049         	movff	?___fladd+3,___fldiv@a+3
  7801  001908  EC98  F011         	call	___fldiv	;wreg free
  7802  00190C  C042  F090         	movff	?___fldiv,logf@s
  7803  001910  C043  F091         	movff	?___fldiv+1,logf@s+1
  7804  001914  C044  F092         	movff	?___fldiv+2,logf@s+2
  7805  001918  C045  F093         	movff	?___fldiv+3,logf@s+3
  7806  00191C  C090  F011         	movff	logf@s,___flmul@b
  7807  001920  C091  F012         	movff	logf@s+1,___flmul@b+1
  7808  001924  C092  F013         	movff	logf@s+2,___flmul@b+2
  7809  001928  C093  F014         	movff	logf@s+3,___flmul@b+3
  7810  00192C  C090  F015         	movff	logf@s,___flmul@a
  7811  001930  C091  F016         	movff	logf@s+1,___flmul@a+1
  7812  001934  C092  F017         	movff	logf@s+2,___flmul@a+2
  7813  001938  C093  F018         	movff	logf@s+3,___flmul@a+3
  7814  00193C  EC69  F00E         	call	___flmul	;wreg free
  7815  001940  C011  F094         	movff	?___flmul,logf@z
  7816  001944  C012  F095         	movff	?___flmul+1,logf@z+1
  7817  001948  C013  F096         	movff	?___flmul+2,logf@z+2
  7818  00194C  C014  F097         	movff	?___flmul+3,logf@z+3
  7819  001950  C094  F011         	movff	logf@z,___flmul@b
  7820  001954  C095  F012         	movff	logf@z+1,___flmul@b+1
  7821  001958  C096  F013         	movff	logf@z+2,___flmul@b+2
  7822  00195C  C097  F014         	movff	logf@z+3,___flmul@b+3
  7823  001960  C094  F015         	movff	logf@z,___flmul@a
  7824  001964  C095  F016         	movff	logf@z+1,___flmul@a+1
  7825  001968  C096  F017         	movff	logf@z+2,___flmul@a+2
  7826  00196C  C097  F018         	movff	logf@z+3,___flmul@a+3
  7827  001970  EC69  F00E         	call	___flmul	;wreg free
  7828  001974  C011  F098         	movff	?___flmul,logf@w
  7829  001978  C012  F099         	movff	?___flmul+1,logf@w+1
  7830  00197C  C013  F09A         	movff	?___flmul+2,logf@w+2
  7831  001980  C014  F09B         	movff	?___flmul+3,logf@w+3
  7832  001984  0E13               	movlw	19
  7833  001986  6E2E               	movwf	___fladd@a,c
  7834  001988  0ECE               	movlw	206
  7835  00198A  6E2F               	movwf	___fladd@a+1,c
  7836  00198C  0ECC               	movlw	204
  7837  00198E  6E30               	movwf	___fladd@a+2,c
  7838  001990  0E3E               	movlw	62
  7839  001992  6E31               	movwf	___fladd@a+3,c
  7840  001994  0E26               	movlw	38
  7841  001996  6E15               	movwf	___flmul@a,c
  7842  001998  0E9E               	movlw	158
  7843  00199A  6E16               	movwf	___flmul@a+1,c
  7844  00199C  0E78               	movlw	120
  7845  00199E  6E17               	movwf	___flmul@a+2,c
  7846  0019A0  0E3E               	movlw	62
  7847  0019A2  6E18               	movwf	___flmul@a+3,c
  7848  0019A4  C098  F011         	movff	logf@w,___flmul@b
  7849  0019A8  C099  F012         	movff	logf@w+1,___flmul@b+1
  7850  0019AC  C09A  F013         	movff	logf@w+2,___flmul@b+2
  7851  0019B0  C09B  F014         	movff	logf@w+3,___flmul@b+3
  7852  0019B4  EC69  F00E         	call	___flmul	;wreg free
  7853  0019B8  C011  F02A         	movff	?___flmul,___fladd@b
  7854  0019BC  C012  F02B         	movff	?___flmul+1,___fladd@b+1
  7855  0019C0  C013  F02C         	movff	?___flmul+2,___fladd@b+2
  7856  0019C4  C014  F02D         	movff	?___flmul+3,___fladd@b+3
  7857  0019C8  EC12  F010         	call	___fladd	;wreg free
  7858  0019CC  C02A  F09C         	movff	?___fladd,_logf$1782
  7859  0019D0  C02B  F09D         	movff	?___fladd+1,_logf$1782+1
  7860  0019D4  C02C  F09E         	movff	?___fladd+2,_logf$1782+2
  7861  0019D8  C02D  F09F         	movff	?___fladd+3,_logf$1782+3
  7862  0019DC  C09C  F011         	movff	_logf$1782,___flmul@b
  7863  0019E0  C09D  F012         	movff	_logf$1782+1,___flmul@b+1
  7864  0019E4  C09E  F013         	movff	_logf$1782+2,___flmul@b+2
  7865  0019E8  C09F  F014         	movff	_logf$1782+3,___flmul@b+3
  7866  0019EC  C098  F015         	movff	logf@w,___flmul@a
  7867  0019F0  C099  F016         	movff	logf@w+1,___flmul@a+1
  7868  0019F4  C09A  F017         	movff	logf@w+2,___flmul@a+2
  7869  0019F8  C09B  F018         	movff	logf@w+3,___flmul@a+3
  7870  0019FC  EC69  F00E         	call	___flmul	;wreg free
  7871  001A00  C011  F06E         	movff	?___flmul,logf@t1
  7872  001A04  C012  F06F         	movff	?___flmul+1,logf@t1+1
  7873  001A08  C013  F070         	movff	?___flmul+2,logf@t1+2
  7874  001A0C  C014  F071         	movff	?___flmul+3,logf@t1+3
  7875  001A10  0EAA               	movlw	170
  7876  001A12  6E2E               	movwf	___fladd@a,c
  7877  001A14  0EAA               	movlw	170
  7878  001A16  6E2F               	movwf	___fladd@a+1,c
  7879  001A18  0E2A               	movlw	42
  7880  001A1A  6E30               	movwf	___fladd@a+2,c
  7881  001A1C  0E3F               	movlw	63
  7882  001A1E  6E31               	movwf	___fladd@a+3,c
  7883  001A20  0EEE               	movlw	238
  7884  001A22  6E15               	movwf	___flmul@a,c
  7885  001A24  0EE9               	movlw	233
  7886  001A26  6E16               	movwf	___flmul@a+1,c
  7887  001A28  0E91               	movlw	145
  7888  001A2A  6E17               	movwf	___flmul@a+2,c
  7889  001A2C  0E3E               	movlw	62
  7890  001A2E  6E18               	movwf	___flmul@a+3,c
  7891  001A30  C098  F011         	movff	logf@w,___flmul@b
  7892  001A34  C099  F012         	movff	logf@w+1,___flmul@b+1
  7893  001A38  C09A  F013         	movff	logf@w+2,___flmul@b+2
  7894  001A3C  C09B  F014         	movff	logf@w+3,___flmul@b+3
  7895  001A40  EC69  F00E         	call	___flmul	;wreg free
  7896  001A44  C011  F02A         	movff	?___flmul,___fladd@b
  7897  001A48  C012  F02B         	movff	?___flmul+1,___fladd@b+1
  7898  001A4C  C013  F02C         	movff	?___flmul+2,___fladd@b+2
  7899  001A50  C014  F02D         	movff	?___flmul+3,___fladd@b+3
  7900  001A54  EC12  F010         	call	___fladd	;wreg free
  7901  001A58  C02A  F09C         	movff	?___fladd,_logf$1782
  7902  001A5C  C02B  F09D         	movff	?___fladd+1,_logf$1782+1
  7903  001A60  C02C  F09E         	movff	?___fladd+2,_logf$1782+2
  7904  001A64  C02D  F09F         	movff	?___fladd+3,_logf$1782+3
  7905  001A68  C09C  F011         	movff	_logf$1782,___flmul@b
  7906  001A6C  C09D  F012         	movff	_logf$1782+1,___flmul@b+1
  7907  001A70  C09E  F013         	movff	_logf$1782+2,___flmul@b+2
  7908  001A74  C09F  F014         	movff	_logf$1782+3,___flmul@b+3
  7909  001A78  C094  F015         	movff	logf@z,___flmul@a
  7910  001A7C  C095  F016         	movff	logf@z+1,___flmul@a+1
  7911  001A80  C096  F017         	movff	logf@z+2,___flmul@a+2
  7912  001A84  C097  F018         	movff	logf@z+3,___flmul@a+3
  7913  001A88  EC69  F00E         	call	___flmul	;wreg free
  7914  001A8C  C011  F072         	movff	?___flmul,logf@t2
  7915  001A90  C012  F073         	movff	?___flmul+1,logf@t2+1
  7916  001A94  C013  F074         	movff	?___flmul+2,logf@t2+2
  7917  001A98  C014  F075         	movff	?___flmul+3,logf@t2+3
  7918  001A9C  C072  F02A         	movff	logf@t2,___fladd@b
  7919  001AA0  C073  F02B         	movff	logf@t2+1,___fladd@b+1
  7920  001AA4  C074  F02C         	movff	logf@t2+2,___fladd@b+2
  7921  001AA8  C075  F02D         	movff	logf@t2+3,___fladd@b+3
  7922  001AAC  C06E  F02E         	movff	logf@t1,___fladd@a
  7923  001AB0  C06F  F02F         	movff	logf@t1+1,___fladd@a+1
  7924  001AB4  C070  F030         	movff	logf@t1+2,___fladd@a+2
  7925  001AB8  C071  F031         	movff	logf@t1+3,___fladd@a+3
  7926  001ABC  EC12  F010         	call	___fladd	;wreg free
  7927  001AC0  C02A  F06A         	movff	?___fladd,logf@R
  7928  001AC4  C02B  F06B         	movff	?___fladd+1,logf@R+1
  7929  001AC8  C02C  F06C         	movff	?___fladd+2,logf@R+2
  7930  001ACC  C02D  F06D         	movff	?___fladd+3,logf@R+3
  7931  001AD0  0E00               	movlw	0
  7932  001AD2  6E15               	movwf	___flmul@a,c
  7933  001AD4  0E00               	movlw	0
  7934  001AD6  6E16               	movwf	___flmul@a+1,c
  7935  001AD8  0E00               	movlw	0
  7936  001ADA  6E17               	movwf	___flmul@a+2,c
  7937  001ADC  0E3F               	movlw	63
  7938  001ADE  6E18               	movwf	___flmul@a+3,c
  7939  001AE0  C0A4  F011         	movff	logf@f,___flmul@b
  7940  001AE4  C0A5  F012         	movff	logf@f+1,___flmul@b+1
  7941  001AE8  C0A6  F013         	movff	logf@f+2,___flmul@b+2
  7942  001AEC  C0A7  F014         	movff	logf@f+3,___flmul@b+3
  7943  001AF0  EC69  F00E         	call	___flmul	;wreg free
  7944  001AF4  C011  F09C         	movff	?___flmul,_logf$1782
  7945  001AF8  C012  F09D         	movff	?___flmul+1,_logf$1782+1
  7946  001AFC  C013  F09E         	movff	?___flmul+2,_logf$1782+2
  7947  001B00  C014  F09F         	movff	?___flmul+3,_logf$1782+3
  7948  001B04  C09C  F011         	movff	_logf$1782,___flmul@b
  7949  001B08  C09D  F012         	movff	_logf$1782+1,___flmul@b+1
  7950  001B0C  C09E  F013         	movff	_logf$1782+2,___flmul@b+2
  7951  001B10  C09F  F014         	movff	_logf$1782+3,___flmul@b+3
  7952  001B14  C0A4  F015         	movff	logf@f,___flmul@a
  7953  001B18  C0A5  F016         	movff	logf@f+1,___flmul@a+1
  7954  001B1C  C0A6  F017         	movff	logf@f+2,___flmul@a+2
  7955  001B20  C0A7  F018         	movff	logf@f+3,___flmul@a+3
  7956  001B24  EC69  F00E         	call	___flmul	;wreg free
  7957  001B28  C011  F088         	movff	?___flmul,logf@hfsq
  7958  001B2C  C012  F089         	movff	?___flmul+1,logf@hfsq+1
  7959  001B30  C013  F08A         	movff	?___flmul+2,logf@hfsq+2
  7960  001B34  C014  F08B         	movff	?___flmul+3,logf@hfsq+3
  7961  001B38  C086  F003         	movff	logf@k,___xxtofl@val
  7962  001B3C  C087  F004         	movff	logf@k+1,___xxtofl@val+1
  7963  001B40  0E00               	movlw	0
  7964  001B42  BE04               	btfsc	___xxtofl@val+1,7,c
  7965  001B44  0EFF               	movlw	-1
  7966  001B46  6E05               	movwf	___xxtofl@val+2,c
  7967  001B48  6E06               	movwf	___xxtofl@val+3,c
  7968  001B4A  0E01               	movlw	1
  7969  001B4C  ECD1  F018         	call	___xxtofl
  7970  001B50  C003  F08C         	movff	?___xxtofl,logf@dk
  7971  001B54  C004  F08D         	movff	?___xxtofl+1,logf@dk+1
  7972  001B58  C005  F08E         	movff	?___xxtofl+2,logf@dk+2
  7973  001B5C  C006  F08F         	movff	?___xxtofl+3,logf@dk+3
  7974  001B60  C090  F015         	movff	logf@s,___flmul@a
  7975  001B64  C091  F016         	movff	logf@s+1,___flmul@a+1
  7976  001B68  C092  F017         	movff	logf@s+2,___flmul@a+2
  7977  001B6C  C093  F018         	movff	logf@s+3,___flmul@a+3
  7978  001B70  C06A  F02E         	movff	logf@R,___fladd@a
  7979  001B74  C06B  F02F         	movff	logf@R+1,___fladd@a+1
  7980  001B78  C06C  F030         	movff	logf@R+2,___fladd@a+2
  7981  001B7C  C06D  F031         	movff	logf@R+3,___fladd@a+3
  7982  001B80  C088  F02A         	movff	logf@hfsq,___fladd@b
  7983  001B84  C089  F02B         	movff	logf@hfsq+1,___fladd@b+1
  7984  001B88  C08A  F02C         	movff	logf@hfsq+2,___fladd@b+2
  7985  001B8C  C08B  F02D         	movff	logf@hfsq+3,___fladd@b+3
  7986  001B90  EC12  F010         	call	___fladd	;wreg free
  7987  001B94  C02A  F011         	movff	?___fladd,___flmul@b
  7988  001B98  C02B  F012         	movff	?___fladd+1,___flmul@b+1
  7989  001B9C  C02C  F013         	movff	?___fladd+2,___flmul@b+2
  7990  001BA0  C02D  F014         	movff	?___fladd+3,___flmul@b+3
  7991  001BA4  EC69  F00E         	call	___flmul	;wreg free
  7992  001BA8  C011  F076         	movff	?___flmul,_logf$1783
  7993  001BAC  C012  F077         	movff	?___flmul+1,_logf$1783+1
  7994  001BB0  C013  F078         	movff	?___flmul+2,_logf$1783+2
  7995  001BB4  C014  F079         	movff	?___flmul+3,_logf$1783+3
  7996  001BB8  0ED1               	movlw	209
  7997  001BBA  6E15               	movwf	___flmul@a,c
  7998  001BBC  0EF7               	movlw	247
  7999  001BBE  6E16               	movwf	___flmul@a+1,c
  8000  001BC0  0E17               	movlw	23
  8001  001BC2  6E17               	movwf	___flmul@a+2,c
  8002  001BC4  0E37               	movlw	55
  8003  001BC6  6E18               	movwf	___flmul@a+3,c
  8004  001BC8  C08C  F011         	movff	logf@dk,___flmul@b
  8005  001BCC  C08D  F012         	movff	logf@dk+1,___flmul@b+1
  8006  001BD0  C08E  F013         	movff	logf@dk+2,___flmul@b+2
  8007  001BD4  C08F  F014         	movff	logf@dk+3,___flmul@b+3
  8008  001BD8  EC69  F00E         	call	___flmul	;wreg free
  8009  001BDC  C011  F02E         	movff	?___flmul,___fladd@a
  8010  001BE0  C012  F02F         	movff	?___flmul+1,___fladd@a+1
  8011  001BE4  C013  F030         	movff	?___flmul+2,___fladd@a+2
  8012  001BE8  C014  F031         	movff	?___flmul+3,___fladd@a+3
  8013  001BEC  C076  F02A         	movff	_logf$1783,___fladd@b
  8014  001BF0  C077  F02B         	movff	_logf$1783+1,___fladd@b+1
  8015  001BF4  C078  F02C         	movff	_logf$1783+2,___fladd@b+2
  8016  001BF8  C079  F02D         	movff	_logf$1783+3,___fladd@b+3
  8017  001BFC  EC12  F010         	call	___fladd	;wreg free
  8018  001C00  C02A  F07A         	movff	?___fladd,_logf$1784
  8019  001C04  C02B  F07B         	movff	?___fladd+1,_logf$1784+1
  8020  001C08  C02C  F07C         	movff	?___fladd+2,_logf$1784+2
  8021  001C0C  C02D  F07D         	movff	?___fladd+3,_logf$1784+3
  8022  001C10  C088  F03E         	movff	logf@hfsq,___flsub@a
  8023  001C14  C089  F03F         	movff	logf@hfsq+1,___flsub@a+1
  8024  001C18  C08A  F040         	movff	logf@hfsq+2,___flsub@a+2
  8025  001C1C  C08B  F041         	movff	logf@hfsq+3,___flsub@a+3
  8026  001C20  C07A  F03A         	movff	_logf$1784,___flsub@b
  8027  001C24  C07B  F03B         	movff	_logf$1784+1,___flsub@b+1
  8028  001C28  C07C  F03C         	movff	_logf$1784+2,___flsub@b+2
  8029  001C2C  C07D  F03D         	movff	_logf$1784+3,___flsub@b+3
  8030  001C30  EC11  F01F         	call	___flsub	;wreg free
  8031  001C34  C03A  F07E         	movff	?___flsub,_logf$1785
  8032  001C38  C03B  F07F         	movff	?___flsub+1,_logf$1785+1
  8033  001C3C  C03C  F080         	movff	?___flsub+2,_logf$1785+2
  8034  001C40  C03D  F081         	movff	?___flsub+3,_logf$1785+3
  8035  001C44  C0A4  F02E         	movff	logf@f,___fladd@a
  8036  001C48  C0A5  F02F         	movff	logf@f+1,___fladd@a+1
  8037  001C4C  C0A6  F030         	movff	logf@f+2,___fladd@a+2
  8038  001C50  C0A7  F031         	movff	logf@f+3,___fladd@a+3
  8039  001C54  C07E  F02A         	movff	_logf$1785,___fladd@b
  8040  001C58  C07F  F02B         	movff	_logf$1785+1,___fladd@b+1
  8041  001C5C  C080  F02C         	movff	_logf$1785+2,___fladd@b+2
  8042  001C60  C081  F02D         	movff	_logf$1785+3,___fladd@b+3
  8043  001C64  EC12  F010         	call	___fladd	;wreg free
  8044  001C68  C02A  F082         	movff	?___fladd,_logf$1786
  8045  001C6C  C02B  F083         	movff	?___fladd+1,_logf$1786+1
  8046  001C70  C02C  F084         	movff	?___fladd+2,_logf$1786+2
  8047  001C74  C02D  F085         	movff	?___fladd+3,_logf$1786+3
  8048  001C78  C082  F02A         	movff	_logf$1786,___fladd@b
  8049  001C7C  C083  F02B         	movff	_logf$1786+1,___fladd@b+1
  8050  001C80  C084  F02C         	movff	_logf$1786+2,___fladd@b+2
  8051  001C84  C085  F02D         	movff	_logf$1786+3,___fladd@b+3
  8052  001C88  0E80               	movlw	128
  8053  001C8A  6E15               	movwf	___flmul@a,c
  8054  001C8C  0E71               	movlw	113
  8055  001C8E  6E16               	movwf	___flmul@a+1,c
  8056  001C90  0E31               	movlw	49
  8057  001C92  6E17               	movwf	___flmul@a+2,c
  8058  001C94  0E3F               	movlw	63
  8059  001C96  6E18               	movwf	___flmul@a+3,c
  8060  001C98  C08C  F011         	movff	logf@dk,___flmul@b
  8061  001C9C  C08D  F012         	movff	logf@dk+1,___flmul@b+1
  8062  001CA0  C08E  F013         	movff	logf@dk+2,___flmul@b+2
  8063  001CA4  C08F  F014         	movff	logf@dk+3,___flmul@b+3
  8064  001CA8  EC69  F00E         	call	___flmul	;wreg free
  8065  001CAC  C011  F02E         	movff	?___flmul,___fladd@a
  8066  001CB0  C012  F02F         	movff	?___flmul+1,___fladd@a+1
  8067  001CB4  C013  F030         	movff	?___flmul+2,___fladd@a+2
  8068  001CB8  C014  F031         	movff	?___flmul+3,___fladd@a+3
  8069  001CBC  EC12  F010         	call	___fladd	;wreg free
  8070  001CC0  C02A  F060         	movff	?___fladd,?_logf
  8071  001CC4  C02B  F061         	movff	?___fladd+1,?_logf+1
  8072  001CC8  C02C  F062         	movff	?___fladd+2,?_logf+2
  8073  001CCC  C02D  F063         	movff	?___fladd+3,?_logf+3
  8074  001CD0  0012               	return		;funcret
  8075  001CD2                     __end_of_logf:
  8076                           	opt callstack 0
  8077                           
  8078 ;; *************** function ___xxtofl *****************
  8079 ;; Defined at:
  8080 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\xxtofl.c"
  8081 ;; Parameters:    Size  Location     Type
  8082 ;;  sign            1    wreg     unsigned char 
  8083 ;;  val             4    2[COMRAM] long 
  8084 ;; Auto vars:     Size  Location     Type
  8085 ;;  sign            1   10[COMRAM] unsigned char 
  8086 ;;  arg             4   12[COMRAM] unsigned long 
  8087 ;;  exp             1   11[COMRAM] unsigned char 
  8088 ;; Return value:  Size  Location     Type
  8089 ;;                  4    2[COMRAM] unsigned char 
  8090 ;; Registers used:
  8091 ;;		wreg, status,2, status,0
  8092 ;; Tracked objects:
  8093 ;;		On entry : 0/0
  8094 ;;		On exit  : 0/0
  8095 ;;		Unchanged: 0/0
  8096 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8097 ;;      Params:         4       0       0       0       0       0       0       0       0
  8098 ;;      Locals:         6       0       0       0       0       0       0       0       0
  8099 ;;      Temps:          4       0       0       0       0       0       0       0       0
  8100 ;;      Totals:        14       0       0       0       0       0       0       0       0
  8101 ;;Total ram usage:       14 bytes
  8102 ;; Hardware stack levels used:    1
  8103 ;; Hardware stack levels required when called:    3
  8104 ;; This function calls:
  8105 ;;		Nothing
  8106 ;; This function is called by:
  8107 ;;		_Ohm2C
  8108 ;;		_update_ADC_results
  8109 ;;		_logf
  8110 ;; This function uses a non-reentrant model
  8111 ;;
  8112                           
  8113                           	psect	text33
  8114  0031A2                     __ptext33:
  8115                           	opt callstack 0
  8116  0031A2                     ___xxtofl:
  8117                           	opt callstack 25
  8118                           
  8119                           ;incstack = 0
  8120                           ;___xxtofl@sign stored from wreg
  8121  0031A2  6E0B               	movwf	___xxtofl@sign,c
  8122  0031A4  500B               	movf	___xxtofl@sign,w,c
  8123  0031A6  A4D8               	btfss	status,2,c
  8124  0031A8  AE06               	btfss	___xxtofl@val+3,7,c
  8125  0031AA  D01A               	goto	l1144
  8126  0031AC  C003  F007         	movff	___xxtofl@val,??___xxtofl
  8127  0031B0  C004  F008         	movff	___xxtofl@val+1,??___xxtofl+1
  8128  0031B4  C005  F009         	movff	___xxtofl@val+2,??___xxtofl+2
  8129  0031B8  C006  F00A         	movff	___xxtofl@val+3,??___xxtofl+3
  8130  0031BC  1E07               	comf	??___xxtofl,f,c
  8131  0031BE  1E08               	comf	??___xxtofl+1,f,c
  8132  0031C0  1E09               	comf	??___xxtofl+2,f,c
  8133  0031C2  1E0A               	comf	??___xxtofl+3,f,c
  8134  0031C4  2A07               	incf	??___xxtofl,f,c
  8135  0031C6  0E00               	movlw	0
  8136  0031C8  2208               	addwfc	??___xxtofl+1,f,c
  8137  0031CA  2209               	addwfc	??___xxtofl+2,f,c
  8138  0031CC  220A               	addwfc	??___xxtofl+3,f,c
  8139  0031CE  C007  F00D         	movff	??___xxtofl,___xxtofl@arg
  8140  0031D2  C008  F00E         	movff	??___xxtofl+1,___xxtofl@arg+1
  8141  0031D6  C009  F00F         	movff	??___xxtofl+2,___xxtofl@arg+2
  8142  0031DA  C00A  F010         	movff	??___xxtofl+3,___xxtofl@arg+3
  8143  0031DE  D008               	goto	l4607
  8144  0031E0                     l1144:
  8145  0031E0  C003  F00D         	movff	___xxtofl@val,___xxtofl@arg
  8146  0031E4  C004  F00E         	movff	___xxtofl@val+1,___xxtofl@arg+1
  8147  0031E8  C005  F00F         	movff	___xxtofl@val+2,___xxtofl@arg+2
  8148  0031EC  C006  F010         	movff	___xxtofl@val+3,___xxtofl@arg+3
  8149  0031F0                     l4607:
  8150  0031F0  5003               	movf	___xxtofl@val,w,c
  8151  0031F2  1004               	iorwf	___xxtofl@val+1,w,c
  8152  0031F4  1005               	iorwf	___xxtofl@val+2,w,c
  8153  0031F6  1006               	iorwf	___xxtofl@val+3,w,c
  8154  0031F8  A4D8               	btfss	status,2,c
  8155  0031FA  D009               	goto	l4613
  8156  0031FC  0E00               	movlw	0
  8157  0031FE  6E03               	movwf	?___xxtofl,c
  8158  003200  0E00               	movlw	0
  8159  003202  6E04               	movwf	?___xxtofl+1,c
  8160  003204  0E00               	movlw	0
  8161  003206  6E05               	movwf	?___xxtofl+2,c
  8162  003208  0E00               	movlw	0
  8163  00320A  6E06               	movwf	?___xxtofl+3,c
  8164  00320C  0012               	return	
  8165  00320E                     l4613:
  8166  00320E  0E96               	movlw	150
  8167  003210  6E0C               	movwf	___xxtofl@exp,c
  8168  003212  D006               	goto	l4617
  8169  003214                     l4615:
  8170  003214  2A0C               	incf	___xxtofl@exp,f,c
  8171  003216  90D8               	bcf	status,0,c
  8172  003218  3210               	rrcf	___xxtofl@arg+3,f,c
  8173  00321A  320F               	rrcf	___xxtofl@arg+2,f,c
  8174  00321C  320E               	rrcf	___xxtofl@arg+1,f,c
  8175  00321E  320D               	rrcf	___xxtofl@arg,f,c
  8176  003220                     l4617:
  8177  003220  0E00               	movlw	0
  8178  003222  140D               	andwf	___xxtofl@arg,w,c
  8179  003224  6E07               	movwf	??___xxtofl& (0+255),c
  8180  003226  0E00               	movlw	0
  8181  003228  140E               	andwf	___xxtofl@arg+1,w,c
  8182  00322A  6E08               	movwf	(??___xxtofl+1)& (0+255),c
  8183  00322C  0E00               	movlw	0
  8184  00322E  140F               	andwf	___xxtofl@arg+2,w,c
  8185  003230  6E09               	movwf	(??___xxtofl+2)& (0+255),c
  8186  003232  0EFE               	movlw	254
  8187  003234  1410               	andwf	___xxtofl@arg+3,w,c
  8188  003236  6E0A               	movwf	(??___xxtofl+3)& (0+255),c
  8189  003238  5007               	movf	??___xxtofl,w,c
  8190  00323A  1008               	iorwf	??___xxtofl+1,w,c
  8191  00323C  1009               	iorwf	??___xxtofl+2,w,c
  8192  00323E  100A               	iorwf	??___xxtofl+3,w,c
  8193  003240  B4D8               	btfsc	status,2,c
  8194  003242  D00D               	goto	l1151
  8195  003244  D7E7               	goto	l4615
  8196  003246                     l4619:
  8197  003246  2A0C               	incf	___xxtofl@exp,f,c
  8198  003248  0E01               	movlw	1
  8199  00324A  260D               	addwf	___xxtofl@arg,f,c
  8200  00324C  0E00               	movlw	0
  8201  00324E  220E               	addwfc	___xxtofl@arg+1,f,c
  8202  003250  220F               	addwfc	___xxtofl@arg+2,f,c
  8203  003252  2210               	addwfc	___xxtofl@arg+3,f,c
  8204  003254  90D8               	bcf	status,0,c
  8205  003256  3210               	rrcf	___xxtofl@arg+3,f,c
  8206  003258  320F               	rrcf	___xxtofl@arg+2,f,c
  8207  00325A  320E               	rrcf	___xxtofl@arg+1,f,c
  8208  00325C  320D               	rrcf	___xxtofl@arg,f,c
  8209  00325E                     l1151:
  8210  00325E  0E00               	movlw	0
  8211  003260  140D               	andwf	___xxtofl@arg,w,c
  8212  003262  6E07               	movwf	??___xxtofl& (0+255),c
  8213  003264  0E00               	movlw	0
  8214  003266  140E               	andwf	___xxtofl@arg+1,w,c
  8215  003268  6E08               	movwf	(??___xxtofl+1)& (0+255),c
  8216  00326A  0E00               	movlw	0
  8217  00326C  140F               	andwf	___xxtofl@arg+2,w,c
  8218  00326E  6E09               	movwf	(??___xxtofl+2)& (0+255),c
  8219  003270  0EFF               	movlw	255
  8220  003272  1410               	andwf	___xxtofl@arg+3,w,c
  8221  003274  6E0A               	movwf	(??___xxtofl+3)& (0+255),c
  8222  003276  5007               	movf	??___xxtofl,w,c
  8223  003278  1008               	iorwf	??___xxtofl+1,w,c
  8224  00327A  1009               	iorwf	??___xxtofl+2,w,c
  8225  00327C  100A               	iorwf	??___xxtofl+3,w,c
  8226  00327E  B4D8               	btfsc	status,2,c
  8227  003280  D007               	goto	l4627
  8228  003282  D7E1               	goto	l4619
  8229  003284                     l4625:
  8230  003284  060C               	decf	___xxtofl@exp,f,c
  8231  003286  90D8               	bcf	status,0,c
  8232  003288  360D               	rlcf	___xxtofl@arg,f,c
  8233  00328A  360E               	rlcf	___xxtofl@arg+1,f,c
  8234  00328C  360F               	rlcf	___xxtofl@arg+2,f,c
  8235  00328E  3610               	rlcf	___xxtofl@arg+3,f,c
  8236  003290                     l4627:
  8237  003290  BE0F               	btfsc	___xxtofl@arg+2,7,c
  8238  003292  D003               	goto	u5340
  8239  003294  0E02               	movlw	2
  8240  003296  600C               	cpfslt	___xxtofl@exp,c
  8241  003298  D7F5               	goto	l4625
  8242  00329A                     u5340:
  8243  00329A  A00C               	btfss	___xxtofl@exp,0,c
  8244  00329C  9E0F               	bcf	___xxtofl@arg+2,7,c
  8245  00329E  90D8               	bcf	status,0,c
  8246  0032A0  320C               	rrcf	___xxtofl@exp,f,c
  8247  0032A2  C00C  F007         	movff	___xxtofl@exp,??___xxtofl
  8248  0032A6  6A08               	clrf	(??___xxtofl+1)& (0+255),c
  8249  0032A8  6A09               	clrf	(??___xxtofl+2)& (0+255),c
  8250  0032AA  6A0A               	clrf	(??___xxtofl+3)& (0+255),c
  8251  0032AC  C007  F00A         	movff	??___xxtofl,??___xxtofl+3
  8252  0032B0  6A09               	clrf	??___xxtofl+2,c
  8253  0032B2  6A08               	clrf	??___xxtofl+1,c
  8254  0032B4  6A07               	clrf	??___xxtofl,c
  8255  0032B6  5007               	movf	??___xxtofl,w,c
  8256  0032B8  120D               	iorwf	___xxtofl@arg,f,c
  8257  0032BA  5008               	movf	??___xxtofl+1,w,c
  8258  0032BC  120E               	iorwf	___xxtofl@arg+1,f,c
  8259  0032BE  5009               	movf	??___xxtofl+2,w,c
  8260  0032C0  120F               	iorwf	___xxtofl@arg+2,f,c
  8261  0032C2  500A               	movf	??___xxtofl+3,w,c
  8262  0032C4  1210               	iorwf	___xxtofl@arg+3,f,c
  8263  0032C6  500B               	movf	___xxtofl@sign,w,c
  8264  0032C8  A4D8               	btfss	status,2,c
  8265  0032CA  AE06               	btfss	___xxtofl@val+3,7,c
  8266  0032CC  D001               	goto	l4643
  8267  0032CE  8E10               	bsf	___xxtofl@arg+3,7,c
  8268  0032D0                     l4643:
  8269  0032D0  C00D  F003         	movff	___xxtofl@arg,?___xxtofl
  8270  0032D4  C00E  F004         	movff	___xxtofl@arg+1,?___xxtofl+1
  8271  0032D8  C00F  F005         	movff	___xxtofl@arg+2,?___xxtofl+2
  8272  0032DC  C010  F006         	movff	___xxtofl@arg+3,?___xxtofl+3
  8273  0032E0  0012               	return		;funcret
  8274  0032E2                     __end_of___xxtofl:
  8275                           	opt callstack 0
  8276                           
  8277 ;; *************** function ___flsub *****************
  8278 ;; Defined at:
  8279 ;;		line 245 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\sprcadd.c"
  8280 ;; Parameters:    Size  Location     Type
  8281 ;;  b               4   57[COMRAM] unsigned char 
  8282 ;;  a               4   61[COMRAM] unsigned char 
  8283 ;; Auto vars:     Size  Location     Type
  8284 ;;		None
  8285 ;; Return value:  Size  Location     Type
  8286 ;;                  4   57[COMRAM] unsigned char 
  8287 ;; Registers used:
  8288 ;;		wreg, status,2, status,0, cstack
  8289 ;; Tracked objects:
  8290 ;;		On entry : 0/0
  8291 ;;		On exit  : 0/0
  8292 ;;		Unchanged: 0/0
  8293 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8294 ;;      Params:         8       0       0       0       0       0       0       0       0
  8295 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8296 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8297 ;;      Totals:         8       0       0       0       0       0       0       0       0
  8298 ;;Total ram usage:        8 bytes
  8299 ;; Hardware stack levels used:    1
  8300 ;; Hardware stack levels required when called:    4
  8301 ;; This function calls:
  8302 ;;		___fladd
  8303 ;; This function is called by:
  8304 ;;		_update_ADC_results
  8305 ;;		_logf
  8306 ;; This function uses a non-reentrant model
  8307 ;;
  8308                           
  8309                           	psect	text34
  8310  003E22                     __ptext34:
  8311                           	opt callstack 0
  8312  003E22                     ___flsub:
  8313                           	opt callstack 24
  8314                           
  8315                           ;incstack = 0
  8316  003E22  0E00               	movlw	0
  8317  003E24  1A3E               	xorwf	___flsub@a,f,c
  8318  003E26  0E00               	movlw	0
  8319  003E28  1A3F               	xorwf	___flsub@a+1,f,c
  8320  003E2A  0E00               	movlw	0
  8321  003E2C  1A40               	xorwf	___flsub@a+2,f,c
  8322  003E2E  0E80               	movlw	128
  8323  003E30  1A41               	xorwf	___flsub@a+3,f,c
  8324  003E32  C03A  F02A         	movff	___flsub@b,___fladd@b
  8325  003E36  C03B  F02B         	movff	___flsub@b+1,___fladd@b+1
  8326  003E3A  C03C  F02C         	movff	___flsub@b+2,___fladd@b+2
  8327  003E3E  C03D  F02D         	movff	___flsub@b+3,___fladd@b+3
  8328  003E42  C03E  F02E         	movff	___flsub@a,___fladd@a
  8329  003E46  C03F  F02F         	movff	___flsub@a+1,___fladd@a+1
  8330  003E4A  C040  F030         	movff	___flsub@a+2,___fladd@a+2
  8331  003E4E  C041  F031         	movff	___flsub@a+3,___fladd@a+3
  8332  003E52  EC12  F010         	call	___fladd	;wreg free
  8333  003E56  C02A  F03A         	movff	?___fladd,?___flsub
  8334  003E5A  C02B  F03B         	movff	?___fladd+1,?___flsub+1
  8335  003E5E  C02C  F03C         	movff	?___fladd+2,?___flsub+2
  8336  003E62  C02D  F03D         	movff	?___fladd+3,?___flsub+3
  8337  003E66  0012               	return		;funcret
  8338  003E68                     __end_of___flsub:
  8339                           	opt callstack 0
  8340                           
  8341 ;; *************** function ___fladd *****************
  8342 ;; Defined at:
  8343 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\sprcadd.c"
  8344 ;; Parameters:    Size  Location     Type
  8345 ;;  b               4   41[COMRAM] unsigned char 
  8346 ;;  a               4   45[COMRAM] unsigned char 
  8347 ;; Auto vars:     Size  Location     Type
  8348 ;;  grs             1   56[COMRAM] unsigned char 
  8349 ;;  bexp            1   55[COMRAM] unsigned char 
  8350 ;;  aexp            1   54[COMRAM] unsigned char 
  8351 ;;  signs           1   53[COMRAM] unsigned char 
  8352 ;; Return value:  Size  Location     Type
  8353 ;;                  4   41[COMRAM] unsigned char 
  8354 ;; Registers used:
  8355 ;;		wreg, status,2, status,0
  8356 ;; Tracked objects:
  8357 ;;		On entry : 0/0
  8358 ;;		On exit  : 0/0
  8359 ;;		Unchanged: 0/0
  8360 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8361 ;;      Params:         8       0       0       0       0       0       0       0       0
  8362 ;;      Locals:         4       0       0       0       0       0       0       0       0
  8363 ;;      Temps:          4       0       0       0       0       0       0       0       0
  8364 ;;      Totals:        16       0       0       0       0       0       0       0       0
  8365 ;;Total ram usage:       16 bytes
  8366 ;; Hardware stack levels used:    1
  8367 ;; Hardware stack levels required when called:    3
  8368 ;; This function calls:
  8369 ;;		Nothing
  8370 ;; This function is called by:
  8371 ;;		_Ohm2C
  8372 ;;		___flsub
  8373 ;;		_logf
  8374 ;; This function uses a non-reentrant model
  8375 ;;
  8376                           
  8377                           	psect	text35
  8378  002024                     __ptext35:
  8379                           	opt callstack 0
  8380  002024                     ___fladd:
  8381                           	opt callstack 24
  8382                           
  8383                           ;incstack = 0
  8384  002024  502D               	movf	___fladd@b+3,w,c
  8385  002026  0B80               	andlw	128
  8386  002028  6E36               	movwf	___fladd@signs,c
  8387  00202A  502D               	movf	___fladd@b+3,w,c
  8388  00202C  242D               	addwf	___fladd@b+3,w,c
  8389  00202E  6E38               	movwf	___fladd@bexp,c
  8390  002030  BE2C               	btfsc	___fladd@b+2,7,c
  8391  002032  8038               	bsf	___fladd@bexp,0,c
  8392  002034  5038               	movf	___fladd@bexp,w,c
  8393  002036  B4D8               	btfsc	status,2,c
  8394  002038  D00D               	goto	l4133
  8395  00203A  2838               	incf	___fladd@bexp,w,c
  8396  00203C  A4D8               	btfss	status,2,c
  8397  00203E  D008               	goto	l4129
  8398  002040  0E00               	movlw	0
  8399  002042  6E2A               	movwf	___fladd@b,c
  8400  002044  0E00               	movlw	0
  8401  002046  6E2B               	movwf	___fladd@b+1,c
  8402  002048  0E00               	movlw	0
  8403  00204A  6E2C               	movwf	___fladd@b+2,c
  8404  00204C  0E00               	movlw	0
  8405  00204E  6E2D               	movwf	___fladd@b+3,c
  8406  002050                     l4129:
  8407  002050  8E2C               	bsf	___fladd@b+2,7,c
  8408  002052  D006               	goto	L18
  8409  002054                     l4133:
  8410  002054  0E00               	movlw	0
  8411  002056  6E2A               	movwf	___fladd@b,c
  8412  002058  0E00               	movlw	0
  8413  00205A  6E2B               	movwf	___fladd@b+1,c
  8414  00205C  0E00               	movlw	0
  8415  00205E  6E2C               	movwf	___fladd@b+2,c
  8416  002060                     L18:
  8417  002060  0E00               	movlw	0
  8418  002062  6E2D               	movwf	___fladd@b+3,c
  8419  002064  5031               	movf	___fladd@a+3,w,c
  8420  002066  0B80               	andlw	128
  8421  002068  6E37               	movwf	___fladd@aexp,c
  8422  00206A  5036               	movf	___fladd@signs,w,c
  8423  00206C  1837               	xorwf	___fladd@aexp,w,c
  8424  00206E  A4D8               	btfss	status,2,c
  8425  002070  8C36               	bsf	___fladd@signs,6,c
  8426  002072  5031               	movf	___fladd@a+3,w,c
  8427  002074  2431               	addwf	___fladd@a+3,w,c
  8428  002076  6E37               	movwf	___fladd@aexp,c
  8429  002078  BE30               	btfsc	___fladd@a+2,7,c
  8430  00207A  8037               	bsf	___fladd@aexp,0,c
  8431  00207C  5037               	movf	___fladd@aexp,w,c
  8432  00207E  B4D8               	btfsc	status,2,c
  8433  002080  D00D               	goto	l4157
  8434  002082  2837               	incf	___fladd@aexp,w,c
  8435  002084  A4D8               	btfss	status,2,c
  8436  002086  D008               	goto	l4153
  8437  002088  0E00               	movlw	0
  8438  00208A  6E2E               	movwf	___fladd@a,c
  8439  00208C  0E00               	movlw	0
  8440  00208E  6E2F               	movwf	___fladd@a+1,c
  8441  002090  0E00               	movlw	0
  8442  002092  6E30               	movwf	___fladd@a+2,c
  8443  002094  0E00               	movlw	0
  8444  002096  6E31               	movwf	___fladd@a+3,c
  8445  002098                     l4153:
  8446  002098  8E30               	bsf	___fladd@a+2,7,c
  8447  00209A  D006               	goto	L19
  8448  00209C                     l4157:
  8449  00209C  0E00               	movlw	0
  8450  00209E  6E2E               	movwf	___fladd@a,c
  8451  0020A0  0E00               	movlw	0
  8452  0020A2  6E2F               	movwf	___fladd@a+1,c
  8453  0020A4  0E00               	movlw	0
  8454  0020A6  6E30               	movwf	___fladd@a+2,c
  8455  0020A8                     L19:
  8456  0020A8  0E00               	movlw	0
  8457  0020AA  6E31               	movwf	___fladd@a+3,c
  8458  0020AC  5038               	movf	___fladd@bexp,w,c
  8459  0020AE  5C37               	subwf	___fladd@aexp,w,c
  8460  0020B0  B0D8               	btfsc	status,0,c
  8461  0020B2  D022               	goto	l4195
  8462  0020B4  AC36               	btfss	___fladd@signs,6,c
  8463  0020B6  D002               	goto	l4165
  8464  0020B8  0E80               	movlw	128
  8465  0020BA  1A36               	xorwf	___fladd@signs,f,c
  8466  0020BC                     l4165:
  8467  0020BC  C038  F039         	movff	___fladd@bexp,___fladd@grs
  8468  0020C0  C037  F038         	movff	___fladd@aexp,___fladd@bexp
  8469  0020C4  C039  F037         	movff	___fladd@grs,___fladd@aexp
  8470  0020C8  C02A  F039         	movff	___fladd@b,___fladd@grs
  8471  0020CC  C02E  F02A         	movff	___fladd@a,___fladd@b
  8472  0020D0  C039  F02E         	movff	___fladd@grs,___fladd@a
  8473  0020D4  C02B  F039         	movff	___fladd@b+1,___fladd@grs
  8474  0020D8  C02F  F02B         	movff	___fladd@a+1,___fladd@b+1
  8475  0020DC  C039  F02F         	movff	___fladd@grs,___fladd@a+1
  8476  0020E0  C02C  F039         	movff	___fladd@b+2,___fladd@grs
  8477  0020E4  C030  F02C         	movff	___fladd@a+2,___fladd@b+2
  8478  0020E8  C039  F030         	movff	___fladd@grs,___fladd@a+2
  8479  0020EC  C02D  F039         	movff	___fladd@b+3,___fladd@grs
  8480  0020F0  C031  F02D         	movff	___fladd@a+3,___fladd@b+3
  8481  0020F4  C039  F031         	movff	___fladd@grs,___fladd@a+3
  8482  0020F8                     l4195:
  8483  0020F8  0E00               	movlw	0
  8484  0020FA  6E39               	movwf	___fladd@grs,c
  8485  0020FC  5038               	movf	___fladd@bexp,w,c
  8486  0020FE  C037  F032         	movff	___fladd@aexp,??___fladd
  8487  002102  6A33               	clrf	(??___fladd+1)& (0+255),c
  8488  002104  5E32               	subwf	??___fladd,f,c
  8489  002106  0E00               	movlw	0
  8490  002108  5A33               	subwfb	??___fladd+1,f,c
  8491  00210A  BE33               	btfsc	??___fladd+1,7,c
  8492  00210C  D02C               	goto	l1018
  8493  00210E  5033               	movf	??___fladd+1,w,c
  8494  002110  E104               	bnz	u4550
  8495  002112  0E1A               	movlw	26
  8496  002114  5C32               	subwf	??___fladd,w,c
  8497  002116  A0D8               	btfss	status,0,c
  8498  002118  D026               	goto	l1018
  8499  00211A                     u4550:
  8500  00211A  502A               	movf	___fladd@b,w,c
  8501  00211C  102B               	iorwf	___fladd@b+1,w,c
  8502  00211E  102C               	iorwf	___fladd@b+2,w,c
  8503  002120  102D               	iorwf	___fladd@b+3,w,c
  8504  002122  B4D8               	btfsc	status,2,c
  8505  002124  D002               	goto	u4560
  8506  002126  0E01               	movlw	1
  8507  002128  D001               	goto	u4570
  8508  00212A                     u4560:
  8509  00212A  0E00               	movlw	0
  8510  00212C                     u4570:
  8511  00212C  6E39               	movwf	___fladd@grs,c
  8512  00212E  0E00               	movlw	0
  8513  002130  6E2A               	movwf	___fladd@b,c
  8514  002132  0E00               	movlw	0
  8515  002134  6E2B               	movwf	___fladd@b+1,c
  8516  002136  0E00               	movlw	0
  8517  002138  6E2C               	movwf	___fladd@b+2,c
  8518  00213A  0E00               	movlw	0
  8519  00213C  6E2D               	movwf	___fladd@b+3,c
  8520  00213E  C037  F038         	movff	___fladd@aexp,___fladd@bexp
  8521  002142  D015               	goto	u4600
  8522  002144                     l1019:
  8523  002144  A039               	btfss	___fladd@grs,0,c
  8524  002146  D005               	goto	l4207
  8525  002148  90D8               	bcf	status,0,c
  8526  00214A  3039               	rrcf	___fladd@grs,w,c
  8527  00214C  0901               	iorlw	1
  8528  00214E  6E39               	movwf	___fladd@grs,c
  8529  002150  D002               	goto	l4209
  8530  002152                     l4207:
  8531  002152  90D8               	bcf	status,0,c
  8532  002154  3239               	rrcf	___fladd@grs,f,c
  8533  002156                     l4209:
  8534  002156  B02A               	btfsc	___fladd@b,0,c
  8535  002158  8E39               	bsf	___fladd@grs,7,c
  8536  00215A  342D               	rlcf	___fladd@b+3,w,c
  8537  00215C  322D               	rrcf	___fladd@b+3,f,c
  8538  00215E  322C               	rrcf	___fladd@b+2,f,c
  8539  002160  322B               	rrcf	___fladd@b+1,f,c
  8540  002162  322A               	rrcf	___fladd@b,f,c
  8541  002164  2A38               	incf	___fladd@bexp,f,c
  8542  002166                     l1018:
  8543  002166  5037               	movf	___fladd@aexp,w,c
  8544  002168  5C38               	subwf	___fladd@bexp,w,c
  8545  00216A  A0D8               	btfss	status,0,c
  8546  00216C  D7EB               	goto	l1019
  8547  00216E                     u4600:
  8548  00216E  BC36               	btfsc	___fladd@signs,6,c
  8549  002170  D028               	goto	l4241
  8550  002172  5038               	movf	___fladd@bexp,w,c
  8551  002174  A4D8               	btfss	status,2,c
  8552  002176  D009               	goto	l4223
  8553  002178  0E00               	movlw	0
  8554  00217A  6E2A               	movwf	?___fladd,c
  8555  00217C  0E00               	movlw	0
  8556  00217E  6E2B               	movwf	?___fladd+1,c
  8557  002180  0E00               	movlw	0
  8558  002182  6E2C               	movwf	?___fladd+2,c
  8559  002184  0E00               	movlw	0
  8560  002186  6E2D               	movwf	?___fladd+3,c
  8561  002188  0012               	return	
  8562  00218A                     l4223:
  8563  00218A  502E               	movf	___fladd@a,w,c
  8564  00218C  262A               	addwf	___fladd@b,f,c
  8565  00218E  502F               	movf	___fladd@a+1,w,c
  8566  002190  222B               	addwfc	___fladd@b+1,f,c
  8567  002192  5030               	movf	___fladd@a+2,w,c
  8568  002194  222C               	addwfc	___fladd@b+2,f,c
  8569  002196  5031               	movf	___fladd@a+3,w,c
  8570  002198  222D               	addwfc	___fladd@b+3,f,c
  8571  00219A  A02D               	btfss	___fladd@b+3,0,c
  8572  00219C  D071               	goto	u4730
  8573  00219E  A039               	btfss	___fladd@grs,0,c
  8574  0021A0  D005               	goto	l4231
  8575  0021A2  90D8               	bcf	status,0,c
  8576  0021A4  3039               	rrcf	___fladd@grs,w,c
  8577  0021A6  0901               	iorlw	1
  8578  0021A8  6E39               	movwf	___fladd@grs,c
  8579  0021AA  D002               	goto	l4233
  8580  0021AC                     l4231:
  8581  0021AC  90D8               	bcf	status,0,c
  8582  0021AE  3239               	rrcf	___fladd@grs,f,c
  8583  0021B0                     l4233:
  8584  0021B0  B02A               	btfsc	___fladd@b,0,c
  8585  0021B2  8E39               	bsf	___fladd@grs,7,c
  8586  0021B4  342D               	rlcf	___fladd@b+3,w,c
  8587  0021B6  322D               	rrcf	___fladd@b+3,f,c
  8588  0021B8  322C               	rrcf	___fladd@b+2,f,c
  8589  0021BA  322B               	rrcf	___fladd@b+1,f,c
  8590  0021BC  322A               	rrcf	___fladd@b,f,c
  8591  0021BE  2A38               	incf	___fladd@bexp,f,c
  8592  0021C0  D05F               	goto	u4730
  8593  0021C2                     l4241:
  8594  0021C2  502E               	movf	___fladd@a,w,c
  8595  0021C4  5C2A               	subwf	___fladd@b,w,c
  8596  0021C6  502F               	movf	___fladd@a+1,w,c
  8597  0021C8  582B               	subwfb	___fladd@b+1,w,c
  8598  0021CA  5030               	movf	___fladd@a+2,w,c
  8599  0021CC  582C               	subwfb	___fladd@b+2,w,c
  8600  0021CE  502D               	movf	___fladd@b+3,w,c
  8601  0021D0  0A80               	xorlw	128
  8602  0021D2  6E32               	movwf	??___fladd& (0+255),c
  8603  0021D4  5031               	movf	___fladd@a+3,w,c
  8604  0021D6  0A80               	xorlw	128
  8605  0021D8  5832               	subwfb	??___fladd& (0+255),w,c
  8606  0021DA  B0D8               	btfsc	status,0,c
  8607  0021DC  D025               	goto	l4251
  8608  0021DE  502A               	movf	___fladd@b,w,c
  8609  0021E0  5C2E               	subwf	___fladd@a,w,c
  8610  0021E2  6E32               	movwf	??___fladd& (0+255),c
  8611  0021E4  502B               	movf	___fladd@b+1,w,c
  8612  0021E6  582F               	subwfb	___fladd@a+1,w,c
  8613  0021E8  6E33               	movwf	(??___fladd+1)& (0+255),c
  8614  0021EA  502C               	movf	___fladd@b+2,w,c
  8615  0021EC  5830               	subwfb	___fladd@a+2,w,c
  8616  0021EE  6E34               	movwf	(??___fladd+2)& (0+255),c
  8617  0021F0  502D               	movf	___fladd@b+3,w,c
  8618  0021F2  5831               	subwfb	___fladd@a+3,w,c
  8619  0021F4  6E35               	movwf	(??___fladd+3)& (0+255),c
  8620  0021F6  0EFF               	movlw	255
  8621  0021F8  2432               	addwf	??___fladd,w,c
  8622  0021FA  6E2A               	movwf	___fladd@b,c
  8623  0021FC  0EFF               	movlw	255
  8624  0021FE  2033               	addwfc	??___fladd+1,w,c
  8625  002200  6E2B               	movwf	___fladd@b+1,c
  8626  002202  0EFF               	movlw	255
  8627  002204  2034               	addwfc	??___fladd+2,w,c
  8628  002206  6E2C               	movwf	___fladd@b+2,c
  8629  002208  0EFF               	movlw	255
  8630  00220A  2035               	addwfc	??___fladd+3,w,c
  8631  00220C  6E2D               	movwf	___fladd@b+3,c
  8632  00220E  0E80               	movlw	128
  8633  002210  1A36               	xorwf	___fladd@signs,f,c
  8634  002212  6C39               	negf	___fladd@grs,c
  8635  002214  5039               	movf	___fladd@grs,w,c
  8636  002216  A4D8               	btfss	status,2,c
  8637  002218  D00F               	goto	l1034
  8638  00221A  0E01               	movlw	1
  8639  00221C  262A               	addwf	___fladd@b,f,c
  8640  00221E  0E00               	movlw	0
  8641  002220  222B               	addwfc	___fladd@b+1,f,c
  8642  002222  222C               	addwfc	___fladd@b+2,f,c
  8643  002224  222D               	addwfc	___fladd@b+3,f,c
  8644  002226  D008               	goto	l1034
  8645  002228                     l4251:
  8646  002228  502E               	movf	___fladd@a,w,c
  8647  00222A  5E2A               	subwf	___fladd@b,f,c
  8648  00222C  502F               	movf	___fladd@a+1,w,c
  8649  00222E  5A2B               	subwfb	___fladd@b+1,f,c
  8650  002230  5030               	movf	___fladd@a+2,w,c
  8651  002232  5A2C               	subwfb	___fladd@b+2,f,c
  8652  002234  5031               	movf	___fladd@a+3,w,c
  8653  002236  5A2D               	subwfb	___fladd@b+3,f,c
  8654  002238                     l1034:
  8655  002238  502A               	movf	___fladd@b,w,c
  8656  00223A  102B               	iorwf	___fladd@b+1,w,c
  8657  00223C  102C               	iorwf	___fladd@b+2,w,c
  8658  00223E  102D               	iorwf	___fladd@b+3,w,c
  8659  002240  A4D8               	btfss	status,2,c
  8660  002242  D01C               	goto	l4275
  8661  002244  5039               	movf	___fladd@grs,w,c
  8662  002246  A4D8               	btfss	status,2,c
  8663  002248  D019               	goto	l4275
  8664  00224A  0E00               	movlw	0
  8665  00224C  6E2A               	movwf	?___fladd,c
  8666  00224E  0E00               	movlw	0
  8667  002250  6E2B               	movwf	?___fladd+1,c
  8668  002252  0E00               	movlw	0
  8669  002254  6E2C               	movwf	?___fladd+2,c
  8670  002256  0E00               	movlw	0
  8671  002258  6E2D               	movwf	?___fladd+3,c
  8672  00225A  0012               	return	
  8673  00225C                     l4259:
  8674  00225C  90D8               	bcf	status,0,c
  8675  00225E  362A               	rlcf	___fladd@b,f,c
  8676  002260  362B               	rlcf	___fladd@b+1,f,c
  8677  002262  362C               	rlcf	___fladd@b+2,f,c
  8678  002264  362D               	rlcf	___fladd@b+3,f,c
  8679  002266  BE39               	btfsc	___fladd@grs,7,c
  8680  002268  802A               	bsf	___fladd@b,0,c
  8681  00226A  A039               	btfss	___fladd@grs,0,c
  8682  00226C  D002               	goto	l4269
  8683  00226E  80D8               	bsf	status,0,c
  8684  002270  D001               	goto	L20
  8685  002272                     l4269:
  8686  002272  90D8               	bcf	status,0,c
  8687  002274                     L20:
  8688  002274  3639               	rlcf	___fladd@grs,f,c
  8689  002276  5038               	movf	___fladd@bexp,w,c
  8690  002278  A4D8               	btfss	status,2,c
  8691  00227A  0638               	decf	___fladd@bexp,f,c
  8692  00227C                     l4275:
  8693  00227C  AE2C               	btfss	___fladd@b+2,7,c
  8694  00227E  D7EE               	goto	l4259
  8695  002280                     u4730:
  8696  002280  0E00               	movlw	0
  8697  002282  6E37               	movwf	___fladd@aexp,c
  8698  002284  AE39               	btfss	___fladd@grs,7,c
  8699  002286  D00B               	goto	l1043
  8700  002288  C039  F032         	movff	___fladd@grs,??___fladd
  8701  00228C  0E7F               	movlw	127
  8702  00228E  1632               	andwf	??___fladd,f,c
  8703  002290  B4D8               	btfsc	status,2,c
  8704  002292  D003               	goto	l1044
  8705  002294                     u4750:
  8706  002294  0E01               	movlw	1
  8707  002296  6E37               	movwf	___fladd@aexp,c
  8708  002298  D002               	goto	l1043
  8709  00229A                     l1044:
  8710  00229A  B02A               	btfsc	___fladd@b,0,c
  8711  00229C  D7FB               	goto	u4750
  8712  00229E                     l1043:
  8713  00229E  5037               	movf	___fladd@aexp,w,c
  8714  0022A0  B4D8               	btfsc	status,2,c
  8715  0022A2  D020               	goto	l4295
  8716  0022A4  0E01               	movlw	1
  8717  0022A6  262A               	addwf	___fladd@b,f,c
  8718  0022A8  0E00               	movlw	0
  8719  0022AA  222B               	addwfc	___fladd@b+1,f,c
  8720  0022AC  222C               	addwfc	___fladd@b+2,f,c
  8721  0022AE  222D               	addwfc	___fladd@b+3,f,c
  8722  0022B0  A02D               	btfss	___fladd@b+3,0,c
  8723  0022B2  D018               	goto	l4295
  8724  0022B4  C02A  F032         	movff	___fladd@b,??___fladd
  8725  0022B8  C02B  F033         	movff	___fladd@b+1,??___fladd+1
  8726  0022BC  C02C  F034         	movff	___fladd@b+2,??___fladd+2
  8727  0022C0  C02D  F035         	movff	___fladd@b+3,??___fladd+3
  8728  0022C4  3435               	rlcf	??___fladd+3,w,c
  8729  0022C6  3235               	rrcf	??___fladd+3,f,c
  8730  0022C8  3234               	rrcf	??___fladd+2,f,c
  8731  0022CA  3233               	rrcf	??___fladd+1,f,c
  8732  0022CC  3232               	rrcf	??___fladd,f,c
  8733  0022CE  C032  F02A         	movff	??___fladd,___fladd@b
  8734  0022D2  C033  F02B         	movff	??___fladd+1,___fladd@b+1
  8735  0022D6  C034  F02C         	movff	??___fladd+2,___fladd@b+2
  8736  0022DA  C035  F02D         	movff	??___fladd+3,___fladd@b+3
  8737  0022DE  2838               	incf	___fladd@bexp,w,c
  8738  0022E0  A4D8               	btfss	status,2,c
  8739  0022E2  2A38               	incf	___fladd@bexp,f,c
  8740  0022E4                     l4295:
  8741  0022E4  2838               	incf	___fladd@bexp,w,c
  8742  0022E6  B4D8               	btfsc	status,2,c
  8743  0022E8  D003               	goto	u4810
  8744  0022EA  5038               	movf	___fladd@bexp,w,c
  8745  0022EC  A4D8               	btfss	status,2,c
  8746  0022EE  D00D               	goto	l4303
  8747  0022F0                     u4810:
  8748  0022F0  0E00               	movlw	0
  8749  0022F2  6E2A               	movwf	___fladd@b,c
  8750  0022F4  0E00               	movlw	0
  8751  0022F6  6E2B               	movwf	___fladd@b+1,c
  8752  0022F8  0E00               	movlw	0
  8753  0022FA  6E2C               	movwf	___fladd@b+2,c
  8754  0022FC  0E00               	movlw	0
  8755  0022FE  6E2D               	movwf	___fladd@b+3,c
  8756  002300  5038               	movf	___fladd@bexp,w,c
  8757  002302  A4D8               	btfss	status,2,c
  8758  002304  D002               	goto	l4303
  8759  002306  0E00               	movlw	0
  8760  002308  6E36               	movwf	___fladd@signs,c
  8761  00230A                     l4303:
  8762  00230A  A038               	btfss	___fladd@bexp,0,c
  8763  00230C  D002               	goto	l4307
  8764  00230E  8E2C               	bsf	___fladd@b+2,7,c
  8765  002310  D001               	goto	l4309
  8766  002312                     l4307:
  8767  002312  9E2C               	bcf	___fladd@b+2,7,c
  8768  002314                     l4309:
  8769  002314  90D8               	bcf	status,0,c
  8770  002316  3038               	rrcf	___fladd@bexp,w,c
  8771  002318  6E2D               	movwf	___fladd@b+3,c
  8772  00231A  BE36               	btfsc	___fladd@signs,7,c
  8773  00231C  8E2D               	bsf	___fladd@b+3,7,c
  8774  00231E  C02A  F02A         	movff	___fladd@b,?___fladd
  8775  002322  C02B  F02B         	movff	___fladd@b+1,?___fladd+1
  8776  002326  C02C  F02C         	movff	___fladd@b+2,?___fladd+2
  8777  00232A  C02D  F02D         	movff	___fladd@b+3,?___fladd+3
  8778  00232E  0012               	return		;funcret
  8779  002330                     __end_of___fladd:
  8780                           	opt callstack 0
  8781                           
  8782 ;; *************** function ___flmul *****************
  8783 ;; Defined at:
  8784 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\sprcmul.c"
  8785 ;; Parameters:    Size  Location     Type
  8786 ;;  b               4   16[COMRAM] unsigned char 
  8787 ;;  a               4   20[COMRAM] unsigned char 
  8788 ;; Auto vars:     Size  Location     Type
  8789 ;;  prod            4   35[COMRAM] struct .
  8790 ;;  grs             4   29[COMRAM] unsigned long 
  8791 ;;  temp            2   39[COMRAM] struct .
  8792 ;;  bexp            1   34[COMRAM] unsigned char 
  8793 ;;  aexp            1   33[COMRAM] unsigned char 
  8794 ;;  sign            1   28[COMRAM] unsigned char 
  8795 ;; Return value:  Size  Location     Type
  8796 ;;                  4   16[COMRAM] unsigned char 
  8797 ;; Registers used:
  8798 ;;		wreg, status,2, status,0, prodl, prodh
  8799 ;; Tracked objects:
  8800 ;;		On entry : 0/0
  8801 ;;		On exit  : 0/0
  8802 ;;		Unchanged: 0/0
  8803 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8804 ;;      Params:         8       0       0       0       0       0       0       0       0
  8805 ;;      Locals:        13       0       0       0       0       0       0       0       0
  8806 ;;      Temps:          4       0       0       0       0       0       0       0       0
  8807 ;;      Totals:        25       0       0       0       0       0       0       0       0
  8808 ;;Total ram usage:       25 bytes
  8809 ;; Hardware stack levels used:    1
  8810 ;; Hardware stack levels required when called:    3
  8811 ;; This function calls:
  8812 ;;		Nothing
  8813 ;; This function is called by:
  8814 ;;		_Ohm2C
  8815 ;;		_update_ADC_results
  8816 ;;		_logf
  8817 ;; This function uses a non-reentrant model
  8818 ;;
  8819                           
  8820                           	psect	text36
  8821  001CD2                     __ptext36:
  8822                           	opt callstack 0
  8823  001CD2                     ___flmul:
  8824                           	opt callstack 25
  8825                           
  8826                           ;incstack = 0
  8827  001CD2  5014               	movf	___flmul@b+3,w,c
  8828  001CD4  0B80               	andlw	128
  8829  001CD6  6E1D               	movwf	___flmul@sign,c
  8830  001CD8  5014               	movf	___flmul@b+3,w,c
  8831  001CDA  2414               	addwf	___flmul@b+3,w,c
  8832  001CDC  6E23               	movwf	___flmul@bexp,c
  8833  001CDE  BE13               	btfsc	___flmul@b+2,7,c
  8834  001CE0  8023               	bsf	___flmul@bexp,0,c
  8835  001CE2  5023               	movf	___flmul@bexp,w,c
  8836  001CE4  B4D8               	btfsc	status,2,c
  8837  001CE6  D00D               	goto	l4479
  8838  001CE8  2823               	incf	___flmul@bexp,w,c
  8839  001CEA  A4D8               	btfss	status,2,c
  8840  001CEC  D008               	goto	l4477
  8841  001CEE  0E00               	movlw	0
  8842  001CF0  6E11               	movwf	___flmul@b,c
  8843  001CF2  0E00               	movlw	0
  8844  001CF4  6E12               	movwf	___flmul@b+1,c
  8845  001CF6  0E00               	movlw	0
  8846  001CF8  6E13               	movwf	___flmul@b+2,c
  8847  001CFA  0E00               	movlw	0
  8848  001CFC  6E14               	movwf	___flmul@b+3,c
  8849  001CFE                     l4477:
  8850  001CFE  8E13               	bsf	___flmul@b+2,7,c
  8851  001D00  D008               	goto	l4481
  8852  001D02                     l4479:
  8853  001D02  0E00               	movlw	0
  8854  001D04  6E11               	movwf	___flmul@b,c
  8855  001D06  0E00               	movlw	0
  8856  001D08  6E12               	movwf	___flmul@b+1,c
  8857  001D0A  0E00               	movlw	0
  8858  001D0C  6E13               	movwf	___flmul@b+2,c
  8859  001D0E  0E00               	movlw	0
  8860  001D10  6E14               	movwf	___flmul@b+3,c
  8861  001D12                     l4481:
  8862  001D12  5018               	movf	___flmul@a+3,w,c
  8863  001D14  0B80               	andlw	128
  8864  001D16  1A1D               	xorwf	___flmul@sign,f,c
  8865  001D18  5018               	movf	___flmul@a+3,w,c
  8866  001D1A  2418               	addwf	___flmul@a+3,w,c
  8867  001D1C  6E22               	movwf	___flmul@aexp,c
  8868  001D1E  BE17               	btfsc	___flmul@a+2,7,c
  8869  001D20  8022               	bsf	___flmul@aexp,0,c
  8870  001D22  5022               	movf	___flmul@aexp,w,c
  8871  001D24  B4D8               	btfsc	status,2,c
  8872  001D26  D00D               	goto	l4497
  8873  001D28  2822               	incf	___flmul@aexp,w,c
  8874  001D2A  A4D8               	btfss	status,2,c
  8875  001D2C  D008               	goto	l4495
  8876  001D2E  0E00               	movlw	0
  8877  001D30  6E15               	movwf	___flmul@a,c
  8878  001D32  0E00               	movlw	0
  8879  001D34  6E16               	movwf	___flmul@a+1,c
  8880  001D36  0E00               	movlw	0
  8881  001D38  6E17               	movwf	___flmul@a+2,c
  8882  001D3A  0E00               	movlw	0
  8883  001D3C  6E18               	movwf	___flmul@a+3,c
  8884  001D3E                     l4495:
  8885  001D3E  8E17               	bsf	___flmul@a+2,7,c
  8886  001D40  D008               	goto	l1103
  8887  001D42                     l4497:
  8888  001D42  0E00               	movlw	0
  8889  001D44  6E15               	movwf	___flmul@a,c
  8890  001D46  0E00               	movlw	0
  8891  001D48  6E16               	movwf	___flmul@a+1,c
  8892  001D4A  0E00               	movlw	0
  8893  001D4C  6E17               	movwf	___flmul@a+2,c
  8894  001D4E  0E00               	movlw	0
  8895  001D50  6E18               	movwf	___flmul@a+3,c
  8896  001D52                     l1103:
  8897  001D52  5022               	movf	___flmul@aexp,w,c
  8898  001D54  B4D8               	btfsc	status,2,c
  8899  001D56  D003               	goto	u5160
  8900  001D58  5023               	movf	___flmul@bexp,w,c
  8901  001D5A  A4D8               	btfss	status,2,c
  8902  001D5C  D009               	goto	l4505
  8903  001D5E                     u5160:
  8904  001D5E  0E00               	movlw	0
  8905  001D60  6E11               	movwf	?___flmul,c
  8906  001D62  0E00               	movlw	0
  8907  001D64  6E12               	movwf	?___flmul+1,c
  8908  001D66  0E00               	movlw	0
  8909  001D68  6E13               	movwf	?___flmul+2,c
  8910  001D6A  0E00               	movlw	0
  8911  001D6C  6E14               	movwf	?___flmul+3,c
  8912  001D6E  0012               	return	
  8913  001D70                     l4505:
  8914  001D70  5017               	movf	___flmul@a+2,w,c
  8915  001D72  0211               	mulwf	___flmul@b,c
  8916  001D74  CFF3 F028          	movff	prodl,___flmul@temp
  8917  001D78  CFF4 F029          	movff	prodh,___flmul@temp+1
  8918  001D7C  5028               	movf	___flmul@temp,w,c
  8919  001D7E  6E1E               	movwf	___flmul@grs,c
  8920  001D80  6A1F               	clrf	___flmul@grs+1,c
  8921  001D82  6A20               	clrf	___flmul@grs+2,c
  8922  001D84  6A21               	clrf	___flmul@grs+3,c
  8923  001D86  5029               	movf	___flmul@temp+1,w,c
  8924  001D88  6E24               	movwf	___flmul@prod,c
  8925  001D8A  6A25               	clrf	___flmul@prod+1,c
  8926  001D8C  6A26               	clrf	___flmul@prod+2,c
  8927  001D8E  6A27               	clrf	___flmul@prod+3,c
  8928  001D90  5016               	movf	___flmul@a+1,w,c
  8929  001D92  0212               	mulwf	___flmul@b+1,c
  8930  001D94  CFF3 F028          	movff	prodl,___flmul@temp
  8931  001D98  CFF4 F029          	movff	prodh,___flmul@temp+1
  8932  001D9C  5028               	movf	___flmul@temp,w,c
  8933  001D9E  261E               	addwf	___flmul@grs,f,c
  8934  001DA0  0E00               	movlw	0
  8935  001DA2  221F               	addwfc	___flmul@grs+1,f,c
  8936  001DA4  2220               	addwfc	___flmul@grs+2,f,c
  8937  001DA6  2221               	addwfc	___flmul@grs+3,f,c
  8938  001DA8  5029               	movf	___flmul@temp+1,w,c
  8939  001DAA  2624               	addwf	___flmul@prod,f,c
  8940  001DAC  0E00               	movlw	0
  8941  001DAE  2225               	addwfc	___flmul@prod+1,f,c
  8942  001DB0  2226               	addwfc	___flmul@prod+2,f,c
  8943  001DB2  2227               	addwfc	___flmul@prod+3,f,c
  8944  001DB4  5015               	movf	___flmul@a,w,c
  8945  001DB6  0213               	mulwf	___flmul@b+2,c
  8946  001DB8  CFF3 F028          	movff	prodl,___flmul@temp
  8947  001DBC  CFF4 F029          	movff	prodh,___flmul@temp+1
  8948  001DC0  5028               	movf	___flmul@temp,w,c
  8949  001DC2  261E               	addwf	___flmul@grs,f,c
  8950  001DC4  0E00               	movlw	0
  8951  001DC6  221F               	addwfc	___flmul@grs+1,f,c
  8952  001DC8  2220               	addwfc	___flmul@grs+2,f,c
  8953  001DCA  2221               	addwfc	___flmul@grs+3,f,c
  8954  001DCC  5029               	movf	___flmul@temp+1,w,c
  8955  001DCE  2624               	addwf	___flmul@prod,f,c
  8956  001DD0  0E00               	movlw	0
  8957  001DD2  2225               	addwfc	___flmul@prod+1,f,c
  8958  001DD4  2226               	addwfc	___flmul@prod+2,f,c
  8959  001DD6  2227               	addwfc	___flmul@prod+3,f,c
  8960  001DD8  C020  F021         	movff	___flmul@grs+2,___flmul@grs+3
  8961  001DDC  C01F  F020         	movff	___flmul@grs+1,___flmul@grs+2
  8962  001DE0  C01E  F01F         	movff	___flmul@grs,___flmul@grs+1
  8963  001DE4  6A1E               	clrf	___flmul@grs,c
  8964  001DE6  5015               	movf	___flmul@a,w,c
  8965  001DE8  0212               	mulwf	___flmul@b+1,c
  8966  001DEA  CFF3 F028          	movff	prodl,___flmul@temp
  8967  001DEE  CFF4 F029          	movff	prodh,___flmul@temp+1
  8968  001DF2  5028               	movf	___flmul@temp,w,c
  8969  001DF4  261E               	addwf	___flmul@grs,f,c
  8970  001DF6  5029               	movf	___flmul@temp+1,w,c
  8971  001DF8  221F               	addwfc	___flmul@grs+1,f,c
  8972  001DFA  0E00               	movlw	0
  8973  001DFC  2220               	addwfc	___flmul@grs+2,f,c
  8974  001DFE  0E00               	movlw	0
  8975  001E00  2221               	addwfc	___flmul@grs+3,f,c
  8976  001E02  5016               	movf	___flmul@a+1,w,c
  8977  001E04  0211               	mulwf	___flmul@b,c
  8978  001E06  CFF3 F028          	movff	prodl,___flmul@temp
  8979  001E0A  CFF4 F029          	movff	prodh,___flmul@temp+1
  8980  001E0E  5028               	movf	___flmul@temp,w,c
  8981  001E10  261E               	addwf	___flmul@grs,f,c
  8982  001E12  5029               	movf	___flmul@temp+1,w,c
  8983  001E14  221F               	addwfc	___flmul@grs+1,f,c
  8984  001E16  0E00               	movlw	0
  8985  001E18  2220               	addwfc	___flmul@grs+2,f,c
  8986  001E1A  0E00               	movlw	0
  8987  001E1C  2221               	addwfc	___flmul@grs+3,f,c
  8988  001E1E  C020  F021         	movff	___flmul@grs+2,___flmul@grs+3
  8989  001E22  C01F  F020         	movff	___flmul@grs+1,___flmul@grs+2
  8990  001E26  C01E  F01F         	movff	___flmul@grs,___flmul@grs+1
  8991  001E2A  6A1E               	clrf	___flmul@grs,c
  8992  001E2C  5015               	movf	___flmul@a,w,c
  8993  001E2E  0211               	mulwf	___flmul@b,c
  8994  001E30  CFF3 F028          	movff	prodl,___flmul@temp
  8995  001E34  CFF4 F029          	movff	prodh,___flmul@temp+1
  8996  001E38  5028               	movf	___flmul@temp,w,c
  8997  001E3A  261E               	addwf	___flmul@grs,f,c
  8998  001E3C  5029               	movf	___flmul@temp+1,w,c
  8999  001E3E  221F               	addwfc	___flmul@grs+1,f,c
  9000  001E40  0E00               	movlw	0
  9001  001E42  2220               	addwfc	___flmul@grs+2,f,c
  9002  001E44  0E00               	movlw	0
  9003  001E46  2221               	addwfc	___flmul@grs+3,f,c
  9004  001E48  5017               	movf	___flmul@a+2,w,c
  9005  001E4A  0212               	mulwf	___flmul@b+1,c
  9006  001E4C  CFF3 F028          	movff	prodl,___flmul@temp
  9007  001E50  CFF4 F029          	movff	prodh,___flmul@temp+1
  9008  001E54  5028               	movf	___flmul@temp,w,c
  9009  001E56  2624               	addwf	___flmul@prod,f,c
  9010  001E58  5029               	movf	___flmul@temp+1,w,c
  9011  001E5A  2225               	addwfc	___flmul@prod+1,f,c
  9012  001E5C  0E00               	movlw	0
  9013  001E5E  2226               	addwfc	___flmul@prod+2,f,c
  9014  001E60  0E00               	movlw	0
  9015  001E62  2227               	addwfc	___flmul@prod+3,f,c
  9016  001E64  5016               	movf	___flmul@a+1,w,c
  9017  001E66  0213               	mulwf	___flmul@b+2,c
  9018  001E68  CFF3 F028          	movff	prodl,___flmul@temp
  9019  001E6C  CFF4 F029          	movff	prodh,___flmul@temp+1
  9020  001E70  5028               	movf	___flmul@temp,w,c
  9021  001E72  2624               	addwf	___flmul@prod,f,c
  9022  001E74  5029               	movf	___flmul@temp+1,w,c
  9023  001E76  2225               	addwfc	___flmul@prod+1,f,c
  9024  001E78  0E00               	movlw	0
  9025  001E7A  2226               	addwfc	___flmul@prod+2,f,c
  9026  001E7C  0E00               	movlw	0
  9027  001E7E  2227               	addwfc	___flmul@prod+3,f,c
  9028  001E80  5017               	movf	___flmul@a+2,w,c
  9029  001E82  0213               	mulwf	___flmul@b+2,c
  9030  001E84  CFF3 F028          	movff	prodl,___flmul@temp
  9031  001E88  CFF4 F029          	movff	prodh,___flmul@temp+1
  9032  001E8C  5028               	movf	___flmul@temp,w,c
  9033  001E8E  6E19               	movwf	??___flmul& (0+255),c
  9034  001E90  5029               	movf	___flmul@temp+1,w,c
  9035  001E92  6E1A               	movwf	(??___flmul+1)& (0+255),c
  9036  001E94  6A1B               	clrf	(??___flmul+2)& (0+255),c
  9037  001E96  6A1C               	clrf	(??___flmul+3)& (0+255),c
  9038  001E98  C01B  F01C         	movff	??___flmul+2,??___flmul+3
  9039  001E9C  C01A  F01B         	movff	??___flmul+1,??___flmul+2
  9040  001EA0  C019  F01A         	movff	??___flmul,??___flmul+1
  9041  001EA4  6A19               	clrf	??___flmul,c
  9042  001EA6  5019               	movf	??___flmul,w,c
  9043  001EA8  2624               	addwf	___flmul@prod,f,c
  9044  001EAA  501A               	movf	??___flmul+1,w,c
  9045  001EAC  2225               	addwfc	___flmul@prod+1,f,c
  9046  001EAE  501B               	movf	??___flmul+2,w,c
  9047  001EB0  2226               	addwfc	___flmul@prod+2,f,c
  9048  001EB2  501C               	movf	??___flmul+3,w,c
  9049  001EB4  2227               	addwfc	___flmul@prod+3,f,c
  9050  001EB6  C01E  F019         	movff	___flmul@grs,??___flmul
  9051  001EBA  C01F  F01A         	movff	___flmul@grs+1,??___flmul+1
  9052  001EBE  C020  F01B         	movff	___flmul@grs+2,??___flmul+2
  9053  001EC2  C021  F01C         	movff	___flmul@grs+3,??___flmul+3
  9054  001EC6  0E19               	movlw	25
  9055  001EC8  D005               	goto	u5170
  9056  001ECA                     u5175:
  9057  001ECA  90D8               	bcf	status,0,c
  9058  001ECC  321C               	rrcf	??___flmul+3,f,c
  9059  001ECE  321B               	rrcf	??___flmul+2,f,c
  9060  001ED0  321A               	rrcf	??___flmul+1,f,c
  9061  001ED2  3219               	rrcf	??___flmul,f,c
  9062  001ED4                     u5170:
  9063  001ED4  2EE8               	decfsz	wreg,f,c
  9064  001ED6  D7F9               	goto	u5175
  9065  001ED8  5019               	movf	??___flmul,w,c
  9066  001EDA  2624               	addwf	___flmul@prod,f,c
  9067  001EDC  501A               	movf	??___flmul+1,w,c
  9068  001EDE  2225               	addwfc	___flmul@prod+1,f,c
  9069  001EE0  501B               	movf	??___flmul+2,w,c
  9070  001EE2  2226               	addwfc	___flmul@prod+2,f,c
  9071  001EE4  501C               	movf	??___flmul+3,w,c
  9072  001EE6  2227               	addwfc	___flmul@prod+3,f,c
  9073  001EE8  C020  F021         	movff	___flmul@grs+2,___flmul@grs+3
  9074  001EEC  C01F  F020         	movff	___flmul@grs+1,___flmul@grs+2
  9075  001EF0  C01E  F01F         	movff	___flmul@grs,___flmul@grs+1
  9076  001EF4  6A1E               	clrf	___flmul@grs,c
  9077  001EF6  5022               	movf	___flmul@aexp,w,c
  9078  001EF8  C023  F019         	movff	___flmul@bexp,??___flmul
  9079  001EFC  6A1A               	clrf	(??___flmul+1)& (0+255),c
  9080  001EFE  2619               	addwf	??___flmul,f,c
  9081  001F00  0E00               	movlw	0
  9082  001F02  221A               	addwfc	??___flmul+1,f,c
  9083  001F04  0E82               	movlw	130
  9084  001F06  2419               	addwf	??___flmul,w,c
  9085  001F08  6E28               	movwf	___flmul@temp,c
  9086  001F0A  0EFF               	movlw	255
  9087  001F0C  201A               	addwfc	??___flmul+1,w,c
  9088  001F0E  6E29               	movwf	___flmul@temp+1,c
  9089  001F10  D00F               	goto	l4553
  9090  001F12                     l4547:
  9091  001F12  90D8               	bcf	status,0,c
  9092  001F14  3624               	rlcf	___flmul@prod,f,c
  9093  001F16  3625               	rlcf	___flmul@prod+1,f,c
  9094  001F18  3626               	rlcf	___flmul@prod+2,f,c
  9095  001F1A  3627               	rlcf	___flmul@prod+3,f,c
  9096  001F1C  BE21               	btfsc	___flmul@grs+3,7,c
  9097  001F1E  8024               	bsf	___flmul@prod,0,c
  9098  001F20  90D8               	bcf	status,0,c
  9099  001F22  361E               	rlcf	___flmul@grs,f,c
  9100  001F24  361F               	rlcf	___flmul@grs+1,f,c
  9101  001F26  3620               	rlcf	___flmul@grs+2,f,c
  9102  001F28  3621               	rlcf	___flmul@grs+3,f,c
  9103  001F2A  0628               	decf	___flmul@temp,f,c
  9104  001F2C  A0D8               	btfss	status,0,c
  9105  001F2E  0629               	decf	___flmul@temp+1,f,c
  9106  001F30                     l4553:
  9107  001F30  AE26               	btfss	___flmul@prod+2,7,c
  9108  001F32  D7EF               	goto	l4547
  9109  001F34  0E00               	movlw	0
  9110  001F36  6E22               	movwf	___flmul@aexp,c
  9111  001F38  AE21               	btfss	___flmul@grs+3,7,c
  9112  001F3A  D017               	goto	l1112
  9113  001F3C  0EFF               	movlw	255
  9114  001F3E  141E               	andwf	___flmul@grs,w,c
  9115  001F40  6E19               	movwf	??___flmul& (0+255),c
  9116  001F42  0EFF               	movlw	255
  9117  001F44  141F               	andwf	___flmul@grs+1,w,c
  9118  001F46  6E1A               	movwf	(??___flmul+1)& (0+255),c
  9119  001F48  0EFF               	movlw	255
  9120  001F4A  1420               	andwf	___flmul@grs+2,w,c
  9121  001F4C  6E1B               	movwf	(??___flmul+2)& (0+255),c
  9122  001F4E  0E7F               	movlw	127
  9123  001F50  1421               	andwf	___flmul@grs+3,w,c
  9124  001F52  6E1C               	movwf	(??___flmul+3)& (0+255),c
  9125  001F54  5019               	movf	??___flmul,w,c
  9126  001F56  101A               	iorwf	??___flmul+1,w,c
  9127  001F58  101B               	iorwf	??___flmul+2,w,c
  9128  001F5A  101C               	iorwf	??___flmul+3,w,c
  9129  001F5C  B4D8               	btfsc	status,2,c
  9130  001F5E  D003               	goto	l1113
  9131  001F60                     u5210:
  9132  001F60  0E01               	movlw	1
  9133  001F62  6E22               	movwf	___flmul@aexp,c
  9134  001F64  D002               	goto	l1112
  9135  001F66                     l1113:
  9136  001F66  B024               	btfsc	___flmul@prod,0,c
  9137  001F68  D7FB               	goto	u5210
  9138  001F6A                     l1112:
  9139  001F6A  5022               	movf	___flmul@aexp,w,c
  9140  001F6C  B4D8               	btfsc	status,2,c
  9141  001F6E  D01F               	goto	l4573
  9142  001F70  0E01               	movlw	1
  9143  001F72  2624               	addwf	___flmul@prod,f,c
  9144  001F74  0E00               	movlw	0
  9145  001F76  2225               	addwfc	___flmul@prod+1,f,c
  9146  001F78  2226               	addwfc	___flmul@prod+2,f,c
  9147  001F7A  2227               	addwfc	___flmul@prod+3,f,c
  9148  001F7C  A027               	btfss	___flmul@prod+3,0,c
  9149  001F7E  D017               	goto	l4573
  9150  001F80  C024  F019         	movff	___flmul@prod,??___flmul
  9151  001F84  C025  F01A         	movff	___flmul@prod+1,??___flmul+1
  9152  001F88  C026  F01B         	movff	___flmul@prod+2,??___flmul+2
  9153  001F8C  C027  F01C         	movff	___flmul@prod+3,??___flmul+3
  9154  001F90  341C               	rlcf	??___flmul+3,w,c
  9155  001F92  321C               	rrcf	??___flmul+3,f,c
  9156  001F94  321B               	rrcf	??___flmul+2,f,c
  9157  001F96  321A               	rrcf	??___flmul+1,f,c
  9158  001F98  3219               	rrcf	??___flmul,f,c
  9159  001F9A  C019  F024         	movff	??___flmul,___flmul@prod
  9160  001F9E  C01A  F025         	movff	??___flmul+1,___flmul@prod+1
  9161  001FA2  C01B  F026         	movff	??___flmul+2,___flmul@prod+2
  9162  001FA6  C01C  F027         	movff	??___flmul+3,___flmul@prod+3
  9163  001FAA  4A28               	infsnz	___flmul@temp,f,c
  9164  001FAC  2A29               	incf	___flmul@temp+1,f,c
  9165  001FAE                     l4573:
  9166  001FAE  BE29               	btfsc	___flmul@temp+1,7,c
  9167  001FB0  D00D               	goto	l4577
  9168  001FB2  5029               	movf	___flmul@temp+1,w,c
  9169  001FB4  E103               	bnz	u5250
  9170  001FB6  2828               	incf	___flmul@temp,w,c
  9171  001FB8  A0D8               	btfss	status,0,c
  9172  001FBA  D008               	goto	l4577
  9173  001FBC                     u5250:
  9174  001FBC  0E00               	movlw	0
  9175  001FBE  6E24               	movwf	___flmul@prod,c
  9176  001FC0  0E00               	movlw	0
  9177  001FC2  6E25               	movwf	___flmul@prod+1,c
  9178  001FC4  0E80               	movlw	128
  9179  001FC6  6E26               	movwf	___flmul@prod+2,c
  9180  001FC8  0E7F               	movlw	127
  9181  001FCA  D020               	goto	L21
  9182  001FCC                     l4577:
  9183  001FCC  BE29               	btfsc	___flmul@temp+1,7,c
  9184  001FCE  D005               	goto	u5260
  9185  001FD0  5029               	movf	___flmul@temp+1,w,c
  9186  001FD2  E10E               	bnz	l1120
  9187  001FD4  0428               	decf	___flmul@temp,w,c
  9188  001FD6  B0D8               	btfsc	status,0,c
  9189  001FD8  D00B               	goto	l1120
  9190  001FDA                     u5260:
  9191  001FDA  0E00               	movlw	0
  9192  001FDC  6E24               	movwf	___flmul@prod,c
  9193  001FDE  0E00               	movlw	0
  9194  001FE0  6E25               	movwf	___flmul@prod+1,c
  9195  001FE2  0E00               	movlw	0
  9196  001FE4  6E26               	movwf	___flmul@prod+2,c
  9197  001FE6  0E00               	movlw	0
  9198  001FE8  6E27               	movwf	___flmul@prod+3,c
  9199  001FEA  0E00               	movlw	0
  9200  001FEC  6E1D               	movwf	___flmul@sign,c
  9201  001FEE  D00F               	goto	l4589
  9202  001FF0                     l1120:
  9203  001FF0  C028  F023         	movff	___flmul@temp,___flmul@bexp
  9204  001FF4  0EFF               	movlw	255
  9205  001FF6  1624               	andwf	___flmul@prod,f,c
  9206  001FF8  0EFF               	movlw	255
  9207  001FFA  1625               	andwf	___flmul@prod+1,f,c
  9208  001FFC  0E7F               	movlw	127
  9209  001FFE  1626               	andwf	___flmul@prod+2,f,c
  9210  002000  0E00               	movlw	0
  9211  002002  1627               	andwf	___flmul@prod+3,f,c
  9212  002004  B023               	btfsc	___flmul@bexp,0,c
  9213  002006  8E26               	bsf	___flmul@prod+2,7,c
  9214  002008  90D8               	bcf	status,0,c
  9215  00200A  3023               	rrcf	___flmul@bexp,w,c
  9216  00200C                     L21:
  9217  00200C  6E27               	movwf	___flmul@prod+3,c
  9218  00200E                     l4589:
  9219  00200E  501D               	movf	___flmul@sign,w,c
  9220  002010  1227               	iorwf	___flmul@prod+3,f,c
  9221  002012  C024  F011         	movff	___flmul@prod,?___flmul
  9222  002016  C025  F012         	movff	___flmul@prod+1,?___flmul+1
  9223  00201A  C026  F013         	movff	___flmul@prod+2,?___flmul+2
  9224  00201E  C027  F014         	movff	___flmul@prod+3,?___flmul+3
  9225  002022  0012               	return		;funcret
  9226  002024                     __end_of___flmul:
  9227                           	opt callstack 0
  9228                           
  9229 ;; *************** function ___fldiv *****************
  9230 ;; Defined at:
  9231 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\sprcdiv.c"
  9232 ;; Parameters:    Size  Location     Type
  9233 ;;  b               4   65[COMRAM] unsigned char 
  9234 ;;  a               4   69[COMRAM] unsigned char 
  9235 ;; Auto vars:     Size  Location     Type
  9236 ;;  grs             4   84[COMRAM] unsigned long 
  9237 ;;  rem             4   77[COMRAM] unsigned long 
  9238 ;;  new_exp         2   82[COMRAM] short 
  9239 ;;  aexp            1   89[COMRAM] unsigned char 
  9240 ;;  bexp            1   88[COMRAM] unsigned char 
  9241 ;;  sign            1   81[COMRAM] unsigned char 
  9242 ;; Return value:  Size  Location     Type
  9243 ;;                  4   65[COMRAM] unsigned char 
  9244 ;; Registers used:
  9245 ;;		wreg, status,2, status,0
  9246 ;; Tracked objects:
  9247 ;;		On entry : 0/0
  9248 ;;		On exit  : 0/0
  9249 ;;		Unchanged: 0/0
  9250 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9251 ;;      Params:         8       0       0       0       0       0       0       0       0
  9252 ;;      Locals:        13       0       0       0       0       0       0       0       0
  9253 ;;      Temps:          4       0       0       0       0       0       0       0       0
  9254 ;;      Totals:        25       0       0       0       0       0       0       0       0
  9255 ;;Total ram usage:       25 bytes
  9256 ;; Hardware stack levels used:    1
  9257 ;; Hardware stack levels required when called:    3
  9258 ;; This function calls:
  9259 ;;		Nothing
  9260 ;; This function is called by:
  9261 ;;		_Ohm2C
  9262 ;;		_update_ADC_results
  9263 ;;		_logf
  9264 ;; This function uses a non-reentrant model
  9265 ;;
  9266                           
  9267                           	psect	text37
  9268  002330                     __ptext37:
  9269                           	opt callstack 0
  9270  002330                     ___fldiv:
  9271                           	opt callstack 25
  9272                           
  9273                           ;incstack = 0
  9274  002330  5045               	movf	___fldiv@b+3,w,c
  9275  002332  0B80               	andlw	128
  9276  002334  6E52               	movwf	___fldiv@sign,c
  9277  002336  5045               	movf	___fldiv@b+3,w,c
  9278  002338  2445               	addwf	___fldiv@b+3,w,c
  9279  00233A  6E59               	movwf	___fldiv@bexp,c
  9280  00233C  BE44               	btfsc	___fldiv@b+2,7,c
  9281  00233E  8059               	bsf	___fldiv@bexp,0,c
  9282  002340  5059               	movf	___fldiv@bexp,w,c
  9283  002342  B4D8               	btfsc	status,2,c
  9284  002344  D00D               	goto	l4343
  9285  002346  2859               	incf	___fldiv@bexp,w,c
  9286  002348  A4D8               	btfss	status,2,c
  9287  00234A  D008               	goto	l4339
  9288  00234C  0E00               	movlw	0
  9289  00234E  6E42               	movwf	___fldiv@b,c
  9290  002350  0E00               	movlw	0
  9291  002352  6E43               	movwf	___fldiv@b+1,c
  9292  002354  0E00               	movlw	0
  9293  002356  6E44               	movwf	___fldiv@b+2,c
  9294  002358  0E00               	movlw	0
  9295  00235A  6E45               	movwf	___fldiv@b+3,c
  9296  00235C                     l4339:
  9297  00235C  8E44               	bsf	___fldiv@b+2,7,c
  9298  00235E  D006               	goto	L22
  9299  002360                     l4343:
  9300  002360  0E00               	movlw	0
  9301  002362  6E42               	movwf	___fldiv@b,c
  9302  002364  0E00               	movlw	0
  9303  002366  6E43               	movwf	___fldiv@b+1,c
  9304  002368  0E00               	movlw	0
  9305  00236A  6E44               	movwf	___fldiv@b+2,c
  9306  00236C                     L22:
  9307  00236C  0E00               	movlw	0
  9308  00236E  6E45               	movwf	___fldiv@b+3,c
  9309  002370  5049               	movf	___fldiv@a+3,w,c
  9310  002372  0B80               	andlw	128
  9311  002374  1A52               	xorwf	___fldiv@sign,f,c
  9312  002376  5049               	movf	___fldiv@a+3,w,c
  9313  002378  2449               	addwf	___fldiv@a+3,w,c
  9314  00237A  6E5A               	movwf	___fldiv@aexp,c
  9315  00237C  BE48               	btfsc	___fldiv@a+2,7,c
  9316  00237E  805A               	bsf	___fldiv@aexp,0,c
  9317  002380  505A               	movf	___fldiv@aexp,w,c
  9318  002382  B4D8               	btfsc	status,2,c
  9319  002384  D00D               	goto	l4363
  9320  002386  285A               	incf	___fldiv@aexp,w,c
  9321  002388  A4D8               	btfss	status,2,c
  9322  00238A  D008               	goto	l4359
  9323  00238C  0E00               	movlw	0
  9324  00238E  6E46               	movwf	___fldiv@a,c
  9325  002390  0E00               	movlw	0
  9326  002392  6E47               	movwf	___fldiv@a+1,c
  9327  002394  0E00               	movlw	0
  9328  002396  6E48               	movwf	___fldiv@a+2,c
  9329  002398  0E00               	movlw	0
  9330  00239A  6E49               	movwf	___fldiv@a+3,c
  9331  00239C                     l4359:
  9332  00239C  8E48               	bsf	___fldiv@a+2,7,c
  9333  00239E  D006               	goto	L23
  9334  0023A0                     l4363:
  9335  0023A0  0E00               	movlw	0
  9336  0023A2  6E46               	movwf	___fldiv@a,c
  9337  0023A4  0E00               	movlw	0
  9338  0023A6  6E47               	movwf	___fldiv@a+1,c
  9339  0023A8  0E00               	movlw	0
  9340  0023AA  6E48               	movwf	___fldiv@a+2,c
  9341  0023AC                     L23:
  9342  0023AC  0E00               	movlw	0
  9343  0023AE  6E49               	movwf	___fldiv@a+3,c
  9344  0023B0  5046               	movf	___fldiv@a,w,c
  9345  0023B2  1047               	iorwf	___fldiv@a+1,w,c
  9346  0023B4  1048               	iorwf	___fldiv@a+2,w,c
  9347  0023B6  1049               	iorwf	___fldiv@a+3,w,c
  9348  0023B8  A4D8               	btfss	status,2,c
  9349  0023BA  D017               	goto	l4377
  9350  0023BC  0E00               	movlw	0
  9351  0023BE  6E42               	movwf	___fldiv@b,c
  9352  0023C0  0E00               	movlw	0
  9353  0023C2  6E43               	movwf	___fldiv@b+1,c
  9354  0023C4  0E00               	movlw	0
  9355  0023C6  6E44               	movwf	___fldiv@b+2,c
  9356  0023C8  0E00               	movlw	0
  9357  0023CA  6E45               	movwf	___fldiv@b+3,c
  9358  0023CC  0E80               	movlw	128
  9359  0023CE  1244               	iorwf	___fldiv@b+2,f,c
  9360  0023D0  0E7F               	movlw	127
  9361  0023D2  1245               	iorwf	___fldiv@b+3,f,c
  9362  0023D4                     l4371:
  9363  0023D4  5052               	movf	___fldiv@sign,w,c
  9364  0023D6  1245               	iorwf	___fldiv@b+3,f,c
  9365  0023D8  C042  F042         	movff	___fldiv@b,?___fldiv
  9366  0023DC  C043  F043         	movff	___fldiv@b+1,?___fldiv+1
  9367  0023E0  C044  F044         	movff	___fldiv@b+2,?___fldiv+2
  9368  0023E4  C045  F045         	movff	___fldiv@b+3,?___fldiv+3
  9369  0023E8  0012               	return	
  9370  0023EA                     l4377:
  9371  0023EA  5059               	movf	___fldiv@bexp,w,c
  9372  0023EC  A4D8               	btfss	status,2,c
  9373  0023EE  D009               	goto	l4385
  9374  0023F0  0E00               	movlw	0
  9375  0023F2  6E42               	movwf	?___fldiv,c
  9376  0023F4  0E00               	movlw	0
  9377  0023F6  6E43               	movwf	?___fldiv+1,c
  9378  0023F8  0E00               	movlw	0
  9379  0023FA  6E44               	movwf	?___fldiv+2,c
  9380  0023FC  0E00               	movlw	0
  9381  0023FE  6E45               	movwf	?___fldiv+3,c
  9382  002400  0012               	return	
  9383  002402                     l4385:
  9384  002402  505A               	movf	___fldiv@aexp,w,c
  9385  002404  C059  F04A         	movff	___fldiv@bexp,??___fldiv
  9386  002408  6A4B               	clrf	(??___fldiv+1)& (0+255),c
  9387  00240A  5E4A               	subwf	??___fldiv,f,c
  9388  00240C  0E00               	movlw	0
  9389  00240E  5A4B               	subwfb	??___fldiv+1,f,c
  9390  002410  0E7F               	movlw	127
  9391  002412  244A               	addwf	??___fldiv,w,c
  9392  002414  6E53               	movwf	___fldiv@new_exp,c
  9393  002416  0E00               	movlw	0
  9394  002418  204B               	addwfc	??___fldiv+1,w,c
  9395  00241A  6E54               	movwf	___fldiv@new_exp+1,c
  9396  00241C  C042  F04E         	movff	___fldiv@b,___fldiv@rem
  9397  002420  C043  F04F         	movff	___fldiv@b+1,___fldiv@rem+1
  9398  002424  C044  F050         	movff	___fldiv@b+2,___fldiv@rem+2
  9399  002428  C045  F051         	movff	___fldiv@b+3,___fldiv@rem+3
  9400  00242C  0E00               	movlw	0
  9401  00242E  6E42               	movwf	___fldiv@b,c
  9402  002430  0E00               	movlw	0
  9403  002432  6E43               	movwf	___fldiv@b+1,c
  9404  002434  0E00               	movlw	0
  9405  002436  6E44               	movwf	___fldiv@b+2,c
  9406  002438  0E00               	movlw	0
  9407  00243A  6E45               	movwf	___fldiv@b+3,c
  9408  00243C  0E00               	movlw	0
  9409  00243E  6E55               	movwf	___fldiv@grs,c
  9410  002440  0E00               	movlw	0
  9411  002442  6E56               	movwf	___fldiv@grs+1,c
  9412  002444  0E00               	movlw	0
  9413  002446  6E57               	movwf	___fldiv@grs+2,c
  9414  002448  0E00               	movlw	0
  9415  00244A  6E58               	movwf	___fldiv@grs+3,c
  9416  00244C  0E00               	movlw	0
  9417  00244E  6E5A               	movwf	___fldiv@aexp,c
  9418  002450  D028               	goto	l1073
  9419  002452                     l4395:
  9420  002452  505A               	movf	___fldiv@aexp,w,c
  9421  002454  B4D8               	btfsc	status,2,c
  9422  002456  D011               	goto	l4403
  9423  002458  90D8               	bcf	status,0,c
  9424  00245A  364E               	rlcf	___fldiv@rem,f,c
  9425  00245C  364F               	rlcf	___fldiv@rem+1,f,c
  9426  00245E  3650               	rlcf	___fldiv@rem+2,f,c
  9427  002460  3651               	rlcf	___fldiv@rem+3,f,c
  9428  002462  90D8               	bcf	status,0,c
  9429  002464  3642               	rlcf	___fldiv@b,f,c
  9430  002466  3643               	rlcf	___fldiv@b+1,f,c
  9431  002468  3644               	rlcf	___fldiv@b+2,f,c
  9432  00246A  3645               	rlcf	___fldiv@b+3,f,c
  9433  00246C  BE58               	btfsc	___fldiv@grs+3,7,c
  9434  00246E  8042               	bsf	___fldiv@b,0,c
  9435  002470  90D8               	bcf	status,0,c
  9436  002472  3655               	rlcf	___fldiv@grs,f,c
  9437  002474  3656               	rlcf	___fldiv@grs+1,f,c
  9438  002476  3657               	rlcf	___fldiv@grs+2,f,c
  9439  002478  3658               	rlcf	___fldiv@grs+3,f,c
  9440  00247A                     l4403:
  9441  00247A  5046               	movf	___fldiv@a,w,c
  9442  00247C  5C4E               	subwf	___fldiv@rem,w,c
  9443  00247E  5047               	movf	___fldiv@a+1,w,c
  9444  002480  584F               	subwfb	___fldiv@rem+1,w,c
  9445  002482  5048               	movf	___fldiv@a+2,w,c
  9446  002484  5850               	subwfb	___fldiv@rem+2,w,c
  9447  002486  5049               	movf	___fldiv@a+3,w,c
  9448  002488  5851               	subwfb	___fldiv@rem+3,w,c
  9449  00248A  A0D8               	btfss	status,0,c
  9450  00248C  D009               	goto	l4409
  9451  00248E  8C58               	bsf	___fldiv@grs+3,6,c
  9452  002490  5046               	movf	___fldiv@a,w,c
  9453  002492  5E4E               	subwf	___fldiv@rem,f,c
  9454  002494  5047               	movf	___fldiv@a+1,w,c
  9455  002496  5A4F               	subwfb	___fldiv@rem+1,f,c
  9456  002498  5048               	movf	___fldiv@a+2,w,c
  9457  00249A  5A50               	subwfb	___fldiv@rem+2,f,c
  9458  00249C  5049               	movf	___fldiv@a+3,w,c
  9459  00249E  5A51               	subwfb	___fldiv@rem+3,f,c
  9460  0024A0                     l4409:
  9461  0024A0  2A5A               	incf	___fldiv@aexp,f,c
  9462  0024A2                     l1073:
  9463  0024A2  0E19               	movlw	25
  9464  0024A4  645A               	cpfsgt	___fldiv@aexp,c
  9465  0024A6  D7D5               	goto	l4395
  9466  0024A8  504E               	movf	___fldiv@rem,w,c
  9467  0024AA  104F               	iorwf	___fldiv@rem+1,w,c
  9468  0024AC  1050               	iorwf	___fldiv@rem+2,w,c
  9469  0024AE  1051               	iorwf	___fldiv@rem+3,w,c
  9470  0024B0  B4D8               	btfsc	status,2,c
  9471  0024B2  D011               	goto	l4421
  9472  0024B4  8055               	bsf	___fldiv@grs,0,c
  9473  0024B6  D00F               	goto	l4421
  9474  0024B8                     l4415:
  9475  0024B8  90D8               	bcf	status,0,c
  9476  0024BA  3642               	rlcf	___fldiv@b,f,c
  9477  0024BC  3643               	rlcf	___fldiv@b+1,f,c
  9478  0024BE  3644               	rlcf	___fldiv@b+2,f,c
  9479  0024C0  3645               	rlcf	___fldiv@b+3,f,c
  9480  0024C2  BE58               	btfsc	___fldiv@grs+3,7,c
  9481  0024C4  8042               	bsf	___fldiv@b,0,c
  9482  0024C6  90D8               	bcf	status,0,c
  9483  0024C8  3655               	rlcf	___fldiv@grs,f,c
  9484  0024CA  3656               	rlcf	___fldiv@grs+1,f,c
  9485  0024CC  3657               	rlcf	___fldiv@grs+2,f,c
  9486  0024CE  3658               	rlcf	___fldiv@grs+3,f,c
  9487  0024D0  0653               	decf	___fldiv@new_exp,f,c
  9488  0024D2  A0D8               	btfss	status,0,c
  9489  0024D4  0654               	decf	___fldiv@new_exp+1,f,c
  9490  0024D6                     l4421:
  9491  0024D6  AE44               	btfss	___fldiv@b+2,7,c
  9492  0024D8  D7EF               	goto	l4415
  9493  0024DA  0E00               	movlw	0
  9494  0024DC  6E5A               	movwf	___fldiv@aexp,c
  9495  0024DE  AE58               	btfss	___fldiv@grs+3,7,c
  9496  0024E0  D017               	goto	l1084
  9497  0024E2  0EFF               	movlw	255
  9498  0024E4  1455               	andwf	___fldiv@grs,w,c
  9499  0024E6  6E4A               	movwf	??___fldiv& (0+255),c
  9500  0024E8  0EFF               	movlw	255
  9501  0024EA  1456               	andwf	___fldiv@grs+1,w,c
  9502  0024EC  6E4B               	movwf	(??___fldiv+1)& (0+255),c
  9503  0024EE  0EFF               	movlw	255
  9504  0024F0  1457               	andwf	___fldiv@grs+2,w,c
  9505  0024F2  6E4C               	movwf	(??___fldiv+2)& (0+255),c
  9506  0024F4  0E7F               	movlw	127
  9507  0024F6  1458               	andwf	___fldiv@grs+3,w,c
  9508  0024F8  6E4D               	movwf	(??___fldiv+3)& (0+255),c
  9509  0024FA  504A               	movf	??___fldiv,w,c
  9510  0024FC  104B               	iorwf	??___fldiv+1,w,c
  9511  0024FE  104C               	iorwf	??___fldiv+2,w,c
  9512  002500  104D               	iorwf	??___fldiv+3,w,c
  9513  002502  B4D8               	btfsc	status,2,c
  9514  002504  D003               	goto	l1085
  9515  002506                     u5020:
  9516  002506  0E01               	movlw	1
  9517  002508  6E5A               	movwf	___fldiv@aexp,c
  9518  00250A  D002               	goto	l1084
  9519  00250C                     l1085:
  9520  00250C  B042               	btfsc	___fldiv@b,0,c
  9521  00250E  D7FB               	goto	u5020
  9522  002510                     l1084:
  9523  002510  505A               	movf	___fldiv@aexp,w,c
  9524  002512  B4D8               	btfsc	status,2,c
  9525  002514  D01F               	goto	l4441
  9526  002516  0E01               	movlw	1
  9527  002518  2642               	addwf	___fldiv@b,f,c
  9528  00251A  0E00               	movlw	0
  9529  00251C  2243               	addwfc	___fldiv@b+1,f,c
  9530  00251E  2244               	addwfc	___fldiv@b+2,f,c
  9531  002520  2245               	addwfc	___fldiv@b+3,f,c
  9532  002522  A045               	btfss	___fldiv@b+3,0,c
  9533  002524  D017               	goto	l4441
  9534  002526  C042  F04A         	movff	___fldiv@b,??___fldiv
  9535  00252A  C043  F04B         	movff	___fldiv@b+1,??___fldiv+1
  9536  00252E  C044  F04C         	movff	___fldiv@b+2,??___fldiv+2
  9537  002532  C045  F04D         	movff	___fldiv@b+3,??___fldiv+3
  9538  002536  344D               	rlcf	??___fldiv+3,w,c
  9539  002538  324D               	rrcf	??___fldiv+3,f,c
  9540  00253A  324C               	rrcf	??___fldiv+2,f,c
  9541  00253C  324B               	rrcf	??___fldiv+1,f,c
  9542  00253E  324A               	rrcf	??___fldiv,f,c
  9543  002540  C04A  F042         	movff	??___fldiv,___fldiv@b
  9544  002544  C04B  F043         	movff	??___fldiv+1,___fldiv@b+1
  9545  002548  C04C  F044         	movff	??___fldiv+2,___fldiv@b+2
  9546  00254C  C04D  F045         	movff	??___fldiv+3,___fldiv@b+3
  9547  002550  4A53               	infsnz	___fldiv@new_exp,f,c
  9548  002552  2A54               	incf	___fldiv@new_exp+1,f,c
  9549  002554                     l4441:
  9550  002554  BE54               	btfsc	___fldiv@new_exp+1,7,c
  9551  002556  D010               	goto	l4445
  9552  002558  5054               	movf	___fldiv@new_exp+1,w,c
  9553  00255A  E103               	bnz	u5060
  9554  00255C  2853               	incf	___fldiv@new_exp,w,c
  9555  00255E  A0D8               	btfss	status,0,c
  9556  002560  D00B               	goto	l4445
  9557  002562                     u5060:
  9558  002562  0E00               	movlw	0
  9559  002564  6E54               	movwf	___fldiv@new_exp+1,c
  9560  002566  6853               	setf	___fldiv@new_exp,c
  9561  002568  0E00               	movlw	0
  9562  00256A  6E42               	movwf	___fldiv@b,c
  9563  00256C  0E00               	movlw	0
  9564  00256E  6E43               	movwf	___fldiv@b+1,c
  9565  002570  0E00               	movlw	0
  9566  002572  6E44               	movwf	___fldiv@b+2,c
  9567  002574  0E00               	movlw	0
  9568  002576  6E45               	movwf	___fldiv@b+3,c
  9569  002578                     l4445:
  9570  002578  BE54               	btfsc	___fldiv@new_exp+1,7,c
  9571  00257A  D005               	goto	u5070
  9572  00257C  5054               	movf	___fldiv@new_exp+1,w,c
  9573  00257E  E111               	bnz	l4449
  9574  002580  0453               	decf	___fldiv@new_exp,w,c
  9575  002582  B0D8               	btfsc	status,0,c
  9576  002584  D00E               	goto	l4449
  9577  002586                     u5070:
  9578  002586  0E00               	movlw	0
  9579  002588  6E54               	movwf	___fldiv@new_exp+1,c
  9580  00258A  0E00               	movlw	0
  9581  00258C  6E53               	movwf	___fldiv@new_exp,c
  9582  00258E  0E00               	movlw	0
  9583  002590  6E42               	movwf	___fldiv@b,c
  9584  002592  0E00               	movlw	0
  9585  002594  6E43               	movwf	___fldiv@b+1,c
  9586  002596  0E00               	movlw	0
  9587  002598  6E44               	movwf	___fldiv@b+2,c
  9588  00259A  0E00               	movlw	0
  9589  00259C  6E45               	movwf	___fldiv@b+3,c
  9590  00259E  0E00               	movlw	0
  9591  0025A0  6E52               	movwf	___fldiv@sign,c
  9592  0025A2                     l4449:
  9593  0025A2  C053  F059         	movff	___fldiv@new_exp,___fldiv@bexp
  9594  0025A6  A059               	btfss	___fldiv@bexp,0,c
  9595  0025A8  D002               	goto	l4455
  9596  0025AA  8E44               	bsf	___fldiv@b+2,7,c
  9597  0025AC  D001               	goto	l4457
  9598  0025AE                     l4455:
  9599  0025AE  9E44               	bcf	___fldiv@b+2,7,c
  9600  0025B0                     l4457:
  9601  0025B0  90D8               	bcf	status,0,c
  9602  0025B2  3059               	rrcf	___fldiv@bexp,w,c
  9603  0025B4  6E45               	movwf	___fldiv@b+3,c
  9604  0025B6  D70E               	goto	l4371
  9605  0025B8                     __end_of___fldiv:
  9606                           	opt callstack 0
  9607                           
  9608 ;; *************** function ___fltol *****************
  9609 ;; Defined at:
  9610 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\fltol.c"
  9611 ;; Parameters:    Size  Location     Type
  9612 ;;  f1              4    0[BANK0 ] unsigned char 
  9613 ;; Auto vars:     Size  Location     Type
  9614 ;;  exp1            1    9[BANK0 ] unsigned char 
  9615 ;;  sign1           1    8[BANK0 ] unsigned char 
  9616 ;; Return value:  Size  Location     Type
  9617 ;;                  4    0[BANK0 ] long 
  9618 ;; Registers used:
  9619 ;;		wreg, status,2, status,0
  9620 ;; Tracked objects:
  9621 ;;		On entry : 0/0
  9622 ;;		On exit  : 0/0
  9623 ;;		Unchanged: 0/0
  9624 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9625 ;;      Params:         0       4       0       0       0       0       0       0       0
  9626 ;;      Locals:         0       2       0       0       0       0       0       0       0
  9627 ;;      Temps:          0       4       0       0       0       0       0       0       0
  9628 ;;      Totals:         0      10       0       0       0       0       0       0       0
  9629 ;;Total ram usage:       10 bytes
  9630 ;; Hardware stack levels used:    1
  9631 ;; Hardware stack levels required when called:    3
  9632 ;; This function calls:
  9633 ;;		Nothing
  9634 ;; This function is called by:
  9635 ;;		_Ohm2C
  9636 ;;		_update_ADC_results
  9637 ;; This function uses a non-reentrant model
  9638 ;;
  9639                           
  9640                           	psect	text38
  9641  0038D0                     __ptext38:
  9642                           	opt callstack 0
  9643  0038D0                     ___fltol:
  9644                           	opt callstack 25
  9645                           
  9646                           ;incstack = 0
  9647  0038D0  0100               	movlb	0	; () banked
  9648  0038D2  3562               	rlcf	(___fltol@f1+2)& (0+255),w,b
  9649  0038D4  3563               	rlcf	(___fltol@f1+3)& (0+255),w,b
  9650  0038D6  6F69               	movwf	___fltol@exp1& (0+255),b
  9651  0038D8  5169               	movf	___fltol@exp1& (0+255),w,b
  9652  0038DA  A4D8               	btfss	status,2,c
  9653  0038DC  D009               	goto	l5173
  9654  0038DE                     u5710:
  9655                           
  9656                           ; BSR set to: 0
  9657  0038DE  0E00               	movlw	0
  9658  0038E0  6F60               	movwf	?___fltol& (0+255),b
  9659  0038E2  0E00               	movlw	0
  9660  0038E4  6F61               	movwf	(?___fltol+1)& (0+255),b
  9661  0038E6  0E00               	movlw	0
  9662  0038E8  6F62               	movwf	(?___fltol+2)& (0+255),b
  9663  0038EA  0E00               	movlw	0
  9664  0038EC  6F63               	movwf	(?___fltol+3)& (0+255),b
  9665  0038EE  0012               	return	
  9666  0038F0                     l5173:
  9667                           
  9668                           ; BSR set to: 0
  9669  0038F0  C060  F064         	movff	___fltol@f1,??___fltol
  9670  0038F4  C061  F065         	movff	___fltol@f1+1,??___fltol+1
  9671  0038F8  C062  F066         	movff	___fltol@f1+2,??___fltol+2
  9672  0038FC  C063  F067         	movff	___fltol@f1+3,??___fltol+3
  9673  003900  0E20               	movlw	32
  9674  003902  D005               	goto	u5720
  9675  003904                     u5725:
  9676  003904  90D8               	bcf	status,0,c
  9677  003906  3367               	rrcf	(??___fltol+3)& (0+255),f,b
  9678  003908  3366               	rrcf	(??___fltol+2)& (0+255),f,b
  9679  00390A  3365               	rrcf	(??___fltol+1)& (0+255),f,b
  9680  00390C  3364               	rrcf	??___fltol& (0+255),f,b
  9681  00390E                     u5720:
  9682  00390E  2EE8               	decfsz	wreg,f,c
  9683  003910  D7F9               	goto	u5725
  9684  003912  5164               	movf	??___fltol& (0+255),w,b
  9685  003914  6F68               	movwf	___fltol@sign1& (0+255),b
  9686                           
  9687                           ; BSR set to: 0
  9688  003916  8F62               	bsf	(___fltol@f1+2)& (0+255),7,b
  9689                           
  9690                           ; BSR set to: 0
  9691  003918  0EFF               	movlw	255
  9692  00391A  1760               	andwf	___fltol@f1& (0+255),f,b
  9693  00391C  0EFF               	movlw	255
  9694  00391E  1761               	andwf	(___fltol@f1+1)& (0+255),f,b
  9695  003920  0EFF               	movlw	255
  9696  003922  1762               	andwf	(___fltol@f1+2)& (0+255),f,b
  9697  003924  0E00               	movlw	0
  9698  003926  1763               	andwf	(___fltol@f1+3)& (0+255),f,b
  9699                           
  9700                           ; BSR set to: 0
  9701  003928  0E96               	movlw	150
  9702  00392A  5F69               	subwf	___fltol@exp1& (0+255),f,b
  9703                           
  9704                           ; BSR set to: 0
  9705  00392C  AF69               	btfss	___fltol@exp1& (0+255),7,b
  9706  00392E  D00D               	goto	l5193
  9707                           
  9708                           ; BSR set to: 0
  9709  003930  5169               	movf	___fltol@exp1& (0+255),w,b
  9710  003932  0A80               	xorlw	128
  9711  003934  0F97               	addlw	151
  9712  003936  A0D8               	btfss	status,0,c
  9713  003938  D7D2               	goto	u5710
  9714  00393A                     l5189:
  9715                           
  9716                           ; BSR set to: 0
  9717  00393A  90D8               	bcf	status,0,c
  9718  00393C  3363               	rrcf	(___fltol@f1+3)& (0+255),f,b
  9719  00393E  3362               	rrcf	(___fltol@f1+2)& (0+255),f,b
  9720  003940  3361               	rrcf	(___fltol@f1+1)& (0+255),f,b
  9721  003942  3360               	rrcf	___fltol@f1& (0+255),f,b
  9722                           
  9723                           ; BSR set to: 0
  9724  003944  3F69               	incfsz	___fltol@exp1& (0+255),f,b
  9725  003946  D7F9               	goto	l5189
  9726  003948  D00D               	goto	u5760
  9727  00394A                     l5193:
  9728                           
  9729                           ; BSR set to: 0
  9730  00394A  0E1F               	movlw	31
  9731  00394C  6569               	cpfsgt	___fltol@exp1& (0+255),b
  9732  00394E  D007               	goto	l5201
  9733  003950  D7C6               	goto	u5710
  9734  003952                     l5199:
  9735                           
  9736                           ; BSR set to: 0
  9737  003952  90D8               	bcf	status,0,c
  9738  003954  3760               	rlcf	___fltol@f1& (0+255),f,b
  9739  003956  3761               	rlcf	(___fltol@f1+1)& (0+255),f,b
  9740  003958  3762               	rlcf	(___fltol@f1+2)& (0+255),f,b
  9741  00395A  3763               	rlcf	(___fltol@f1+3)& (0+255),f,b
  9742  00395C  0769               	decf	___fltol@exp1& (0+255),f,b
  9743  00395E                     l5201:
  9744                           
  9745                           ; BSR set to: 0
  9746  00395E  5169               	movf	___fltol@exp1& (0+255),w,b
  9747  003960  A4D8               	btfss	status,2,c
  9748  003962  D7F7               	goto	l5199
  9749  003964                     u5760:
  9750                           
  9751                           ; BSR set to: 0
  9752  003964  5168               	movf	___fltol@sign1& (0+255),w,b
  9753  003966  B4D8               	btfsc	status,2,c
  9754  003968  D008               	goto	l5207
  9755                           
  9756                           ; BSR set to: 0
  9757  00396A  1F63               	comf	(___fltol@f1+3)& (0+255),f,b
  9758  00396C  1F62               	comf	(___fltol@f1+2)& (0+255),f,b
  9759  00396E  1F61               	comf	(___fltol@f1+1)& (0+255),f,b
  9760  003970  6D60               	negf	___fltol@f1& (0+255),b
  9761  003972  0E00               	movlw	0
  9762  003974  2361               	addwfc	(___fltol@f1+1)& (0+255),f,b
  9763  003976  2362               	addwfc	(___fltol@f1+2)& (0+255),f,b
  9764  003978  2363               	addwfc	(___fltol@f1+3)& (0+255),f,b
  9765  00397A                     l5207:
  9766                           
  9767                           ; BSR set to: 0
  9768  00397A  C060  F060         	movff	___fltol@f1,?___fltol
  9769  00397E  C061  F061         	movff	___fltol@f1+1,?___fltol+1
  9770  003982  C062  F062         	movff	___fltol@f1+2,?___fltol+2
  9771  003986  C063  F063         	movff	___fltol@f1+3,?___fltol+3
  9772                           
  9773                           ; BSR set to: 0
  9774  00398A  0012               	return		;funcret
  9775  00398C                     __end_of___fltol:
  9776                           	opt callstack 0
  9777                           
  9778 ;; *************** function _setupTemperatureSensor *****************
  9779 ;; Defined at:
  9780 ;;		line 138 in file "source/temperatureSensor.c"
  9781 ;; Parameters:    Size  Location     Type
  9782 ;;		None
  9783 ;; Auto vars:     Size  Location     Type
  9784 ;;		None
  9785 ;; Return value:  Size  Location     Type
  9786 ;;                  1    wreg      void 
  9787 ;; Registers used:
  9788 ;;		wreg, status,2, status,0, cstack
  9789 ;; Tracked objects:
  9790 ;;		On entry : 0/0
  9791 ;;		On exit  : 0/0
  9792 ;;		Unchanged: 0/0
  9793 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9794 ;;      Params:         0       0       0       0       0       0       0       0       0
  9795 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9796 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9797 ;;      Totals:         0       0       0       0       0       0       0       0       0
  9798 ;;Total ram usage:        0 bytes
  9799 ;; Hardware stack levels used:    1
  9800 ;; Hardware stack levels required when called:    4
  9801 ;; This function calls:
  9802 ;;		_ADC_setup
  9803 ;;		_setup_TMR0
  9804 ;; This function is called by:
  9805 ;;		_main
  9806 ;; This function uses a non-reentrant model
  9807 ;;
  9808                           
  9809                           	psect	text39
  9810  0041F0                     __ptext39:
  9811                           	opt callstack 0
  9812  0041F0                     _setupTemperatureSensor:
  9813                           	opt callstack 26
  9814                           
  9815                           ;source/temperatureSensor.c: 139:     ptr_ISR=sensorRead_ISR;
  9816                           
  9817                           ; BSR set to: 0
  9818                           ;incstack = 0
  9819  0041F0  0E5C               	movlw	low _sensorRead_ISR
  9820  0041F2  0101               	movlb	1	; () banked
  9821  0041F4  6F3D               	movwf	_ptr_ISR& (0+255),b
  9822  0041F6  0E41               	movlw	high _sensorRead_ISR
  9823  0041F8  6F3E               	movwf	(_ptr_ISR+1)& (0+255),b
  9824                           
  9825                           ; BSR set to: 1
  9826                           ;source/temperatureSensor.c: 141:     setup_TMR0();
  9827  0041FA  EC12  F021         	call	_setup_TMR0	;wreg free
  9828                           
  9829                           ;source/temperatureSensor.c: 144:     ADC_setup();
  9830  0041FE  EC34  F01F         	call	_ADC_setup	;wreg free
  9831                           
  9832                           ;source/temperatureSensor.c: 149:     ADCON0bits.ADON=1; _delay((unsigned long)((3)*(800
      +                          0000/4000000.0)));
  9833  004202  80C2               	bsf	4034,0,c	;volatile
  9834  004204  D000               	nop2		;2 cycle nop
  9835  004206  D000               	nop2		;2 cycle nop
  9836  004208  D000               	nop2		;2 cycle nop
  9837                           
  9838                           ;source/temperatureSensor.c: 150:     ADCON0bits.GO=1;
  9839  00420A  82C2               	bsf	4034,1,c	;volatile
  9840  00420C  0012               	return		;funcret
  9841  00420E                     __end_of_setupTemperatureSensor:
  9842                           	opt callstack 0
  9843                           
  9844 ;; *************** function _setup_TMR0 *****************
  9845 ;; Defined at:
  9846 ;;		line 237 in file "Display.c"
  9847 ;; Parameters:    Size  Location     Type
  9848 ;;		None
  9849 ;; Auto vars:     Size  Location     Type
  9850 ;;		None
  9851 ;; Return value:  Size  Location     Type
  9852 ;;                  1    wreg      void 
  9853 ;; Registers used:
  9854 ;;		wreg, status,2
  9855 ;; Tracked objects:
  9856 ;;		On entry : 0/0
  9857 ;;		On exit  : 0/0
  9858 ;;		Unchanged: 0/0
  9859 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9860 ;;      Params:         0       0       0       0       0       0       0       0       0
  9861 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9862 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9863 ;;      Totals:         0       0       0       0       0       0       0       0       0
  9864 ;;Total ram usage:        0 bytes
  9865 ;; Hardware stack levels used:    1
  9866 ;; Hardware stack levels required when called:    3
  9867 ;; This function calls:
  9868 ;;		Nothing
  9869 ;; This function is called by:
  9870 ;;		_setupTemperatureSensor
  9871 ;; This function uses a non-reentrant model
  9872 ;;
  9873                           
  9874                           	psect	text40
  9875  004224                     __ptext40:
  9876                           	opt callstack 0
  9877  004224                     _setup_TMR0:
  9878                           	opt callstack 26
  9879                           
  9880                           ;Display.c: 238:     T0CON=0b10001111;
  9881                           
  9882                           ;incstack = 0
  9883  004224  0E8F               	movlw	143
  9884  004226  6ED5               	movwf	4053,c	;volatile
  9885                           
  9886                           ;Display.c: 239:     TMR0H=0x00;
  9887  004228  0E00               	movlw	0
  9888  00422A  6ED7               	movwf	4055,c	;volatile
  9889                           
  9890                           ;Display.c: 240:     TMR0L=0x00;
  9891  00422C  0E00               	movlw	0
  9892  00422E  6ED6               	movwf	4054,c	;volatile
  9893                           
  9894                           ;Display.c: 241:     INTCONbits.TMR0IE=1;
  9895  004230  8AF2               	bsf	4082,5,c	;volatile
  9896                           
  9897                           ;Display.c: 242:     INTCONbits.GIE=1;
  9898  004232  8EF2               	bsf	4082,7,c	;volatile
  9899                           
  9900                           ;Display.c: 243:     RCONbits.IPEN=0;
  9901  004234  9ED0               	bcf	4048,7,c	;volatile
  9902  004236  0012               	return		;funcret
  9903  004238                     __end_of_setup_TMR0:
  9904                           	opt callstack 0
  9905                           
  9906 ;; *************** function _ADC_setup *****************
  9907 ;; Defined at:
  9908 ;;		line 56 in file "source/temperatureSensor.c"
  9909 ;; Parameters:    Size  Location     Type
  9910 ;;		None
  9911 ;; Auto vars:     Size  Location     Type
  9912 ;;		None
  9913 ;; Return value:  Size  Location     Type
  9914 ;;                  1    wreg      void 
  9915 ;; Registers used:
  9916 ;;		wreg, status,2
  9917 ;; Tracked objects:
  9918 ;;		On entry : 0/0
  9919 ;;		On exit  : 0/0
  9920 ;;		Unchanged: 0/0
  9921 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9922 ;;      Params:         0       0       0       0       0       0       0       0       0
  9923 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9924 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9925 ;;      Totals:         0       0       0       0       0       0       0       0       0
  9926 ;;Total ram usage:        0 bytes
  9927 ;; Hardware stack levels used:    1
  9928 ;; Hardware stack levels required when called:    3
  9929 ;; This function calls:
  9930 ;;		Nothing
  9931 ;; This function is called by:
  9932 ;;		_setupTemperatureSensor
  9933 ;; This function uses a non-reentrant model
  9934 ;;
  9935                           
  9936                           	psect	text41
  9937  003E68                     __ptext41:
  9938                           	opt callstack 0
  9939  003E68                     _ADC_setup:
  9940                           	opt callstack 26
  9941                           
  9942                           ;source/temperatureSensor.c: 57:     ADCON0bits.CHS=0b0000;
  9943                           
  9944                           ;incstack = 0
  9945  003E68  0EC3               	movlw	-61
  9946  003E6A  16C2               	andwf	4034,f,c	;volatile
  9947                           
  9948                           ;source/temperatureSensor.c: 58:     ADCON0bits.GODONE=0;
  9949  003E6C  92C2               	bcf	4034,1,c	;volatile
  9950                           
  9951                           ;source/temperatureSensor.c: 59:     ADCON0bits.ADON=0;
  9952  003E6E  90C2               	bcf	4034,0,c	;volatile
  9953                           
  9954                           ;source/temperatureSensor.c: 61:     ADCON1bits.VCFG1=0;
  9955  003E70  9AC1               	bcf	4033,5,c	;volatile
  9956                           
  9957                           ;source/temperatureSensor.c: 62:     ADCON1bits.VCFG0=0;
  9958  003E72  98C1               	bcf	4033,4,c	;volatile
  9959                           
  9960                           ;source/temperatureSensor.c: 63:     ADCON1bits.PCFG=0x0E;
  9961  003E74  50C1               	movf	4033,w,c	;volatile
  9962  003E76  0BF0               	andlw	-16
  9963  003E78  090E               	iorlw	14
  9964  003E7A  6EC1               	movwf	4033,c	;volatile
  9965                           
  9966                           ;source/temperatureSensor.c: 65:     ADCON2bits.ADFM=1;
  9967  003E7C  8EC0               	bsf	4032,7,c	;volatile
  9968                           
  9969                           ;source/temperatureSensor.c: 66:     ADCON2bits.ACQT=0x04;
  9970  003E7E  50C0               	movf	4032,w,c	;volatile
  9971  003E80  0BC7               	andlw	-57
  9972  003E82  0920               	iorlw	32
  9973  003E84  6EC0               	movwf	4032,c	;volatile
  9974                           
  9975                           ;source/temperatureSensor.c: 67:     ADCON2bits.ADCS=0x01;
  9976  003E86  50C0               	movf	4032,w,c	;volatile
  9977  003E88  0BF8               	andlw	-8
  9978  003E8A  0901               	iorlw	1
  9979  003E8C  6EC0               	movwf	4032,c	;volatile
  9980                           
  9981                           ;source/temperatureSensor.c: 70:     ADCON2bits.ADCS=0x01;
  9982  003E8E  50C0               	movf	4032,w,c	;volatile
  9983  003E90  0BF8               	andlw	-8
  9984  003E92  0901               	iorlw	1
  9985  003E94  6EC0               	movwf	4032,c	;volatile
  9986                           
  9987                           ;source/temperatureSensor.c: 72:     ADCON2bits.ACQT=0x02;
  9988  003E96  50C0               	movf	4032,w,c	;volatile
  9989  003E98  0BC7               	andlw	-57
  9990  003E9A  0910               	iorlw	16
  9991  003E9C  6EC0               	movwf	4032,c	;volatile
  9992                           
  9993                           ;source/temperatureSensor.c: 73:     _delay((unsigned long)((3)*(8000000/4000000.0)));
  9994  003E9E  D000               	nop2		;2 cycle nop
  9995  003EA0  D000               	nop2		;2 cycle nop
  9996  003EA2  D000               	nop2		;2 cycle nop
  9997                           
  9998                           ;source/temperatureSensor.c: 75:     TRISAbits.RA0=1;
  9999  003EA4  8092               	bsf	3986,0,c	;volatile
 10000                           
 10001                           ;source/temperatureSensor.c: 79:     PIR1bits.ADIF=0;
 10002  003EA6  9C9E               	bcf	3998,6,c	;volatile
 10003                           
 10004                           ;source/temperatureSensor.c: 80:     PIE1bits.ADIE=1 ;
 10005  003EA8  8C9D               	bsf	3997,6,c	;volatile
 10006                           
 10007                           ;source/temperatureSensor.c: 81:     INTCONbits.GIE=1;
 10008  003EAA  8EF2               	bsf	4082,7,c	;volatile
 10009  003EAC  0012               	return		;funcret
 10010  003EAE                     __end_of_ADC_setup:
 10011                           	opt callstack 0
 10012                           
 10013 ;; *************** function _setupPortDisplay *****************
 10014 ;; Defined at:
 10015 ;;		line 110 in file "Display.c"
 10016 ;; Parameters:    Size  Location     Type
 10017 ;;		None
 10018 ;; Auto vars:     Size  Location     Type
 10019 ;;		None
 10020 ;; Return value:  Size  Location     Type
 10021 ;;                  1    wreg      void 
 10022 ;; Registers used:
 10023 ;;		wreg, status,2
 10024 ;; Tracked objects:
 10025 ;;		On entry : 0/0
 10026 ;;		On exit  : 0/0
 10027 ;;		Unchanged: 0/0
 10028 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10029 ;;      Params:         0       0       0       0       0       0       0       0       0
 10030 ;;      Locals:         0       0       0       0       0       0       0       0       0
 10031 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10032 ;;      Totals:         0       0       0       0       0       0       0       0       0
 10033 ;;Total ram usage:        0 bytes
 10034 ;; Hardware stack levels used:    1
 10035 ;; Hardware stack levels required when called:    3
 10036 ;; This function calls:
 10037 ;;		Nothing
 10038 ;; This function is called by:
 10039 ;;		_main
 10040 ;; This function uses a non-reentrant model
 10041 ;;
 10042                           
 10043                           	psect	text42
 10044  00420E                     __ptext42:
 10045                           	opt callstack 0
 10046  00420E                     _setupPortDisplay:
 10047                           	opt callstack 27
 10048                           
 10049                           ;Display.c: 111:     PORTB=0x00;
 10050                           
 10051                           ;incstack = 0
 10052  00420E  0E00               	movlw	0
 10053  004210  6E81               	movwf	3969,c	;volatile
 10054                           
 10055                           ;Display.c: 112:     CMCON=0x07;
 10056  004212  0E07               	movlw	7
 10057  004214  6EB4               	movwf	4020,c	;volatile
 10058                           
 10059                           ;Display.c: 113:     ADCON1=0x0F;
 10060  004216  0E0F               	movlw	15
 10061  004218  6EC1               	movwf	4033,c	;volatile
 10062                           
 10063                           ;Display.c: 116:     TRISB=0x00;
 10064  00421A  0E00               	movlw	0
 10065  00421C  6E93               	movwf	3987,c	;volatile
 10066                           
 10067                           ;Display.c: 117:     OSCCON=0b01110000;
 10068  00421E  0E70               	movlw	112
 10069  004220  6ED3               	movwf	4051,c	;volatile
 10070  004222  0012               	return		;funcret
 10071  004224                     __end_of_setupPortDisplay:
 10072                           	opt callstack 0
 10073                           
 10074 ;; *************** function _init_thermistor *****************
 10075 ;; Defined at:
 10076 ;;		line 16 in file "main.c"
 10077 ;; Parameters:    Size  Location     Type
 10078 ;;		None
 10079 ;; Auto vars:     Size  Location     Type
 10080 ;;		None
 10081 ;; Return value:  Size  Location     Type
 10082 ;;                  1    wreg      void 
 10083 ;; Registers used:
 10084 ;;		wreg, status,2
 10085 ;; Tracked objects:
 10086 ;;		On entry : 0/0
 10087 ;;		On exit  : 0/0
 10088 ;;		Unchanged: 0/0
 10089 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10090 ;;      Params:         0       0       0       0       0       0       0       0       0
 10091 ;;      Locals:         0       0       0       0       0       0       0       0       0
 10092 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10093 ;;      Totals:         0       0       0       0       0       0       0       0       0
 10094 ;;Total ram usage:        0 bytes
 10095 ;; Hardware stack levels used:    1
 10096 ;; Hardware stack levels required when called:    3
 10097 ;; This function calls:
 10098 ;;		Nothing
 10099 ;; This function is called by:
 10100 ;;		_main
 10101 ;; This function uses a non-reentrant model
 10102 ;;
 10103                           
 10104                           	psect	text43
 10105  003EF2                     __ptext43:
 10106                           	opt callstack 0
 10107  003EF2                     _init_thermistor:
 10108                           	opt callstack 27
 10109                           
 10110                           ;main.c: 18:     thermistor.A=0.0012910588653905842;
 10111                           
 10112                           ;incstack = 0
 10113  003EF2  0EBF               	movlw	191
 10114  003EF4  0101               	movlb	1	; () banked
 10115  003EF6  6F00               	movwf	_thermistor& (0+255),b
 10116  003EF8  0E38               	movlw	56
 10117  003EFA  6F01               	movwf	(_thermistor+1)& (0+255),b
 10118  003EFC  0EA9               	movlw	169
 10119  003EFE  6F02               	movwf	(_thermistor+2)& (0+255),b
 10120  003F00  0E3A               	movlw	58
 10121  003F02  6F03               	movwf	(_thermistor+3)& (0+255),b
 10122                           
 10123                           ;main.c: 19:     thermistor.B=0.00020449429894872976;
 10124  003F04  0E85               	movlw	133
 10125  003F06  6F04               	movwf	(_thermistor+4)& (0+255),b
 10126  003F08  0E6D               	movlw	109
 10127  003F0A  6F05               	movwf	(_thermistor+5)& (0+255),b
 10128  003F0C  0E56               	movlw	86
 10129  003F0E  6F06               	movwf	(_thermistor+6)& (0+255),b
 10130  003F10  0E39               	movlw	57
 10131  003F12  6F07               	movwf	(_thermistor+7)& (0+255),b
 10132                           
 10133                           ;main.c: 20:     thermistor.C=2.4786418838291797e-7;
 10134  003F14  0E32               	movlw	50
 10135  003F16  6F08               	movwf	(_thermistor+8)& (0+255),b
 10136  003F18  0E12               	movlw	18
 10137  003F1A  6F09               	movwf	(_thermistor+9)& (0+255),b
 10138  003F1C  0E85               	movlw	133
 10139  003F1E  6F0A               	movwf	(_thermistor+10)& (0+255),b
 10140  003F20  0E34               	movlw	52
 10141  003F22  6F0B               	movwf	(_thermistor+11)& (0+255),b
 10142                           
 10143                           ;main.c: 22:     thermistor.R1=2500;
 10144  003F24  0E09               	movlw	9
 10145  003F26  6F0E               	movwf	(_thermistor+14)& (0+255),b
 10146  003F28  0EC4               	movlw	196
 10147  003F2A  6F0D               	movwf	(_thermistor+13)& (0+255),b
 10148                           
 10149                           ;main.c: 23:     thermistor.Vin=5;
 10150  003F2C  0E05               	movlw	5
 10151  003F2E  6F0C               	movwf	(_thermistor+12)& (0+255),b
 10152                           
 10153                           ; BSR set to: 1
 10154  003F30  0012               	return		;funcret
 10155  003F32                     __end_of_init_thermistor:
 10156                           	opt callstack 0
 10157                           
 10158 ;; *************** function _display3 *****************
 10159 ;; Defined at:
 10160 ;;		line 182 in file "Display.c"
 10161 ;; Parameters:    Size  Location     Type
 10162 ;;  data3           2  125[BANK0 ] PTR const unsigned char 
 10163 ;;		 -> ADC_results.buffer(4), ADC_results(7), buffer(4), 
 10164 ;; Auto vars:     Size  Location     Type
 10165 ;;  bit             1  132[BANK0 ] volatile unsigned char 
 10166 ;;  csize           1  131[BANK0 ] unsigned char 
 10167 ;; Return value:  Size  Location     Type
 10168 ;;                  1    wreg      void 
 10169 ;; Registers used:
 10170 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 10171 ;; Tracked objects:
 10172 ;;		On entry : 0/0
 10173 ;;		On exit  : 0/0
 10174 ;;		Unchanged: 0/0
 10175 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10176 ;;      Params:         0       2       0       0       0       0       0       0       0
 10177 ;;      Locals:         0       2       0       0       0       0       0       0       0
 10178 ;;      Temps:          0       4       0       0       0       0       0       0       0
 10179 ;;      Totals:         0       8       0       0       0       0       0       0       0
 10180 ;;Total ram usage:        8 bytes
 10181 ;; Hardware stack levels used:    1
 10182 ;; Hardware stack levels required when called:    4
 10183 ;; This function calls:
 10184 ;;		_character_table
 10185 ;;		_send_digit
 10186 ;;		_strlen
 10187 ;; This function is called by:
 10188 ;;		_main
 10189 ;; This function uses a non-reentrant model
 10190 ;;
 10191                           
 10192                           	psect	text44
 10193  00398C                     __ptext44:
 10194                           	opt callstack 0
 10195  00398C                     _display3:
 10196                           	opt callstack 26
 10197                           
 10198                           ;Display.c: 184:              dig_mask= (DIG1 | DIG2 | DIG3);;Display.c: 187:     unsign
      +                          ed char csize=strlen(data3);
 10199                           
 10200                           ; BSR set to: 1
 10201                           ;incstack = 0
 10202  00398C  C0DD  F003         	movff	display3@data3,strlen@s
 10203  003990  C0DE  F004         	movff	display3@data3+1,strlen@s+1
 10204  003994  EC99  F020         	call	_strlen	;wreg free
 10205  003998  5003               	movf	?_strlen,w,c
 10206  00399A  0100               	movlb	0	; () banked
 10207  00399C  6FE3               	movwf	display3@csize& (0+255),b
 10208                           
 10209                           ; BSR set to: 0
 10210                           ;Display.c: 189:     volatile unsigned char bit=DIG1;
 10211  00399E  0E20               	movlw	32
 10212  0039A0  6FE4               	movwf	display3@bit& (0+255),b	;volatile
 10213                           
 10214                           ; BSR set to: 0
 10215                           ;Display.c: 191:     bit= (bit<<(3 -csize)) | (bit>>(8-3 +csize));
 10216  0039A2  C0E3  F0DF         	movff	display3@csize,??_display3
 10217  0039A6  0E05               	movlw	5
 10218  0039A8  27DF               	addwf	??_display3& (0+255),f,b
 10219  0039AA  C0E4  F0E0         	movff	display3@bit,??_display3+1	;volatile
 10220  0039AE  2BDF               	incf	??_display3& (0+255),f,b
 10221  0039B0  D002               	goto	u5654
 10222  0039B2                     u5655:
 10223  0039B2  90D8               	bcf	status,0,c
 10224  0039B4  33E0               	rrcf	(??_display3+1)& (0+255),f,b
 10225  0039B6                     u5654:
 10226  0039B6  2FDF               	decfsz	??_display3& (0+255),f,b
 10227  0039B8  D7FC               	goto	u5655
 10228  0039BA  0100               	movlb	0	; () banked
 10229  0039BC  51E3               	movf	display3@csize& (0+255),w,b
 10230  0039BE  0803               	sublw	3
 10231  0039C0  6FE1               	movwf	(??_display3+2)& (0+255),b
 10232  0039C2  C0E4  F0E2         	movff	display3@bit,??_display3+3	;volatile
 10233  0039C6  2BE1               	incf	(??_display3+2)& (0+255),f,b
 10234  0039C8  D002               	goto	u5664
 10235  0039CA                     u5665:
 10236  0039CA  90D8               	bcf	status,0,c
 10237  0039CC  37E2               	rlcf	(??_display3+3)& (0+255),f,b
 10238  0039CE                     u5664:
 10239  0039CE  2FE1               	decfsz	(??_display3+2)& (0+255),f,b
 10240  0039D0  D7FC               	goto	u5665
 10241  0039D2  0100               	movlb	0	; () banked
 10242  0039D4  51E2               	movf	(??_display3+3)& (0+255),w,b
 10243  0039D6  11E0               	iorwf	(??_display3+1)& (0+255),w,b
 10244  0039D8  D020               	goto	L24
 10245  0039DA                     l5029:
 10246                           
 10247                           ; BSR set to: 0
 10248                           ;Display.c: 196:         LATB &=~OE;
 10249  0039DA  988A               	bcf	3978,4,c	;volatile
 10250                           
 10251                           ; BSR set to: 0
 10252                           ;Display.c: 198:         send_digit( character_table(*(data3++)) );
 10253  0039DC  C0DD  FFD9         	movff	display3@data3,fsr2l
 10254  0039E0  C0DE  FFDA         	movff	display3@data3+1,fsr2h
 10255  0039E4  50DF               	movf	indf2,w,c
 10256  0039E6  EC1E  F01B         	call	_character_table
 10257  0039EA  EC57  F01F         	call	_send_digit
 10258  0039EE  0100               	movlb	0	; () banked
 10259  0039F0  4BDD               	infsnz	display3@data3& (0+255),f,b
 10260  0039F2  2BDE               	incf	(display3@data3+1)& (0+255),f,b
 10261                           
 10262                           ; BSR set to: 0
 10263                           ;Display.c: 199:         LATB |= dig_mask;
 10264  0039F4  0EE0               	movlw	224
 10265  0039F6  128A               	iorwf	3978,f,c	;volatile
 10266                           
 10267                           ; BSR set to: 0
 10268                           ;Display.c: 200:         LATB=(LATB & ~(SER|SRCLK|SRCLR|RCLK)) | RCLK; LATB=(LATB & ~(SE
      +                          R|SRCLK|SRCLR|RCLK));;
 10269  0039F8  508A               	movf	3978,w,c	;volatile
 10270  0039FA  0BF0               	andlw	240
 10271  0039FC  0908               	iorlw	8
 10272  0039FE  6E8A               	movwf	3978,c	;volatile
 10273                           
 10274                           ; BSR set to: 0
 10275  003A00  508A               	movf	3978,w,c	;volatile
 10276  003A02  0BF0               	andlw	240
 10277  003A04  6E8A               	movwf	3978,c	;volatile
 10278                           
 10279                           ; BSR set to: 0
 10280                           ;Display.c: 201:         _delay((unsigned long)((30)*(8000000/4000000.0)));
 10281  003A06  0E14               	movlw	20
 10282  003A08                     u5797:
 10283  003A08  2EE8               	decfsz	wreg,f,c
 10284  003A0A  D7FE               	bra	u5797
 10285                           
 10286                           ;Display.c: 202:         LATB &= ~bit;
 10287  003A0C  0100               	movlb	0	; () banked
 10288  003A0E  51E4               	movf	display3@bit& (0+255),w,b	;volatile
 10289  003A10  0AFF               	xorlw	255
 10290  003A12  168A               	andwf	3978,f,c	;volatile
 10291                           
 10292                           ; BSR set to: 0
 10293                           ;Display.c: 205:         bit = (bit<<1)|(bit>>7);
 10294  003A14  90D8               	bcf	status,0,c
 10295  003A16  35E4               	rlcf	display3@bit& (0+255),w,b	;volatile
 10296  003A18  35E4               	rlcf	display3@bit& (0+255),w,b	;volatile
 10297  003A1A                     L24:
 10298  003A1A  6FE4               	movwf	display3@bit& (0+255),b	;volatile
 10299                           
 10300                           ; BSR set to: 0
 10301                           ;Display.c: 195:     while( bit & dig_mask ) {
 10302  003A1C  C0E4  F0DF         	movff	display3@bit,??_display3	;volatile
 10303  003A20  0EE0               	movlw	224
 10304  003A22  17DF               	andwf	??_display3& (0+255),f,b
 10305  003A24  A4D8               	btfss	status,2,c
 10306  003A26  D7D9               	goto	l5029
 10307                           
 10308                           ; BSR set to: 0
 10309                           ;Display.c: 211:     send_digit('o');_delay((unsigned long)((20)*(8000000/4000000.0))); 
      +                          LATB|=dig_mask;
 10310  003A28  0E6F               	movlw	111
 10311  003A2A  EC57  F01F         	call	_send_digit
 10312  003A2E  0E0D               	movlw	13
 10313  003A30                     u5807:
 10314  003A30  2EE8               	decfsz	wreg,f,c
 10315  003A32  D7FE               	bra	u5807
 10316  003A34  F000               	nop	
 10317  003A36  0EE0               	movlw	224
 10318  003A38  128A               	iorwf	3978,f,c	;volatile
 10319  003A3A  0012               	return		;funcret
 10320  003A3C                     __end_of_display3:
 10321                           	opt callstack 0
 10322                           
 10323 ;; *************** function _strlen *****************
 10324 ;; Defined at:
 10325 ;;		line 12 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\strlen.c"
 10326 ;; Parameters:    Size  Location     Type
 10327 ;;  s               2    2[COMRAM] PTR const unsigned char 
 10328 ;;		 -> ?_snprintf(2), ADC_results.buffer(4), ADC_results(7), buffer(4), 
 10329 ;;		 -> stoa@nuls(7), dbuf(32), 
 10330 ;; Auto vars:     Size  Location     Type
 10331 ;;  a               2    4[COMRAM] PTR const unsigned char 
 10332 ;;		 -> ?_snprintf(2), ADC_results.buffer(4), ADC_results(7), buffer(4), 
 10333 ;;		 -> stoa@nuls(7), dbuf(32), 
 10334 ;; Return value:  Size  Location     Type
 10335 ;;                  2    2[COMRAM] unsigned int 
 10336 ;; Registers used:
 10337 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 10338 ;; Tracked objects:
 10339 ;;		On entry : 0/0
 10340 ;;		On exit  : 0/0
 10341 ;;		Unchanged: 0/0
 10342 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10343 ;;      Params:         2       0       0       0       0       0       0       0       0
 10344 ;;      Locals:         2       0       0       0       0       0       0       0       0
 10345 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10346 ;;      Totals:         4       0       0       0       0       0       0       0       0
 10347 ;;Total ram usage:        4 bytes
 10348 ;; Hardware stack levels used:    1
 10349 ;; Hardware stack levels required when called:    3
 10350 ;; This function calls:
 10351 ;;		Nothing
 10352 ;; This function is called by:
 10353 ;;		_pad
 10354 ;;		_stoa
 10355 ;;		_display3
 10356 ;; This function uses a non-reentrant model
 10357 ;;
 10358                           
 10359                           	psect	text45
 10360  004132                     __ptext45:
 10361                           	opt callstack 0
 10362  004132                     _strlen:
 10363                           	opt callstack 19
 10364                           
 10365                           ;incstack = 0
 10366  004132  C003  F005         	movff	strlen@s,strlen@a
 10367  004136  C004  F006         	movff	strlen@s+1,strlen@a+1
 10368  00413A  D002               	goto	l3257
 10369  00413C                     l3255:
 10370  00413C  4A03               	infsnz	strlen@s,f,c
 10371  00413E  2A04               	incf	strlen@s+1,f,c
 10372  004140                     l3257:
 10373  004140  C003  FFD9         	movff	strlen@s,fsr2l
 10374  004144  C004  FFDA         	movff	strlen@s+1,fsr2h
 10375  004148  50DF               	movf	indf2,w,c
 10376  00414A  A4D8               	btfss	status,2,c
 10377  00414C  D7F7               	goto	l3255
 10378  00414E  5005               	movf	strlen@a,w,c
 10379  004150  5C03               	subwf	strlen@s,w,c
 10380  004152  6E03               	movwf	?_strlen,c
 10381  004154  5006               	movf	strlen@a+1,w,c
 10382  004156  5804               	subwfb	strlen@s+1,w,c
 10383  004158  6E04               	movwf	?_strlen+1,c
 10384  00415A  0012               	return		;funcret
 10385  00415C                     __end_of_strlen:
 10386                           	opt callstack 0
 10387                           
 10388 ;; *************** function _send_digit *****************
 10389 ;; Defined at:
 10390 ;;		line 161 in file "Display.c"
 10391 ;; Parameters:    Size  Location     Type
 10392 ;;  data            1    wreg     unsigned char 
 10393 ;; Auto vars:     Size  Location     Type
 10394 ;;  data            1    5[COMRAM] unsigned char 
 10395 ;;  i               2    2[COMRAM] int 
 10396 ;;  a               1    4[COMRAM] unsigned char 
 10397 ;; Return value:  Size  Location     Type
 10398 ;;                  1    wreg      void 
 10399 ;; Registers used:
 10400 ;;		wreg, status,2, status,0
 10401 ;; Tracked objects:
 10402 ;;		On entry : 0/0
 10403 ;;		On exit  : 0/0
 10404 ;;		Unchanged: 0/0
 10405 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10406 ;;      Params:         0       0       0       0       0       0       0       0       0
 10407 ;;      Locals:         4       0       0       0       0       0       0       0       0
 10408 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10409 ;;      Totals:         4       0       0       0       0       0       0       0       0
 10410 ;;Total ram usage:        4 bytes
 10411 ;; Hardware stack levels used:    1
 10412 ;; Hardware stack levels required when called:    3
 10413 ;; This function calls:
 10414 ;;		Nothing
 10415 ;; This function is called by:
 10416 ;;		_display3
 10417 ;; This function uses a non-reentrant model
 10418 ;;
 10419                           
 10420                           	psect	text46
 10421  003EAE                     __ptext46:
 10422                           	opt callstack 0
 10423  003EAE                     _send_digit:
 10424                           	opt callstack 26
 10425                           
 10426                           ;incstack = 0
 10427                           ;send_digit@data stored from wreg
 10428  003EAE  6E06               	movwf	send_digit@data,c
 10429                           
 10430                           ;Display.c: 162:     unsigned char a;;Display.c: 163:     POZ com_mask=SER|SRCLK|SRCLR|R
      +                          CLK ;;Display.c: 164:     LATB&=~com_mask;
 10431  003EB0  0EF0               	movlw	240
 10432  003EB2  168A               	andwf	3978,f,c	;volatile
 10433                           
 10434                           ;Display.c: 166:     LATB|=SRCLR;
 10435  003EB4  848A               	bsf	3978,2,c	;volatile
 10436                           
 10437                           ;Display.c: 168:     for(int i=0;i<8; i++ )
 10438  003EB6  0E00               	movlw	0
 10439  003EB8  6E04               	movwf	send_digit@i+1,c
 10440  003EBA  0E00               	movlw	0
 10441  003EBC  6E03               	movwf	send_digit@i,c
 10442  003EBE                     l4931:
 10443                           
 10444                           ;Display.c: 169:     {;Display.c: 171:         data= (data<<1) | (data>>7);
 10445  003EBE  90D8               	bcf	status,0,c
 10446  003EC0  3406               	rlcf	send_digit@data,w,c
 10447  003EC2  3406               	rlcf	send_digit@data,w,c
 10448  003EC4  6E06               	movwf	send_digit@data,c
 10449                           
 10450                           ;Display.c: 172:         a=LATB & ~(SER|SRCLK);
 10451  003EC6  508A               	movf	3978,w,c	;volatile
 10452  003EC8  0BFC               	andlw	252
 10453  003ECA  6E05               	movwf	send_digit@a,c
 10454                           
 10455                           ;Display.c: 174:         a =a| (data & SER);
 10456  003ECC  5006               	movf	send_digit@data,w,c
 10457  003ECE  0B01               	andlw	1
 10458  003ED0  1005               	iorwf	send_digit@a,w,c
 10459  003ED2  6E05               	movwf	send_digit@a,c
 10460                           
 10461                           ;Display.c: 175:         LATB=a;
 10462  003ED4  C005  FF8A         	movff	send_digit@a,3978	;volatile
 10463                           
 10464                           ;Display.c: 176:         LATB|=SRCLK;
 10465  003ED8  828A               	bsf	3978,1,c	;volatile
 10466                           
 10467                           ;Display.c: 177:     }
 10468  003EDA  4A03               	infsnz	send_digit@i,f,c
 10469  003EDC  2A04               	incf	send_digit@i+1,f,c
 10470  003EDE  BE04               	btfsc	send_digit@i+1,7,c
 10471  003EE0  D7EE               	goto	l4931
 10472  003EE2  5004               	movf	send_digit@i+1,w,c
 10473  003EE4  E105               	bnz	u5590
 10474  003EE6  0E08               	movlw	8
 10475  003EE8  5C03               	subwf	send_digit@i,w,c
 10476  003EEA  B0D8               	btfsc	status,0,c
 10477  003EEC  0012               	return	
 10478  003EEE  D7E7               	goto	l4931
 10479  003EF0                     u5590:
 10480  003EF0  0012               	return		;funcret
 10481  003EF2                     __end_of_send_digit:
 10482                           	opt callstack 0
 10483                           
 10484 ;; *************** function _character_table *****************
 10485 ;; Defined at:
 10486 ;;		line 121 in file "Display.c"
 10487 ;; Parameters:    Size  Location     Type
 10488 ;;  symbol          1    wreg     unsigned char 
 10489 ;; Auto vars:     Size  Location     Type
 10490 ;;  symbol          1    4[COMRAM] unsigned char 
 10491 ;; Return value:  Size  Location     Type
 10492 ;;                  1    wreg      unsigned char 
 10493 ;; Registers used:
 10494 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
 10495 ;; Tracked objects:
 10496 ;;		On entry : 0/0
 10497 ;;		On exit  : 0/0
 10498 ;;		Unchanged: 0/0
 10499 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10500 ;;      Params:         0       0       0       0       0       0       0       0       0
 10501 ;;      Locals:         1       0       0       0       0       0       0       0       0
 10502 ;;      Temps:          2       0       0       0       0       0       0       0       0
 10503 ;;      Totals:         3       0       0       0       0       0       0       0       0
 10504 ;;Total ram usage:        3 bytes
 10505 ;; Hardware stack levels used:    1
 10506 ;; Hardware stack levels required when called:    3
 10507 ;; This function calls:
 10508 ;;		Nothing
 10509 ;; This function is called by:
 10510 ;;		_display3
 10511 ;; This function uses a non-reentrant model
 10512 ;;
 10513                           
 10514                           	psect	text47
 10515  00363C                     __ptext47:
 10516                           	opt callstack 0
 10517  00363C                     _character_table:
 10518                           	opt callstack 26
 10519                           
 10520                           ;incstack = 0
 10521                           ;character_table@symbol stored from wreg
 10522  00363C  6E05               	movwf	character_table@symbol,c
 10523                           
 10524                           ;Display.c: 124:     c_t o=0x00;;Display.c: 125:     c_t a=0x01;;Display.c: 126:     c_t
      +                           b=0x01<<1;;Display.c: 127:     c_t c=0x01<<2;;Display.c: 128:     c_t d=0x01<<3;;Displa
      +                          y.c: 129:     c_t e=0x01<<4;;Display.c: 130:     c_t f=0x01<<5;;Display.c: 131:     c_t 
      +                          g=0x01<<6;;Display.c: 132:     c_t h=0x01<<7;;Display.c: 135:     switch (symbol){
 10525  00363E  D032               	goto	l4915
 10526  003640                     l4829:
 10527  003640  0E77               	movlw	119
 10528  003642  0012               	return	
 10529  003644                     l4833:
 10530  003644  0E7C               	movlw	124
 10531  003646  0012               	return	
 10532  003648                     l4837:
 10533  003648  0E39               	movlw	57
 10534  00364A  0012               	return	
 10535  00364C                     l4841:
 10536  00364C  0E5E               	movlw	94
 10537  00364E  0012               	return	
 10538  003650                     l4845:
 10539  003650  0E79               	movlw	121
 10540  003652  0012               	return	
 10541  003654                     l4849:
 10542  003654  0E71               	movlw	113
 10543  003656  0012               	return	
 10544  003658                     l4853:
 10545  003658  0E3F               	movlw	63
 10546  00365A  0012               	return	
 10547  00365C                     l4857:
 10548  00365C  0E06               	movlw	6
 10549  00365E  0012               	return	
 10550  003660                     l4861:
 10551  003660  0E5B               	movlw	91
 10552  003662  0012               	return	
 10553  003664                     l4865:
 10554  003664  0E4F               	movlw	79
 10555  003666  0012               	return	
 10556  003668                     l4869:
 10557  003668  0E66               	movlw	102
 10558  00366A  0012               	return	
 10559  00366C                     l4873:
 10560  00366C  0E6D               	movlw	109
 10561  00366E  0012               	return	
 10562  003670                     l4877:
 10563  003670  0E7D               	movlw	125
 10564  003672  0012               	return	
 10565  003674                     l4881:
 10566  003674  0E07               	movlw	7
 10567  003676  0012               	return	
 10568  003678                     l4885:
 10569  003678  0E7F               	movlw	127
 10570  00367A  0012               	return	
 10571  00367C                     l4889:
 10572  00367C  0E6F               	movlw	111
 10573  00367E  0012               	return	
 10574  003680                     l4893:
 10575  003680  0E1B               	movlw	low character_table@h
 10576  003682  6EF6               	movwf	tblptrl,c
 10577  003684                     	if	1	;There is more than 1 active tblptr byte
 10578  003684  0E08               	movlw	high character_table@h
 10579  003686  6EF7               	movwf	tblptrh,c
 10580  003688                     	endif
 10581  003688                     	if	0	;There are less than 3 active tblptr bytes
 10582  003688                     	endif
 10583  003688  0008               	tblrd		*
 10584  00368A  50F5               	movf	tablat,w,c
 10585  00368C  0012               	return	
 10586  00368E                     l4897:
 10587  00368E  0E23               	movlw	low character_table@o
 10588  003690  6EF6               	movwf	tblptrl,c
 10589  003692                     	if	1	;There is more than 1 active tblptr byte
 10590  003692  0E08               	movlw	high character_table@o
 10591  003694  6EF7               	movwf	tblptrh,c
 10592  003696                     	endif
 10593  003696                     	if	0	;There are less than 3 active tblptr bytes
 10594  003696                     	endif
 10595  003696  0008               	tblrd		*
 10596  003698  50F5               	movf	tablat,w,c
 10597  00369A  0012               	return	
 10598  00369C                     l4905:
 10599  00369C  0EE1               	movlw	225
 10600  00369E  0012               	return	
 10601  0036A0                     l4909:
 10602  0036A0  0EF3               	movlw	243
 10603  0036A2  0012               	return	
 10604  0036A4                     l4915:
 10605  0036A4  5005               	movf	character_table@symbol,w,c
 10606  0036A6  6E03               	movwf	??_character_table& (0+255),c
 10607  0036A8  6A04               	clrf	(??_character_table+1)& (0+255),c
 10608                           
 10609                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 10610                           ; Switch size 1, requested type "simple"
 10611                           ; Number of cases is 1, Range of values is 0 to 0
 10612                           ; switch strategies available:
 10613                           ; Name         Instructions Cycles
 10614                           ; simple_byte            4     3 (average)
 10615                           ;	Chosen strategy is simple_byte
 10616  0036AA  5004               	movf	??_character_table+1,w,c
 10617  0036AC  0A00               	xorlw	0	; case 0
 10618  0036AE  A4D8               	btfss	status,2,c
 10619  0036B0  D7F7               	goto	l4909
 10620                           
 10621                           ; Switch size 1, requested type "simple"
 10622                           ; Number of cases is 20, Range of values is 0 to 111
 10623                           ; switch strategies available:
 10624                           ; Name         Instructions Cycles
 10625                           ; simple_byte           61    31 (average)
 10626                           ;	Chosen strategy is simple_byte
 10627  0036B2  5003               	movf	??_character_table,w,c
 10628  0036B4  0A00               	xorlw	0	; case 0
 10629  0036B6  B4D8               	btfsc	status,2,c
 10630  0036B8  D7EA               	goto	l4897
 10631  0036BA  0A2A               	xorlw	42	; case 42
 10632  0036BC  B4D8               	btfsc	status,2,c
 10633  0036BE  D7EE               	goto	l4905
 10634  0036C0  0A04               	xorlw	4	; case 46
 10635  0036C2  B4D8               	btfsc	status,2,c
 10636  0036C4  D7DD               	goto	l4893
 10637  0036C6  0A1E               	xorlw	30	; case 48
 10638  0036C8  B4D8               	btfsc	status,2,c
 10639  0036CA  D7C6               	goto	l4853
 10640  0036CC  0A01               	xorlw	1	; case 49
 10641  0036CE  B4D8               	btfsc	status,2,c
 10642  0036D0  D7C5               	goto	l4857
 10643  0036D2  0A03               	xorlw	3	; case 50
 10644  0036D4  B4D8               	btfsc	status,2,c
 10645  0036D6  D7C4               	goto	l4861
 10646  0036D8  0A01               	xorlw	1	; case 51
 10647  0036DA  B4D8               	btfsc	status,2,c
 10648  0036DC  D7C3               	goto	l4865
 10649  0036DE  0A07               	xorlw	7	; case 52
 10650  0036E0  B4D8               	btfsc	status,2,c
 10651  0036E2  D7C2               	goto	l4869
 10652  0036E4  0A01               	xorlw	1	; case 53
 10653  0036E6  B4D8               	btfsc	status,2,c
 10654  0036E8  D7C1               	goto	l4873
 10655  0036EA  0A03               	xorlw	3	; case 54
 10656  0036EC  B4D8               	btfsc	status,2,c
 10657  0036EE  D7C0               	goto	l4877
 10658  0036F0  0A01               	xorlw	1	; case 55
 10659  0036F2  B4D8               	btfsc	status,2,c
 10660  0036F4  D7BF               	goto	l4881
 10661  0036F6  0A0F               	xorlw	15	; case 56
 10662  0036F8  B4D8               	btfsc	status,2,c
 10663  0036FA  D7BE               	goto	l4885
 10664  0036FC  0A01               	xorlw	1	; case 57
 10665  0036FE  B4D8               	btfsc	status,2,c
 10666  003700  D7BD               	goto	l4889
 10667  003702  0A58               	xorlw	88	; case 97
 10668  003704  B4D8               	btfsc	status,2,c
 10669  003706  D79C               	goto	l4829
 10670  003708  0A03               	xorlw	3	; case 98
 10671  00370A  B4D8               	btfsc	status,2,c
 10672  00370C  D79B               	goto	l4833
 10673  00370E  0A01               	xorlw	1	; case 99
 10674  003710  B4D8               	btfsc	status,2,c
 10675  003712  D79A               	goto	l4837
 10676  003714  0A07               	xorlw	7	; case 100
 10677  003716  B4D8               	btfsc	status,2,c
 10678  003718  D799               	goto	l4841
 10679  00371A  0A01               	xorlw	1	; case 101
 10680  00371C  B4D8               	btfsc	status,2,c
 10681  00371E  D798               	goto	l4845
 10682  003720  0A03               	xorlw	3	; case 102
 10683  003722  B4D8               	btfsc	status,2,c
 10684  003724  D797               	goto	l4849
 10685  003726  0A09               	xorlw	9	; case 111
 10686  003728  B4D8               	btfsc	status,2,c
 10687  00372A  D7B1               	goto	l4897
 10688  00372C  D7B9               	goto	l4909
 10689  00372E                     __end_of_character_table:
 10690                           	opt callstack 0
 10691                           
 10692 ;; *************** function _my_ISR *****************
 10693 ;; Defined at:
 10694 ;;		line 216 in file "Display.c"
 10695 ;; Parameters:    Size  Location     Type
 10696 ;;		None
 10697 ;; Auto vars:     Size  Location     Type
 10698 ;;		None
 10699 ;; Return value:  Size  Location     Type
 10700 ;;                  1    wreg      void 
 10701 ;; Registers used:
 10702 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 10703 ;; Tracked objects:
 10704 ;;		On entry : 0/0
 10705 ;;		On exit  : 0/0
 10706 ;;		Unchanged: 0/0
 10707 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10708 ;;      Params:         0       0       0       0       0       0       0       0       0
 10709 ;;      Locals:         0       0       0       0       0       0       0       0       0
 10710 ;;      Temps:          2       0       0       0       0       0       0       0       0
 10711 ;;      Totals:         2       0       0       0       0       0       0       0       0
 10712 ;;Total ram usage:        2 bytes
 10713 ;; Hardware stack levels used:    1
 10714 ;; Hardware stack levels required when called:    2
 10715 ;; This function calls:
 10716 ;;		Absolute function
 10717 ;;		_counting_ISR
 10718 ;;		_sensorRead_ISR
 10719 ;; This function is called by:
 10720 ;;		Interrupt level 2
 10721 ;; This function uses a non-reentrant model
 10722 ;;
 10723                           
 10724                           	psect	intcode
 10725  000008                     __pintcode:
 10726                           	opt callstack 0
 10727  000008                     _my_ISR:
 10728                           	opt callstack 17
 10729                           
 10730                           ;incstack = 0
 10731  000008  825D               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 10732  00000A  ED81  F020         	call	int_func,f	;refresh shadow registers
 10733                           
 10734                           	psect	intcode_body
 10735  004102                     __pintcode_body:
 10736                           	opt callstack 17
 10737  004102                     int_func:
 10738                           	opt callstack 17
 10739  004102  0006               	pop		; remove dummy address from shadow register refresh
 10740  004104  CFFA F001          	movff	pclath,??_my_ISR
 10741  004108  CFFB F002          	movff	pclatu,??_my_ISR+1
 10742                           
 10743                           ;Display.c: 218:     ptr_ISR();
 10744  00410C  D801               	call	i2u570_48
 10745  00410E  D00B               	goto	i2u570_49
 10746  004110                     i2u570_48:
 10747  004110  0005               	push	
 10748  004112  0101               	movlb	1	; () banked
 10749  004114  6EFA               	movwf	pclath,c
 10750  004116  513D               	movf	_ptr_ISR& (0+255),w,b
 10751  004118  6EFD               	movwf	tosl,c
 10752  00411A  513E               	movf	(_ptr_ISR+1)& (0+255),w,b
 10753  00411C  6EFE               	movwf	tosh,c
 10754  00411E  50F8               	movf	tblptru,w,c
 10755  004120  6EFF               	movwf	tosu,c
 10756  004122  50FA               	movf	pclath,w,c
 10757  004124  0012               	return		;indir
 10758  004126                     i2u570_49:
 10759  004126  C002  FFFB         	movff	??_my_ISR+1,pclatu
 10760  00412A  C001  FFFA         	movff	??_my_ISR,pclath
 10761  00412E  925D               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 10762  004130  0011               	retfie		f
 10763  004132                     __end_of_my_ISR:
 10764                           	opt callstack 0
 10765                           
 10766 ;; *************** function _counting_ISR *****************
 10767 ;; Defined at:
 10768 ;;		line 222 in file "Display.c"
 10769 ;; Parameters:    Size  Location     Type
 10770 ;;		None
 10771 ;; Auto vars:     Size  Location     Type
 10772 ;;		None
 10773 ;; Return value:  Size  Location     Type
 10774 ;;                  1    wreg      void 
 10775 ;; Registers used:
 10776 ;;		wreg, status,2, status,0
 10777 ;; Tracked objects:
 10778 ;;		On entry : 0/0
 10779 ;;		On exit  : 0/0
 10780 ;;		Unchanged: 0/0
 10781 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10782 ;;      Params:         0       0       0       0       0       0       0       0       0
 10783 ;;      Locals:         0       0       0       0       0       0       0       0       0
 10784 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10785 ;;      Totals:         0       0       0       0       0       0       0       0       0
 10786 ;;Total ram usage:        0 bytes
 10787 ;; Hardware stack levels used:    1
 10788 ;; This function calls:
 10789 ;;		Nothing
 10790 ;; This function is called by:
 10791 ;;		_sensorRead_ISR
 10792 ;;		_my_ISR
 10793 ;; This function uses a non-reentrant model
 10794 ;;
 10795                           
 10796                           	psect	text49
 10797  003FDC                     __ptext49:
 10798                           	opt callstack 0
 10799  003FDC                     _counting_ISR:
 10800                           	opt callstack 17
 10801                           
 10802                           ;Display.c: 225:     if( (INTCON & BIT_5) && (INTCON & BIT_2) ) {
 10803                           
 10804                           ;incstack = 0
 10805  003FDC  AAF2               	btfss	4082,5,c	;volatile
 10806  003FDE  0012               	return	
 10807  003FE0  A4F2               	btfss	4082,2,c	;volatile
 10808  003FE2  0012               	return	
 10809                           
 10810                           ;Display.c: 226:         INTCON &= ~BIT_2;
 10811  003FE4  94F2               	bcf	4082,2,c	;volatile
 10812                           
 10813                           ;Display.c: 228:         count++;
 10814  003FE6  0100               	movlb	0	; () banked
 10815  003FE8  2BFE               	incf	_count& (0+255),f,b
 10816                           
 10817                           ; BSR set to: 0
 10818                           ;Display.c: 229:         if(count>=30) {
 10819  003FEA  0E1D               	movlw	29
 10820  003FEC  65FE               	cpfsgt	_count& (0+255),b
 10821  003FEE  0012               	return	
 10822                           
 10823                           ; BSR set to: 0
 10824                           ;Display.c: 230:             count-=30;
 10825  003FF0  0E1E               	movlw	30
 10826  003FF2  5FFE               	subwf	_count& (0+255),f,b
 10827                           
 10828                           ; BSR set to: 0
 10829                           ;Display.c: 231:             count_sec++;
 10830  003FF4  4BFC               	infsnz	_count_sec& (0+255),f,b
 10831  003FF6  2BFD               	incf	(_count_sec+1)& (0+255),f,b
 10832                           
 10833                           ; BSR set to: 0
 10834                           ;Display.c: 232:             if(count_sec==1000) count_sec=0;
 10835  003FF8  0EE8               	movlw	232
 10836  003FFA  19FC               	xorwf	_count_sec& (0+255),w,b
 10837  003FFC  E108               	bnz	i2l407
 10838  003FFE  0E03               	movlw	3
 10839  004000  19FD               	xorwf	(_count_sec+1)& (0+255),w,b
 10840  004002  A4D8               	btfss	status,2,c
 10841  004004  0012               	return	
 10842                           
 10843                           ; BSR set to: 0
 10844  004006  0E00               	movlw	0
 10845  004008  6FFD               	movwf	(_count_sec+1)& (0+255),b
 10846  00400A  0E00               	movlw	0
 10847  00400C  6FFC               	movwf	_count_sec& (0+255),b
 10848  00400E                     i2l407:
 10849  00400E  0012               	return		;funcret
 10850  004010                     __end_of_counting_ISR:
 10851                           	opt callstack 0
 10852                           
 10853 ;; *************** function _sensorRead_ISR *****************
 10854 ;; Defined at:
 10855 ;;		line 122 in file "source/temperatureSensor.c"
 10856 ;; Parameters:    Size  Location     Type
 10857 ;;		None
 10858 ;; Auto vars:     Size  Location     Type
 10859 ;;		None
 10860 ;; Return value:  Size  Location     Type
 10861 ;;                  1    wreg      void 
 10862 ;; Registers used:
 10863 ;;		wreg, status,2, status,0, cstack
 10864 ;; Tracked objects:
 10865 ;;		On entry : 0/0
 10866 ;;		On exit  : 0/0
 10867 ;;		Unchanged: 0/0
 10868 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10869 ;;      Params:         0       0       0       0       0       0       0       0       0
 10870 ;;      Locals:         0       0       0       0       0       0       0       0       0
 10871 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10872 ;;      Totals:         0       0       0       0       0       0       0       0       0
 10873 ;;Total ram usage:        0 bytes
 10874 ;; Hardware stack levels used:    1
 10875 ;; Hardware stack levels required when called:    1
 10876 ;; This function calls:
 10877 ;;		_ADC_Read
 10878 ;;		_counting_ISR
 10879 ;; This function is called by:
 10880 ;;		_setupTemperatureSensor
 10881 ;;		_my_ISR
 10882 ;; This function uses a non-reentrant model
 10883 ;;
 10884                           
 10885                           	psect	text50
 10886  00415C                     __ptext50:
 10887                           	opt callstack 0
 10888  00415C                     _sensorRead_ISR:
 10889                           	opt callstack 17
 10890                           
 10891                           ;source/temperatureSensor.c: 127:     counting_ISR();
 10892                           
 10893                           ;incstack = 0
 10894  00415C  ECEE  F01F         	call	_counting_ISR	;wreg free
 10895                           
 10896                           ;source/temperatureSensor.c: 130:     if( count_sec_OLD!=count_sec && ADIF==1){
 10897  004160  0100               	movlb	0	; () banked
 10898  004162  51FC               	movf	_count_sec& (0+255),w,b
 10899  004164  19F0               	xorwf	_count_sec_OLD& (0+255),w,b
 10900  004166  E104               	bnz	i2u568_40
 10901  004168  51FD               	movf	(_count_sec+1)& (0+255),w,b
 10902  00416A  19F1               	xorwf	(_count_sec_OLD+1)& (0+255),w,b
 10903  00416C  B4D8               	btfsc	status,2,c
 10904  00416E  0012               	return	
 10905  004170                     i2u568_40:
 10906                           
 10907                           ; BSR set to: 0
 10908  004170  AC9E               	btfss	3998,6,c	;volatile
 10909  004172  0012               	return	
 10910                           
 10911                           ; BSR set to: 0
 10912                           ;source/temperatureSensor.c: 131:         count_sec_OLD=count_sec; ADIF=0;
 10913  004174  C0FC  F0F0         	movff	_count_sec,_count_sec_OLD
 10914  004178  C0FD  F0F1         	movff	_count_sec+1,_count_sec_OLD+1
 10915  00417C  9C9E               	bcf	3998,6,c	;volatile
 10916                           
 10917                           ; BSR set to: 0
 10918                           ;source/temperatureSensor.c: 132:         ADC_Read();
 10919  00417E  EC1C  F021         	call	_ADC_Read	;wreg free
 10920                           
 10921                           ;source/temperatureSensor.c: 133:         ADCON0bits.GO=1;
 10922  004182  82C2               	bsf	4034,1,c	;volatile
 10923  004184  0012               	return		;funcret
 10924  004186                     __end_of_sensorRead_ISR:
 10925                           	opt callstack 0
 10926                           
 10927 ;; *************** function _ADC_Read *****************
 10928 ;; Defined at:
 10929 ;;		line 108 in file "source/temperatureSensor.c"
 10930 ;; Parameters:    Size  Location     Type
 10931 ;;		None
 10932 ;; Auto vars:     Size  Location     Type
 10933 ;;		None
 10934 ;; Return value:  Size  Location     Type
 10935 ;;                  1    wreg      void 
 10936 ;; Registers used:
 10937 ;;		wreg, status,2
 10938 ;; Tracked objects:
 10939 ;;		On entry : 0/0
 10940 ;;		On exit  : 0/0
 10941 ;;		Unchanged: 0/0
 10942 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10943 ;;      Params:         0       0       0       0       0       0       0       0       0
 10944 ;;      Locals:         0       0       0       0       0       0       0       0       0
 10945 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10946 ;;      Totals:         0       0       0       0       0       0       0       0       0
 10947 ;;Total ram usage:        0 bytes
 10948 ;; Hardware stack levels used:    1
 10949 ;; This function calls:
 10950 ;;		Nothing
 10951 ;; This function is called by:
 10952 ;;		_sensorRead_ISR
 10953 ;; This function uses a non-reentrant model
 10954 ;;
 10955                           
 10956                           	psect	text51
 10957  004238                     __ptext51:
 10958                           	opt callstack 0
 10959  004238                     _ADC_Read:
 10960                           	opt callstack 17
 10961                           
 10962                           ;source/temperatureSensor.c: 109:     ADC_results.LOW=ADRESL;
 10963                           
 10964                           ;incstack = 0
 10965  004238  CFC3 F12F          	movff	4035,_ADC_results	;volatile
 10966                           
 10967                           ;source/temperatureSensor.c: 110:     ADC_results.HIGH=ADRESH;
 10968  00423C  CFC4 F130          	movff	4036,_ADC_results+1	;volatile
 10969                           
 10970                           ;source/temperatureSensor.c: 111:     ADC_results.isUpdated=0;
 10971  004240  0E00               	movlw	0
 10972  004242  0101               	movlb	1	; () banked
 10973  004244  6F35               	movwf	(_ADC_results+6)& (0+255),b
 10974                           
 10975                           ; BSR set to: 1
 10976  004246  0012               	return		;funcret
 10977  004248                     __end_of_ADC_Read:
 10978                           	opt callstack 0
 10979                           
 10980                           	psect	text52
 10981  000000                     __ptext52:
 10982                           	opt callstack 0
 10983                           
 10984                           	psect	rparam
 10985  0000                     
 10986                           	psect	temp
 10987  00005D                     btemp:
 10988                           	opt callstack 0
 10989  00005D                     	ds	1
 10990  0000                     int$flags	set	btemp
 10991  0000                     wtemp8	set	btemp+1
 10992  0000                     ttemp5	set	btemp+1
 10993  0000                     ttemp6	set	btemp+4
 10994  0000                     ttemp7	set	btemp+8
 10995                           tosu	equ	0xFFF
 10996                           tosh	equ	0xFFE
 10997                           tosl	equ	0xFFD
 10998                           stkptr	equ	0xFFC
 10999                           pclatu	equ	0xFFB
 11000                           pclath	equ	0xFFA
 11001                           pcl	equ	0xFF9
 11002                           tblptru	equ	0xFF8
 11003                           tblptrh	equ	0xFF7
 11004                           tblptrl	equ	0xFF6
 11005                           tablat	equ	0xFF5
 11006                           prodh	equ	0xFF4
 11007                           prodl	equ	0xFF3
 11008                           indf0	equ	0xFEF
 11009                           postinc0	equ	0xFEE
 11010                           postdec0	equ	0xFED
 11011                           preinc0	equ	0xFEC
 11012                           plusw0	equ	0xFEB
 11013                           fsr0h	equ	0xFEA
 11014                           fsr0l	equ	0xFE9
 11015                           wreg	equ	0xFE8
 11016                           indf1	equ	0xFE7
 11017                           postinc1	equ	0xFE6
 11018                           postdec1	equ	0xFE5
 11019                           preinc1	equ	0xFE4
 11020                           plusw1	equ	0xFE3
 11021                           fsr1h	equ	0xFE2
 11022                           fsr1l	equ	0xFE1
 11023                           bsr	equ	0xFE0
 11024                           indf2	equ	0xFDF
 11025                           postinc2	equ	0xFDE
 11026                           postdec2	equ	0xFDD
 11027                           preinc2	equ	0xFDC
 11028                           plusw2	equ	0xFDB
 11029                           fsr2h	equ	0xFDA
 11030                           fsr2l	equ	0xFD9
 11031                           status	equ	0xFD8


Data Sizes:
    Strings     52
    Constant    51
    Data        10
    BSS         74
    Persistent  2
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     90      92
    BANK0           160    138     159
    BANK1           256      0      63
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    vsnprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> snprintf@ap(BANK0[2]), 

    vsnprintf@fmt	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_101(CODE[3]), STR_100(CODE[3]), 

    vsnprintf@s	PTR unsigned char  size(2) Largest target is 7
		 -> ADC_results(BANK1[7]), buffer(BANK0[4]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 7
		 -> ADC_results(BANK1[7]), buffer(BANK0[4]), 

    strncmp@_r	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_97(CODE[3]), STR_93(CODE[3]), STR_88(CODE[3]), STR_84(CODE[3]), 
		 -> STR_79(CODE[4]), STR_75(CODE[4]), STR_70(CODE[3]), STR_65(CODE[3]), 
		 -> STR_60(CODE[4]), STR_55(CODE[3]), STR_50(CODE[3]), STR_45(CODE[4]), 
		 -> STR_40(CODE[3]), STR_35(CODE[3]), STR_30(CODE[4]), STR_25(CODE[3]), 
		 -> STR_21(CODE[3]), STR_16(CODE[3]), STR_12(CODE[3]), STR_7(CODE[4]), 
		 -> STR_3(CODE[4]), 

    strncmp@r	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_97(CODE[3]), STR_93(CODE[3]), STR_88(CODE[3]), STR_84(CODE[3]), 
		 -> STR_79(CODE[4]), STR_75(CODE[4]), STR_70(CODE[3]), STR_65(CODE[3]), 
		 -> STR_60(CODE[4]), STR_55(CODE[3]), STR_50(CODE[3]), STR_45(CODE[4]), 
		 -> STR_40(CODE[3]), STR_35(CODE[3]), STR_30(CODE[4]), STR_25(CODE[3]), 
		 -> STR_21(CODE[3]), STR_16(CODE[3]), STR_12(CODE[3]), STR_7(CODE[4]), 
		 -> STR_3(CODE[4]), 

    strncmp@_l	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_101(CODE[3]), STR_100(CODE[3]), 

    strncmp@l	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_101(CODE[3]), STR_100(CODE[3]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> ?_snprintf(BANK0[2]), ADC_results.buffer(BANK1[4]), ADC_results(BANK1[7]), buffer(BANK0[4]), 
		 -> stoa@nuls(COMRAM[7]), dbuf(BANK1[32]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> ?_snprintf(BANK0[2]), ADC_results.buffer(BANK1[4]), ADC_results(BANK1[7]), buffer(BANK0[4]), 
		 -> stoa@nuls(COMRAM[7]), dbuf(BANK1[32]), 

    snprintf@fmt	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_101(CODE[3]), STR_100(CODE[3]), 

    snprintf@s	PTR unsigned char  size(2) Largest target is 7
		 -> ADC_results(BANK1[7]), buffer(BANK0[4]), 

    snprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_snprintf(BANK0[2]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(BANK0[6]), 

    S1421_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 7
		 -> ADC_results(BANK1[7]), buffer(BANK0[4]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 7
		 -> ADC_results(BANK1[7]), buffer(BANK0[4]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(BANK0[6]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_101(CODE[3]), STR_100(CODE[3]), 

    sp__update_ADC_results	PTR unsigned char  size(2) Largest target is 7
		 -> ADC_results.buffer(BANK1[4]), ADC_results(BANK1[7]), 

    ptr_ISR	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), sensorRead_ISR(), counting_ISR(), 

    display3@data3	PTR const unsigned char  size(2) Largest target is 7
		 -> ADC_results.buffer(BANK1[4]), ADC_results(BANK1[7]), buffer(BANK0[4]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> snprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(BANK0[6]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_101(CODE[3]), STR_100(CODE[3]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 3
		 -> STR_101(CODE[3]), STR_100(CODE[3]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 2
		 -> ?_snprintf(BANK0[2]), 

    vfpfcnvrt@vp	PTR void  size(2) Largest target is 2
		 -> ?_snprintf(BANK0[2]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(BANK0[6]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> snprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    xtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(BANK0[6]), 

    utoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(BANK0[6]), 

    stoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(BANK0[6]), 

    stoa@s	PTR unsigned char  size(2) Largest target is 2
		 -> ?_snprintf(BANK0[2]), 

    stoa@cp	PTR unsigned char  size(2) Largest target is 7
		 -> ?_snprintf(BANK0[2]), stoa@nuls(COMRAM[7]), 

    otoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(BANK0[6]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(BANK0[6]), 

    ctoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(BANK0[6]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(BANK0[6]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    sp__temperature	PTR unsigned char  size(2) Largest target is 7
		 -> ADC_results.buffer(BANK1[4]), ADC_results(BANK1[7]), 


Critical Paths under _main in COMRAM

    _update_ADC_results->___fldiv
    _snprintf->_vsnprintf
    _vsnprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_xtoa
    _xtoa->_pad
    _toupper->_islower
    _utoa->_pad
    _stoa->_fputc
    _otoa->_pad
    _dtoa->_pad
    _abs->___aomod
    _ctoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _atoi->_isspace
    _Ohm2C->___fldiv
    _logf->___fldiv
    ___flsub->___fladd
    ___fladd->___flmul
    ___flmul->___xxtofl
    ___fldiv->___flsub
    ___fltol->___fldiv

Critical Paths under _my_ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_display3
    _temperature->_update_ADC_results
    _update_ADC_results->_snprintf
    _snprintf->_Ohm2C
    _vfprintf->_vfpfcnvrt
    _Ohm2C->_logf
    _display3->_temperature

Critical Paths under _my_ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _my_ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _my_ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _my_ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _my_ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _my_ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _my_ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _my_ISR in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     0      5   89186
                                            133 BANK0      5     0      5
                           _display3
                    _init_thermistor
                   _setupPortDisplay
             _setupTemperatureSensor
                        _temperature
 ---------------------------------------------------------------------------------
 (1) _temperature                                          2     0      2   88323
                                            123 BANK0      2     0      2
                 _update_ADC_results
 ---------------------------------------------------------------------------------
 (2) _update_ADC_results                                   9     7      2   88323
                                            114 BANK0      9     7      2
                              _Ohm2C
                            ___fldiv
                            ___flmul
                            ___flsub
                            ___fltol
                           ___xxtofl
                           _snprintf
 ---------------------------------------------------------------------------------
 (3) _snprintf                                            12     4      8   46858
                                            102 BANK0     12     4      8
                              _Ohm2C (ARG)
                          _vsnprintf
 ---------------------------------------------------------------------------------
 (4) _vsnprintf                                           22    14      8   46295
                                             86 COMRAM     4     4      0
                                             27 BANK0     18    10      8
                           _vfprintf
 ---------------------------------------------------------------------------------
 (5) _vfprintf                                             8     2      6   45532
                                             78 COMRAM     8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (6) _vfpfcnvrt                                           46    40      6   45071
                                             68 COMRAM    10     4      6
                                              0 BANK0     27    27      0
                               _atoi
                               _ctoa
                               _dtoa
                              _fputc
                            _isdigit
                               _otoa
                               _stoa
                            _strncmp
                               _utoa
                               _xtoa
 ---------------------------------------------------------------------------------
 (7) _xtoa                                                39    28     11    7151
                                             29 COMRAM    39    28     11
                            _isalpha
                            _isupper
                                _pad
                            _toupper
 ---------------------------------------------------------------------------------
 (8) _toupper                                              8     6      2     412
                                              8 COMRAM     8     6      2
                            _islower
 ---------------------------------------------------------------------------------
 (9) _islower                                              6     4      2     161
                                              2 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (8) _isupper                                              6     4      2     161
                                              2 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (8) _isalpha                                              6     4      2     161
                                              2 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (7) _utoa                                                32    22     10    6191
                                             29 COMRAM    32    22     10
                            ___lodiv
                            ___lomod
                                _pad
 ---------------------------------------------------------------------------------
 (8) ___lomod                                             17     1     16     311
                                              2 COMRAM    17     1     16
 ---------------------------------------------------------------------------------
 (8) ___lodiv                                             25     9     16     314
                                              2 COMRAM    25     9     16
 ---------------------------------------------------------------------------------
 (7) _strncmp                                             11     5      6    5013
                                              2 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (7) _stoa                                                22    18      4    2215
                                             11 COMRAM    22    18      4
                              _fputc
                             _strlen
 ---------------------------------------------------------------------------------
 (7) _otoa                                                34    24     10    5636
                                             29 COMRAM    34    24     10
                                _pad
 ---------------------------------------------------------------------------------
 (7) _dtoa                                                36    26     10    6790
                                             29 COMRAM    36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (8) _abs                                                  4     2      2     142
                                             20 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (8) ___aomod                                             18     2     16     448
                                              2 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (8) ___aodiv                                             26    10     16     452
                                              2 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (7) _ctoa                                                 7     4      3    4905
                                             29 COMRAM     5     2      3
                                _pad
 ---------------------------------------------------------------------------------
 (8) _pad                                                 11     5      6    4685
                                             18 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (9) _fputs                                                7     3      4    1691
                                             11 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (10) _fputc                                               9     5      4    1290
                                              2 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (11) _putch                                               1     1      0       0
 ---------------------------------------------------------------------------------
 (7) _atoi                                                15    13      2    1764
                                              9 COMRAM    15    13      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (8) _isspace                                              7     5      2     207
                                              2 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (7) _isdigit                                              6     4      2     313
                                              2 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (8) ___wmul                                               6     2      4     771
                                              2 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) _Ohm2C                                               26    24      2   29099
                                             76 BANK0     26    24      2
                            ___fladd
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
                               _logf
 ---------------------------------------------------------------------------------
 (4) _logf                                                76    72      4   17041
                                              0 BANK0     76    72      4
                            ___fladd
                            ___fldiv
                            ___flmul
                            ___flsub
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (3) ___xxtofl                                            14    10      4     550
                                              2 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (3) ___flsub                                              8     0      8    4713
                                             57 COMRAM     8     0      8
                            ___fladd
 ---------------------------------------------------------------------------------
 (4) ___fladd                                             16     8      8    4086
                                             41 COMRAM    16     8      8
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (3) ___flmul                                             25    17      8    4480
                                             16 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) ___fldiv                                             25    17      8    2007
                                             65 COMRAM    25    17      8
                            ___fladd (ARG)
                            ___flmul (ARG)
                            ___flsub (ARG)
 ---------------------------------------------------------------------------------
 (3) ___fltol                                             10     6      4     517
                                              0 BANK0     10     6      4
                            ___fladd (ARG)
                            ___fldiv (ARG)
                            ___flmul (ARG)
                            ___flsub (ARG)
 ---------------------------------------------------------------------------------
 (1) _setupTemperatureSensor                               0     0      0       0
                          _ADC_setup
                         _setup_TMR0
 ---------------------------------------------------------------------------------
 (2) _setup_TMR0                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADC_setup                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _setupPortDisplay                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_thermistor                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _display3                                             8     6      2     863
                                            125 BANK0      8     6      2
                    _character_table
                         _send_digit
                             _strlen
                        _temperature (ARG)
 ---------------------------------------------------------------------------------
 (9) _strlen                                               4     2      2     318
                                              2 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (2) _send_digit                                           4     4      0     159
                                              2 COMRAM     4     4      0
 ---------------------------------------------------------------------------------
 (2) _character_table                                      3     3      0      22
                                              2 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _my_ISR                                              2     2      0       0
                                              0 COMRAM     2     2      0
                   Absolute function *
                       _counting_ISR *
                     _sensorRead_ISR *
 ---------------------------------------------------------------------------------
 (13) _sensorRead_ISR                                      0     0      0       0
                           _ADC_Read
                       _counting_ISR
 ---------------------------------------------------------------------------------
 (14) _counting_ISR                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _ADC_Read                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (13) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 14
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _display3
     _character_table
     _send_digit
     _strlen
     _temperature (ARG)
       _update_ADC_results
         _Ohm2C
           ___fladd
             ___flmul (ARG)
               ___xxtofl (ARG)
           ___fldiv
             ___fladd (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
             ___flsub (ARG)
               ___fladd
                 ___flmul (ARG)
                   ___xxtofl (ARG)
           ___flmul
             ___xxtofl (ARG)
           ___fltol
             ___fladd (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
             ___fldiv (ARG)
               ___fladd (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
               ___flsub (ARG)
                 ___fladd
                   ___flmul (ARG)
                     ___xxtofl (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
             ___flsub (ARG)
               ___fladd
                 ___flmul (ARG)
                   ___xxtofl (ARG)
           ___xxtofl
           _logf
             ___fladd
               ___flmul (ARG)
                 ___xxtofl (ARG)
             ___fldiv
               ___fladd (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
               ___flsub (ARG)
                 ___fladd
                   ___flmul (ARG)
                     ___xxtofl (ARG)
             ___flmul
               ___xxtofl (ARG)
             ___flsub
               ___fladd
                 ___flmul (ARG)
                   ___xxtofl (ARG)
             ___xxtofl
         ___fldiv
           ___fladd (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
           ___flsub (ARG)
             ___fladd
               ___flmul (ARG)
                 ___xxtofl (ARG)
         ___flmul
           ___xxtofl (ARG)
         ___flsub
           ___fladd
             ___flmul (ARG)
               ___xxtofl (ARG)
         ___fltol
           ___fladd (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
           ___fldiv (ARG)
             ___fladd (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
             ___flsub (ARG)
               ___fladd
                 ___flmul (ARG)
                   ___xxtofl (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
           ___flsub (ARG)
             ___fladd
               ___flmul (ARG)
                 ___xxtofl (ARG)
         ___xxtofl
         _snprintf
           _Ohm2C (ARG)
             ___fladd
               ___flmul (ARG)
                 ___xxtofl (ARG)
             ___fldiv
               ___fladd (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
               ___flsub (ARG)
                 ___fladd
                   ___flmul (ARG)
                     ___xxtofl (ARG)
             ___flmul
               ___xxtofl (ARG)
             ___fltol
               ___fladd (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
               ___fldiv (ARG)
                 ___fladd (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___flsub (ARG)
                   ___fladd
                     ___flmul (ARG)
                       ___xxtofl (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
               ___flsub (ARG)
                 ___fladd
                   ___flmul (ARG)
                     ___xxtofl (ARG)
             ___xxtofl
             _logf
               ___fladd
                 ___flmul (ARG)
                   ___xxtofl (ARG)
               ___fldiv
                 ___fladd (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___flsub (ARG)
                   ___fladd
                     ___flmul (ARG)
                       ___xxtofl (ARG)
               ___flmul
                 ___xxtofl (ARG)
               ___flsub
                 ___fladd
                   ___flmul (ARG)
                     ___xxtofl (ARG)
               ___xxtofl
           _vsnprintf (ARG)
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   ___wmul
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                     _fputs
                       _fputc
                         _putch
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                     ___aomod (ARG)
                   _pad
                     _fputc
                       _putch
                     _fputs
                       _fputc
                         _putch
                     _strlen
                 _fputc
                   _putch
                 _isdigit
                 _otoa
                   _pad
                     _fputc
                       _putch
                     _fputs
                       _fputc
                         _putch
                     _strlen
                 _stoa
                   _fputc
                     _putch
                   _strlen
                 _strncmp
                 _utoa
                   ___lodiv
                   ___lomod
                   _pad
                     _fputc
                       _putch
                     _fputs
                       _fputc
                         _putch
                     _strlen
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                     _fputs
                       _fputc
                         _putch
                     _strlen
                   _toupper
                     _islower
   _init_thermistor
   _setupPortDisplay
   _setupTemperatureSensor
     _ADC_setup
     _setup_TMR0
   _temperature
     _update_ADC_results
       _Ohm2C
         ___fladd
           ___flmul (ARG)
             ___xxtofl (ARG)
         ___fldiv
           ___fladd (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
           ___flsub (ARG)
             ___fladd
               ___flmul (ARG)
                 ___xxtofl (ARG)
         ___flmul
           ___xxtofl (ARG)
         ___fltol
           ___fladd (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
           ___fldiv (ARG)
             ___fladd (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
             ___flsub (ARG)
               ___fladd
                 ___flmul (ARG)
                   ___xxtofl (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
           ___flsub (ARG)
             ___fladd
               ___flmul (ARG)
                 ___xxtofl (ARG)
         ___xxtofl
         _logf
           ___fladd
             ___flmul (ARG)
               ___xxtofl (ARG)
           ___fldiv
             ___fladd (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
             ___flsub (ARG)
               ___fladd
                 ___flmul (ARG)
                   ___xxtofl (ARG)
           ___flmul
             ___xxtofl (ARG)
           ___flsub
             ___fladd
               ___flmul (ARG)
                 ___xxtofl (ARG)
           ___xxtofl
       ___fldiv
         ___fladd (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
         ___flmul (ARG)
           ___xxtofl (ARG)
         ___flsub (ARG)
           ___fladd
             ___flmul (ARG)
               ___xxtofl (ARG)
       ___flmul
         ___xxtofl (ARG)
       ___flsub
         ___fladd
           ___flmul (ARG)
             ___xxtofl (ARG)
       ___fltol
         ___fladd (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
         ___fldiv (ARG)
           ___fladd (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
           ___flsub (ARG)
             ___fladd
               ___flmul (ARG)
                 ___xxtofl (ARG)
         ___flmul (ARG)
           ___xxtofl (ARG)
         ___flsub (ARG)
           ___fladd
             ___flmul (ARG)
               ___xxtofl (ARG)
       ___xxtofl
       _snprintf
         _Ohm2C (ARG)
           ___fladd
             ___flmul (ARG)
               ___xxtofl (ARG)
           ___fldiv
             ___fladd (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
             ___flsub (ARG)
               ___fladd
                 ___flmul (ARG)
                   ___xxtofl (ARG)
           ___flmul
             ___xxtofl (ARG)
           ___fltol
             ___fladd (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
             ___fldiv (ARG)
               ___fladd (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
               ___flsub (ARG)
                 ___fladd
                   ___flmul (ARG)
                     ___xxtofl (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
             ___flsub (ARG)
               ___fladd
                 ___flmul (ARG)
                   ___xxtofl (ARG)
           ___xxtofl
           _logf
             ___fladd
               ___flmul (ARG)
                 ___xxtofl (ARG)
             ___fldiv
               ___fladd (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
               ___flsub (ARG)
                 ___fladd
                   ___flmul (ARG)
                     ___xxtofl (ARG)
             ___flmul
               ___xxtofl (ARG)
             ___flsub
               ___fladd
                 ___flmul (ARG)
                   ___xxtofl (ARG)
             ___xxtofl
         _vsnprintf (ARG)
           _vfprintf
             _vfpfcnvrt
               _atoi
                 ___wmul
                 _isdigit
                 _isspace
               _ctoa
                 _pad
                   _fputc
                     _putch
                   _fputs
                     _fputc
                       _putch
                   _strlen
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                   _fputs
                     _fputc
                       _putch
                   _strlen
               _fputc
                 _putch
               _isdigit
               _otoa
                 _pad
                   _fputc
                     _putch
                   _fputs
                     _fputc
                       _putch
                   _strlen
               _stoa
                 _fputc
                   _putch
                 _strlen
               _strncmp
               _utoa
                 ___lodiv
                 ___lomod
                 _pad
                   _fputc
                     _putch
                   _fputs
                     _fputc
                       _putch
                   _strlen
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                   _fputs
                     _fputc
                       _putch
                   _strlen
                 _toupper
                   _islower

 _my_ISR (ROOT)
   Absolute function(Fake) *
   _counting_ISR *
   _sensorRead_ISR *
     _ADC_Read
     _counting_ISR

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      3F       7       24.6%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     8A      9F       5       99.4%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     5A      5C       1       97.9%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     13A      20        0.0%
DATA                 0      0     13A       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Wed Jul 03 14:56:58 2019

                   ___fldiv@aexp 005A                     ___fldiv@bexp 0059  
                   ___fldiv@sign 0052                               l60 3C62  
                             l80 2634                               l78 262C  
                             _OE 082E                      __CFG_BOR$ON 000000  
            ___wmul@multiplicand 0005                      __CFG_BORV$3 000000  
                   __CFG_CP0$OFF 000000                     __CFG_CP1$OFF 000000  
                   __CFG_CP2$OFF 000000                     __CFG_CP3$OFF 000000  
                            l103 2DB8                              l105 2DC0  
                            l123 3348                              l142 2C08  
                            l144 2C10               __size_of_ADC_setup 0046  
                            l157 281A                              l159 2822  
                            l927 38AE                              l937 3AC8  
                   __CFG_CPB$OFF 000000                     __CFG_CPD$OFF 000000  
                            _SER 0833                              _Lg1 080D  
                            _Lg2 0809                              _Lg3 0805  
                            _Lg4 0801                              _abs 4010  
                            _pad 3C34                              tosl 000FFD  
                            wreg 000FE8                     ___flmul@aexp 0022  
                   ___flmul@bexp 0023                     ___flmul@sign 001D  
                   ___flmul@temp 0028                     ___flmul@prod 0024  
                   __CFG_LVP$OFF 000000                      display3@bit 00E4  
                   ___fltol@exp1 0069                     __CFG_WDT$OFF 000000  
                           l1103 1D52                             l1120 1FF0  
                           l1112 1F6A                             l1113 1F66  
                           l1034 2238                             l1018 2166  
                           l1043 229E                             l1019 2144  
                           ?_abs 0015                             l1044 229A  
                           l1300 3E18                             l1151 325E  
                           l1144 31E0                             l1073 24A2  
                           l1084 2510                             l1164 4038  
                           l1085 250C                             l1327 37E0  
                           l1195 3198                             l4003 1220  
                           l4041 13E2                             l3251 3F90  
                           l4027 12E2                             l4019 1272  
                           l4133 2054                             l3237 3BAC  
                           l3341 2F94                             l3255 413C  
                           l4303 230A                             l4231 21AC  
                           l4223 218A                             l4207 2152  
                           l3247 3F7A                             l3271 3C4C  
                           l3343 2FA8                             l3335 2F6E  
                           l3407 3828                             l4055 1470  
                           l3257 4140                             l5201 395E  
                           l4233 21B0                             l4241 21C2  
                           l4209 2156                             l4153 2098  
                           l4129 2050                             l3281 3C84  
                           l3361 3040                             l3353 3004  
                           l3329 2F46                             l3601 3394  
                           l3409 383C                             l4049 143C  
                           l4403 247A                             l4307 2312  
                           l4251 2228                             l3275 3C5A  
                           l3523 27D2                             l3611 33D4  
                           l3419 3898                             l3435 3AB2  
                           l3427 3A56                             l4083 1556  
                           l4323 3D46                             l5029 39DA  
                           l4421 24D6                             l4309 2314  
                           l4165 20BC                             l4157 209C  
                           l3285 3CB0                             l3277 3C6C  
                           l3357 301A                             l3381 3474  
                           l3373 3436                             l3541 2E00  
                           l3429 3A6A                             l4093 159C  
                           l4069 14C6                             l4325 3D6C  
                           l5207 397A                             l4415 24B8  
                           l4343 2360                             l3447 3F68  
                           l3455 3D9C                             l3383 3488  
                           l3519 27BA                             l3471 260E  
                           l3615 33EC                             l3607 33BA  
                           l4441 2554                             l4409 24A0  
                           l4505 1D70                             l3721 3074  
                           l3457 3DA8                             l3393 34E6  
                           l3377 345A                             l3553 2E86  
                           l4089 1592                             l5241 419A  
                           l4371 23D4                             l4363 23A0  
                           l4339 235C                             l4259 225C  
                           l4275 227C                             l4195 20F8  
                           l3731 30BE                             l3723 3078  
                           l3571 2EF0                             l3715 2A00  
                           l3811 08D4                             l3803 08CC  
                           l4099 15AC                             l5173 38F0  
                           l4445 2578                             l4269 2272  
                           l4613 320E                             l3741 30DC  
                           l3397 350C                             l3389 34D0  
                           l3485 264E                             l3629 2C48  
                           l5253 41DE                             ?_pad 0013  
                           l4455 25AE                             l4359 239C  
                           l4295 22E4                             l4615 3214  
                           l4607 31F0                             l3743 3104  
                           l3583 330C                             l3639 2D34  
                           l3663 2836                             l3831 09AA  
                           l3815 08DE                             l3807 08D0  
                           l5193 394A                             l4457 25B0  
                           l4449 25A2                             l4385 2402  
                           l4377 23EA                             l4553 1F30  
                           l4481 1D12                             l4625 3284  
                           l4617 3220                             l3737 30CE  
                           l3489 265E                             l3593 335E  
                           l3833 09B8                             l3817 0920  
                           l4801 37F8                             l4395 2452  
                           l4547 1F12                             l4643 32D0  
                           l4627 3290                             l4619 3246  
                           l3747 3138                             l3739 30D6  
                           l3499 2756                             l3691 2916  
                           l3931 0EB2                             l3915 0E60  
                           l3907 0DB6                             l3851 0AA0  
                           l5189 393A                             l4573 1FAE  
                           l4477 1CFE                             l4661 16CC  
                           l3597 3376                             l3677 2888  
                           l3669 2866                             l3853 0AAE  
                           l3829 098C                             l5199 3952  
                           l4495 1D3E                             l4479 1D02  
                           l3767 3B14                             l3791 08B2  
                           l4905 369C                             l4841 364C  
                           l4833 3644                             l4577 1FCC  
                           l4497 1D42                             l4681 17D0  
                           l3769 3B22                             l3953 0FCA  
                           l3945 0F92                             l3873 0BFE  
                           l3849 0A82                             l3793 08B4  
                           l4915 36A4                             l4931 3EBE  
                           l4667 1754                             l4675 17B2  
                           l3699 298C                             l3939 0F22  
                           l3867 0B5C                             l3795 08C4  
                           l4909 36A0                             l4861 3660  
                           l4853 3658                             l4845 3650  
                           l4837 3648                             l4829 3640  
                           l4589 200E                             l3949 0F9C  
                           l3877 0C34                             l4781 3746  
                           l4687 17F4                             l3959 0FDC  
                           l3887 0C9A                             l3799 08C8  
                           _ADIF 007CF6                             l4881 3674  
                           l4873 366C                             l4865 3664  
                           l4857 365C                             l4849 3654  
                           l3969 1002                             l3897 0D0E  
                           l3995 1176                             l3987 1108  
                           l3979 1068                             l4787 376E  
                           l4893 3680                             l4885 3678  
                           l4877 3670                             l4869 3668  
                           l4799 37E8                             l4897 368E  
                           l4889 367C                             _DIG1 0832  
                           _DIG2 082D                             _DIG3 082C  
                           STR_1 0838                             STR_3 0838  
                           STR_5 083C                             STR_7 083C  
                           u3000 40CC                             u3010 3FD4  
                           u3020 3FD6                             u3101 2F74  
                           u3030 3E00                             _LATB 000F8A  
                           u3120 2FAC                             u4000 3B6E  
                           u3040 3E02                             u3211 3808  
                           u3060 40FA                             u3070 40FC  
                           u3310 25E0                             u3230 3840  
                           u4110 0AE6                             u3400 2786  
                           u3320 25E2                             u4200 0CCE  
                           u4120 0AE8                             u3401 2784  
                           u3410 2794                             u4130 0AF6  
                           u5020 2506                             u3180 348C  
                           u3420 2798                             u3260 3A6E  
                           u4300 102E                             u4220 0D66  
                           u4060 09F0                             u3350 2622  
                           u3510 2EB6                             u4070 09F2  
                           u3440 27A4                             u3520 2EC4  
                           u4160 0BB4                             u4080 0A00  
                           u5210 1F60                             u3290 3F64  
                           u3370 2648                             u3530 2EC8  
                           u3610 338A                             u5060 2562  
                           u3380 2764                             u3700 2D6C  
                           u4420 14A4                             u4260 0EDE  
                           u4180 0C8C                             u5070 2586  
                           u3470 2DAE                             u3710 2D70  
                           u5160 1D5E                             u4600 216E  
                           u5400 1654                             u3480 2E62  
                           u3640 3400                             u2920 409A  
                           u3800 28F6                             u4440 151E  
                           u4360 129E                             u3561 32EC  
                           u5250 1FBC                             u5170 1ED4  
                           u3490 2E94                             u2930 409C  
                           u3730 2810                             u5260 1FDA  
                           u5340 329A                             u5420 16EA  
                           u3900 30BA                             u3660 2BFE  
                           u3820 2968                             u4380 133A  
                           u3485 2E50                             u4550 211A  
                           u2870 3BA4                             u3830 299C  
                           u3750 2884                             u5175 1ECA  
                           u4560 212A                             u3920 3168  
                           u3760 28BA                             u5425 16E0  
                           u3825 2956                             u4810 22F0  
                           u4730 2280                             u4570 212C  
                           u3930 316A                             u2890 3BEC  
                           u3690 2D5E                             u3850 29BE  
                           u3770 28BC                             u3691 2D5C  
                           u3851 29BC                             u5460 182C  
                           u5380 1626                             u2980 401E  
                           u3860 29CC                             u5710 38DE  
                           u4750 2294                             u5390 1644  
                           u2990 40CA                             u3870 29D0  
                           u3790 28F4                             u5550 375A  
                           u5720 390E                             u5465 1822  
                           u5395 163A                             u5725 3904  
                           u5590 3EF0                             u5654 39B6  
                           u5807 3A30                             u5655 39B2  
                           _RCLK 082F                             u5664 39CE  
                           u5760 3964                             u5665 39CA  
                           u5797 3A08                             abs@a 0015  
                           _dbuf 010F                             _atoi 3062  
                           _ctoa 3D88                             _main 41D2  
                           _dtoa 25B8                             _logf 15E0  
                           _prec 00F6                             _otoa 2D9A  
                           _nout 00F2                             pad@i 001A  
                           pad@p 0017                             fsr1h 000FE2  
                           fsr2h 000FDA                             indf2 000FDF  
                           fsr1l 000FE1                             pad@w 001C  
                           fsr2l 000FD9                             _stoa 32E2  
                           btemp 005D                             _utoa 2BEA  
                           _xtoa 27FC                 __end_of_ADC_Read 4248  
                           prodh 000FF4                             prodl 000FF3  
                           start 000E                       _Ohm2C$1780 00BA  
                     _Ohm2C$1781 00BE                       _Ohm2C$1777 00AE  
                     _Ohm2C$1778 00B2                       _Ohm2C$1779 00B6  
                  __CFG_IESO$OFF 000000                  ___fldiv@new_exp 0053  
              ??_init_thermistor 0003                     ___param_bank 000000  
                          ??_abs 0017                            ??_pad 0019  
         _setupTemperatureSensor 41F0                    __CFG_PLLDIV$1 000000  
                 __CFG_CCP2MX$ON 000000                    ___fltol@sign1 0068  
                __end_of___aodiv 3062                            ?_atoi 000A  
                          ?_ctoa 001E                  __end_of___fladd 2330  
                          ?_main 00E5                            ?_dtoa 001E  
                __end_of___aomod 352E                            ?_logf 0060  
                __end_of___fldiv 25B8                            STR_12 0839  
                          STR_21 0856                            STR_30 0844  
                          STR_23 0859                            STR_16 083D  
                          STR_40 085F                            STR_25 0859  
                          STR_50 0841                            STR_35 0845  
                          STR_19 0856                            STR_43 0840  
                          STR_60 0848                            STR_28 0844  
                          STR_45 0840                            STR_53 085C  
                          STR_70 0862                            STR_38 085F  
                          STR_55 085C                            STR_65 0849  
                          STR_73 084C                            STR_58 0848  
                          STR_75 084C                            STR_91 0865  
                          STR_84 084D                            STR_68 0862  
                          STR_93 0865                            STR_77 0834  
                          STR_79 0834                            STR_95 0853  
                          STR_88 0835                  __end_of___flmul 2024  
                          STR_97 0853                            ?_otoa 001E  
                __end_of___flsub 3E68                  __end_of___fltol 398C  
                          _CMCON 000FB4                            ?_stoa 000C  
                          _BIT_0 082B                            ?_utoa 001E  
                          _BIT_1 082A                            _BIT_2 0829  
                          _BIT_3 0828                            _BIT_4 0827  
                          _BIT_5 0826                            _BIT_6 0825  
                          _BIT_7 0824                            _T0CON 000FD5  
                __end_of___lodiv 38D0                            ?_xtoa 001E  
                __end_of___lomod 3AEA                            i2l407 400E  
                   vfpfcnvrt@fmt 0047                            _TMR0H 000FD7  
                   vfpfcnvrt@llu 0073                            _TMR0L 000FD6  
                          _PORTB 000F81                            _SRCLK 0831  
                          _SRCLR 0830                    __CFG_USBDIV$1 000000  
                          _TRISB 000F93                    __CFG_PWRT$OFF 000000  
                          _Ohm2C 2A2A                    __CFG_WRT0$OFF 000000  
                  __CFG_WRT1$OFF 000000                    __CFG_WRT2$OFF 000000  
                  __CFG_WRT3$OFF 000000                   __CFG_EBTR0$OFF 000000  
                 __CFG_FCMEN$OFF 000000                   __CFG_EBTR1$OFF 000000  
                 __CFG_EBTR2$OFF 000000                   __CFG_EBTR3$OFF 000000  
                  __CFG_WRTB$OFF 000000                    __CFG_WRTC$OFF 000000  
                  __CFG_WRTD$OFF 000000                   __CFG_EBTRB$OFF 000000  
                          _flags 005B                            _count 00FE  
                          _errno 00EE                            _fputc 3B94  
                __end_of_isalpha 3FDC                            _fputs 3F70  
                __end_of_isdigit 4102                            atoi@n 0017  
                          pad@fp 0013                            atoi@s 000A  
                          _width 00F4                            ctoa@c 0020  
                          _putch 4252                            ctoa@w 0021  
                          dtoa@d 0020                            dtoa@i 0040  
                          dtoa@n 0038                            dtoa@p 0032  
                          dtoa@s 0036                            dtoa@w 0034  
                __end_of_islower 40A2                  __end_of_isspace 3F70  
                          logf@R 006A                            logf@f 00A4  
                          logf@k 0086                            logf@s 0090  
                          logf@u 00A0                            logf@w 0098  
                          logf@x 0060                            logf@z 0094  
                __end_of_isupper 40D2                            pclath 000FFA  
                          tablat 000FF5                    ?_counting_ISR 0001  
                          otoa@d 0020                            otoa@i 003E  
                          otoa@n 0036                            otoa@p 0030  
                          otoa@t 0032                            otoa@w 0034  
                          plusw1 000FE3                            plusw2 000FDB  
                          stoa@i 0018                            stoa@l 0020  
                          stoa@p 001E                            stoa@s 000E  
                          stoa@w 001A                            ttemp5 005E  
                          ttemp6 0061                            ttemp7 0065  
                          utoa@d 0020                            utoa@i 003C  
                          utoa@n 0034                            utoa@p 0030  
                          utoa@w 0032                            status 000FD8  
                          wtemp8 005E                            xtoa@c 0043  
                          xtoa@d 0020                            xtoa@i 0041  
                          xtoa@n 0039                            xtoa@p 0035  
                          xtoa@w 0037                            xtoa@x 0028  
             _update_ADC_results 352E                  __end_of_strncmp 3B94  
                __end_of_toupper 3E22                 ___lodiv@dividend 0003  
              __end_of_ADC_setup 3EAE                     __end_of_DIG1 0833  
                   __end_of_DIG2 082E                     __end_of_DIG3 082D  
                   __end_of_RCLK 0830                     _toupper$1488 000F  
                 __CFG_MCLRE$OFF 000000                  __initialization 3CCA  
            ?_update_ADC_results 00D2                     __end_of_atoi 31A2  
                   __end_of_ctoa 3DD8                     __end_of_main 41F0  
                   __end_of_dtoa 27FC                     __end_of_logf 1CD2  
                   __end_of_otoa 2F1A                     __end_of_stoa 340A  
                   __end_of_utoa 2D9A                     __end_of_xtoa 2A2A  
                         ??_atoi 000C                           ??_ctoa 0021  
                         ??_main 005B                           ??_dtoa 0028  
                         ??_logf 0064                    _count_sec_OLD 00F0  
                         ??_otoa 0028                           ??_stoa 0010  
                         ??_utoa 0028                           ??_xtoa 0029  
                  __activetblptr 000002           update_ADC_results@Vout 00D7  
                  display3@data3 00DD                           ?_Ohm2C 00AC  
               ___lodiv@quotient 0013                    display3@csize 00E3  
           ??_update_ADC_results 00D4                           _ADCON1 000FC1  
                         ?_fputc 0003                           STR_100 0850  
                         STR_101 0850                           ?_fputs 000C  
                         _ADRESH 000FC4                           _ADRESL 000FC3  
                         ?_putch 0001                   ??_counting_ISR 0001  
       __end_ofcharacter_table@a 0823         __end_ofcharacter_table@b 0822  
       __end_ofcharacter_table@c 0821         __end_ofcharacter_table@d 0820  
       __end_ofcharacter_table@e 081F         __end_ofcharacter_table@f 081E  
       __end_ofcharacter_table@g 081D         __end_ofcharacter_table@h 081C  
       __end_ofcharacter_table@o 0824                           _INTCON 000FF2  
                         _OSCCON 000FD3                    vfpfcnvrt@done 0062  
                         Ohm2C@x 00AC                 __end_of___xxtofl 32E2  
                _character_table 363C                   __CFG_XINST$OFF 000000  
               _setupPortDisplay 420E                     vfprintf@cfmt 0055  
               __end_of_display3 3A3C                        ??___aodiv 0013  
                      ??___fladd 0032                        ??___aomod 0013  
                         ___wmul 41AC                           _ln2_hi 0815  
                      ??___fldiv 004A                           _ln2_lo 0811  
                 __CFG_STVREN$ON 000000                        ??___flmul 0019  
                      ??___flsub 0042                        ??___fltol 0064  
                      ??___lodiv 0013                        ??___lomod 0013  
                         _buffer 00F8                           _my_ISR 0008  
                         clear_0 3D0E                           clear_1 3D1A  
                         pad@buf 0015                           ctoa@fp 001E  
                         dtoa@fp 001E                           _strlen 4132  
                   ?_temperature 00DB                           logf@t1 006E  
                         logf@t2 0072                           logf@dk 008C  
                         logf@ix 00A8                           fputc@c 0003  
                         fputs@c 0010                           fputs@i 0011  
                         fputs@s 000C                        ??_isalpha 0005  
                      ??_isdigit 0005                        ?_ADC_Read 0001  
                      ??_islower 0005                     __mediumconst 0000  
                      ??_isspace 0005                           otoa@fp 001E  
                         tblptrh 000FF7                        ??_isupper 0005  
                         tblptrl 000FF6                           tblptru 000FF8  
                         stoa@cp 001C                           stoa@fp 000C  
                         putch@c 0001                 __end_of_vfprintf 3D88  
                         utoa@fp 001E                 __end_of_snprintf 4072  
                         xtoa@fp 001E                        ??_strncmp 0009  
                      ??_toupper 000B                     ___xxtofl@arg 000D  
                   ___xxtofl@exp 000C                     ___xxtofl@val 0003  
                     __accesstop 0060          __end_of__initialization 3D24  
                __CFG_PBADEN$OFF 000000                    ___rparam_used 000001  
                  __end_of_BIT_0 082C                    __end_of_BIT_1 082B  
                  __end_of_BIT_2 082A                    __end_of_BIT_3 0829  
                  __end_of_BIT_4 0828                    __end_of_BIT_5 0827  
                  __end_of_BIT_6 0826                    __end_of_BIT_7 0825  
                     ___fltol@f1 0060                    __end_of_SRCLK 0832  
                  __end_of_SRCLR 0831                    __end_of_Ohm2C 2BEA  
                 __pcstackCOMRAM 0001            character_table@symbol 0005  
                   __pidataBANK0 424F                     __pidataBANK1 4248  
                  __end_of_fputc 3C34                    __end_of_fputs 3FA8  
                  __end_of_putch 4254                       __end_of_OE 082F  
                     ??_ADC_Read 0001                          ??_Ohm2C 005B  
               display3@dig_mask 0819                          ??_fputc 0007  
                        ??_fputs 0010                          ??_putch 0003  
                _init_thermistor 3EF2                       __pbssBANK0 00EA  
                     __pbssBANK1 0100          __end_of_character_table 372E  
        ?_setupTemperatureSensor 0001                          ?___wmul 0003  
                        ?_my_ISR 0001             __end_of_counting_ISR 4010  
                        ?_strlen 0003                        ?___xxtofl 0003  
             __size_of_vfpfcnvrt 0D76                      send_digit@a 0005  
                    send_digit@i 0003                        ?_display3 00DD  
               ___lomod@dividend 0003                  __CFG_VREGEN$OFF 000000  
 __end_of_setupTemperatureSensor 420E                          __Hparam 0000  
                        __Lparam 0000               __size_of_vsnprintf 00D4  
                      _ADC_setup 3E68                          ___aodiv 2F1A  
                        ___fladd 2024                          ___aomod 340A  
                        ___fldiv 2330                          ___flmul 1CD2  
                        ___flsub 3E22                          ___fltol 38D0  
                __size_of___wmul 0026                          ___lodiv 3802  
                        ___lomod 3A3C                        ?_vfprintf 004F  
                   __psmallconst 0800                        ?_snprintf 00C6  
                        __pcinit 3CCA                  __size_of_my_ISR 412A  
                        __ramtop 0800          __size_of_sensorRead_ISR 002A  
                        __ptext0 41D2                          __ptext1 4186  
                        __ptext2 352E                          __ptext3 4042  
                        __ptext4 372E                          __ptext5 3D32  
                        __ptext6 086A                          __ptext7 27FC  
                        __ptext8 3DD8                          __ptext9 4072  
                __size_of_strlen 002A                     __size_of_abs 0032  
                   __size_of_pad 0096                          _isalpha 3FA8  
                        _isdigit 40D2                       ??___xxtofl 0007  
        __end_of_init_thermistor 3F32                          _islower 4072  
                        _isspace 3F32             __size_of_temperature 0026  
                        _isupper 40A2         __end_of_setupPortDisplay 4224  
                        _ptr_ISR 013D                          atoi@neg 0010  
                     ??_display3 00DF                          _strncmp 3AEA  
                 __pintcode_body 4102                          _toupper 3DD8  
           end_of_initialization 3D24                 ?_character_table 0001  
                        fputc@fp 0005                       _send_digit 3EAE  
                  __Lmediumconst 0000                          int_func 4102  
                        fputs@fp 000E                __end_of_vfpfcnvrt 15E0  
                     ?_ADC_setup 0001                          postdec1 000FE5  
                        postdec2 000FDD                        Ohm2C@logR 00C2  
                        postinc0 000FEE                          postinc1 000FE6  
                        postinc2 000FDE                       ??_vfprintf 0055  
                     ??_snprintf 005B                       _thermistor 0100  
                        strlen@a 0005                          strlen@s 0003  
                     _setup_TMR0 4224                      ___fladd@grs 0039  
                  ___xxtofl@sign 000B                        _TRISAbits 000F92  
              __end_of_vsnprintf 3802                      ___fldiv@grs 0055  
                    ___fldiv@rem 004E      __size_of_update_ADC_results 010E  
              __size_of_ADC_Read 0010                      ___flmul@grs 001E  
          __size_of_counting_ISR 0034         __end_ofdisplay3@dig_mask 081A  
           update_ADC_results@Rt 00D5                      vfpfcnvrt@ap 0049  
                    vfpfcnvrt@cp 0060                      vfpfcnvrt@fp 0045  
                    vfpfcnvrt@ll 0068                   __end_of___wmul 41D2  
                    vfpfcnvrt@vp 0070                   __end_of_ln2_hi 0819  
                 __end_of_ln2_lo 0815                   __end_of_my_ISR 4132  
                 __end_of_strlen 415C              start_initialization 3CCA  
                ___lodiv@divisor 000B                 ?_init_thermistor 0001  
                ___lodiv@counter 001B                      __end_of_SER 0834  
                    __end_of_Lg1 0811                      __end_of_Lg2 080D  
                    __end_of_Lg3 0809                      __end_of_Lg4 0805  
                    __end_of_abs 4042                      __end_of_pad 3CCA  
     __end_ofsend_digit@com_mask 081B                     _counting_ISR 3FDC  
                    ?_send_digit 0001                      vfprintf@fmt 0051  
                    ??_ADC_setup 0003                         ??___wmul 0007  
                    __pdataBANK0 00FC                      __pdataBANK1 0136  
                    _ADC_results 012F                 __CFG_LPT1OSC$OFF 000000  
                       ??_my_ISR 0001                   _sensorRead_ISR 415C  
                    ?_setup_TMR0 0001                         ??_strlen 0005  
                      ___fladd@a 002E                        ___fladd@b 002A  
                   vsnprintf@cnt 0085                     vsnprintf@fmt 007F  
                      ___fldiv@a 0046                        ___fldiv@b 0042  
                      ___flmul@a 0015                        ___flmul@b 0011  
                    __pbssCOMRAM 005B                        ___flsub@a 003E  
                      ___flsub@b 003A                    __pcstackBANK0 0060  
               ___aodiv@dividend 0003                      snprintf@fmt 00CA  
              __size_of___xxtofl 0140                __size_of_display3 00B0  
                      _atoi$1353 0012                        _atoi$1354 0016  
                      _atoi$1355 0014                        __pnvBANK1 013D  
                      __pintcode 0008                         ?___aodiv 0003  
                       ?___fladd 002A                         ?___aomod 0003  
                       ?___fldiv 0042                 ___aodiv@quotient 0015  
                       ?___flmul 0011                         ?___flsub 003A  
                       ?___fltol 0060           __end_of_sensorRead_ISR 4186  
                       ?___lodiv 0003                         ?___lomod 0003  
                      _logf$1782 009C                        _logf$1783 0076  
                      _logf$1784 007A                        _logf$1785 007E  
                      _logf$1786 0082                __size_of_vfprintf 0056  
              __size_of_snprintf 0030              __size_of_send_digit 0044  
                ___lomod@divisor 000B                      __smallconst 0800  
                ___lomod@counter 0013                         ?_isalpha 0003  
                       ?_isdigit 0003                         _ADC_Read 4238  
                      _count_sec 00FC                         ?_islower 0003  
                 __size_of_Ohm2C 01C0                         ?_isspace 0003  
                       ?_isupper 0003                ?_setupPortDisplay 0001  
                 __size_of_fputc 00A0                   __size_of_fputs 0038  
                       ?_strncmp 0003                         ?_toupper 0009  
                 __size_of_putch 0002               ??_setupPortDisplay 0003  
                 ___wmul@product 0007              __size_of_setup_TMR0 0014  
                       _PIE1bits 000F9D                         _PIR1bits 000F9E  
                       i2u570_48 4110                         i2u570_49 4126  
                       i2u568_40 4170                         _RCONbits 000FD0  
               __CFG_WDTPS$32768 000000                  ?_sensorRead_ISR 0001  
                      _vfpfcnvrt 086A                       _ADCON0bits 000FC2  
                     _ADCON1bits 000FC1                       _ADCON2bits 000FC0  
                  ??_temperature 005B                ___wmul@multiplier 0003  
                   _isspace$1380 0009                       vfpfcnvrt@c 0072  
                      copy_data0 3CDE                        _vsnprintf 372E  
                       __Hrparam 0000                       vfprintf@ap 0053  
                       __Lrparam 0000                       vfprintf@fp 004F  
       __size_of_character_table 00F2                 __size_of___aodiv 0148  
               __size_of___fladd 030C                 __size_of___aomod 0124  
               __size_of___fldiv 0288                      vsnprintf@ap 0081  
               __size_of___flmul 0352                 __size_of___flsub 0046  
               __size_of___fltol 00BC                 __size_of___lodiv 00CE  
               __size_of___lomod 00AE                       ?_vfpfcnvrt 0045  
                     snprintf@ap 00D0                  ___aodiv@divisor 000B  
                ___aodiv@counter 0013                         ___xxtofl 31A2  
     __end_of_update_ADC_results 363C                 __size_of_isalpha 0034  
               __size_of_isdigit 0030                         _dtoa$147 0030  
               __size_of_islower 0030                 __size_of_isspace 003E  
                       __ptext10 40A2                         __ptext11 3FA8  
                       __ptext20 340A                         __ptext12 2BEA  
                       __ptext21 2F1A                         __ptext13 3A3C  
                       __ptext30 41AC                         __ptext22 3D88  
                       __ptext14 3802                         __ptext31 2A2A  
                       __ptext23 3C34                         __ptext15 3AEA  
                       __ptext40 4224                         __ptext32 15E0  
                       __ptext24 3F70                         __ptext16 32E2  
                       __ptext41 3E68                         __ptext33 31A2  
                       __ptext25 3B94                         __ptext17 2D9A  
                       __ptext50 415C                         __ptext42 420E  
                       __ptext34 3E22                         __ptext26 4252  
                       __ptext18 25B8                         __ptext51 4238  
                       __ptext43 3EF2                         __ptext35 2024  
                       __ptext27 3062                         __ptext19 4010  
                       __ptext52 0000                         __ptext44 398C  
                       __ptext36 1CD2                         __ptext28 3F32  
                       __ptext45 4132                         __ptext37 2330  
                       __ptext29 40D2                         __ptext46 3EAE  
                       __ptext38 38D0                         __ptext47 363C  
                       __ptext39 41F0                         __ptext49 3FDC  
               __size_of_isupper 0030              __end_of_temperature 41AC  
                       _display3 398C         ??_setupTemperatureSensor 0003  
               __size_of_strncmp 00AA                 __size_of_toupper 004A  
                     ?_vsnprintf 007B                     ??_send_digit 0003  
                  __size_of_atoi 0140                    __size_of_ctoa 0050  
                  __size_of_main 001E                    __size_of_dtoa 0244  
                  __size_of_logf 06F2                    __size_of_otoa 0180  
                  __size_of_stoa 0128                    __size_of_utoa 01B0  
                  __size_of_xtoa 022E               send_digit@com_mask 081A  
                      stoa@F1152 0136                         int$flags 005D  
                       _xtoa$183 0031                         _xtoa$184 0033  
                       _vfprintf 3D32                         _snprintf 4042  
                       main@argc 00E5                         main@argv 00E7  
                   ??_setup_TMR0 0003                 ___aomod@dividend 0003  
          __CFG_CPUDIV$OSC1_PLL2 000000                         logf@F469 00EA  
             __end_of_send_digit 3EF2                       _INTCONbits 000FF2  
                       logf@hfsq 0088                         isalpha@c 0003  
                       isdigit@c 0003                       vsnprintf@f 0087  
                     vsnprintf@n 007D                       vsnprintf@s 007B  
                      snprintf@n 00C8                        snprintf@s 00C6  
                       intlevel2 0000         __size_of_init_thermistor 0040  
                       islower@c 0003                         isspace@c 0003  
             __end_of_setup_TMR0 4238                         isupper@c 0003  
                      strncmp@_l 0003                        strncmp@_r 0005  
                ___aomod@divisor 000B                 character_table@a 0822  
               character_table@b 0821                 character_table@c 0820  
               character_table@d 081F                 character_table@e 081E  
               character_table@f 081D                 character_table@g 081C  
               character_table@h 081B                 character_table@o 0823  
                    ??_vfpfcnvrt 004B                         stoa@nuls 0011  
                  _vfpfcnvrt$198 0064                    _vfpfcnvrt$199 0066  
                ___aomod@counter 0013                ??_character_table 0003  
                    _temperature 4186              __CFG_FOSC$INTOSC_EC 000000  
                 _vsnprintf$1520 0083                         strncmp@l 000A  
                       strncmp@n 0007                         strncmp@r 000C  
                       toupper@c 0009                    ___fladd@signs 0036  
                   ___aodiv@sign 0014                      ??_vsnprintf 0057  
__size_of_setupTemperatureSensor 001E                     ___fladd@aexp 0037  
                   ___fladd@bexp 0038                   send_digit@data 0006  
               ??_sensorRead_ISR 0001                     ___aomod@sign 0014  
      __size_of_setupPortDisplay 0016  
